package FlyingUnitDefinition

// Standard library imports:
import Assets
import UnitObjEditing
import ObjectIds
import LinkedList

// Local imports:
import LocalObjectIDs

// The abilities for a standard hawk.
constant HAWK_ABIL = commaList(
    AbilityIds.wander,
    AbilityIds.inventory,
    AbilityIds.trueSight1
)


public let flyingPetBasicAbilities = asList(
    ABILITY_PET_REVIVE_INFO,
    ABILITY_PET_ARMOR_UPGD,
    ABILITY_PET_MAGIC_RESIST_UPGD,
    ABILITY_PET_HEALTH_UPGD,
    ABILITY_PET_SNACK
)

public let flyingPetBasicUpgrades = asList(
        UPGD_PET_ARMOR,
        UPGD_PET_MAGIC_RESISTANCE,
        UPGD_PET_HEALTH
)

constant FLYING_PET_BASIC_ABIL = flyingPetBasicAbilities.joinBy((int i) -> i.toRawCode(), ",")
constant FLYING_PET_BASIC_UPGD = flyingPetBasicUpgrades.joinBy((int i) -> i.toRawCode(), ",")

function createBaseHawk(int unitId) returns UnitDefinition
    return new UnitDefinition(unitId, UnitIds.wareagle1)
        ..setGoldBountyAwardedBase(0)
        ..setGoldBountyAwardedNumberofDice(0)
        ..setGoldBountyAwardedSidesperDie(0)
        ..setSightRadiusDay(125)
        ..setSightRadiusNight(125)
        ..setHitPointsRegenerationType("")
        ..setNameEditorSuffix("(Wurst)")
        ..setUpgradesUsed("")
        ..setDefenseUpgradeBonus(1)

@compiletime function createHawk() returns UnitDefinition
    return createBaseHawk(UNIT_HAWK)
        ..setNormalAbilities(HAWK_ABIL)
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(4)
        ..setHitPointsMaximumBase(135)
        ..setName("Hawk")

@compiletime function createHawkHatchling() returns UnitDefinition
    return createBaseHawk(UNIT_HAWK_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_HAWK_SIGHT.toRawCode()
                             + "," + ABILITY_PET_HAWK_SIGHT_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_HAWK_SIGHT.toRawCode()
                          )
        ..setScalingValue(0.5)
        ..setSpeedBase(300)
        ..setLevel(0)
        ..setHitPointsMaximumBase(45)
        ..setName("Hawk Hatchling")
        ..setManaMaximum(100)
        ..setManaInitialAmount(0)
        ..setAnimationCastBackswing(0.2)
        ..setAnimationCastPoint(0.2)

function createBaseDragonHatchlingDefinition(int unitId) returns UnitDefinition
    return new UnitDefinition(unitId, UnitIds.greendragonwhelp)
        ..setAttacksEnabled(0)
        ..setGoldBountyAwardedBase(0)
        ..setGoldBountyAwardedNumberofDice(0)
        ..setGoldBountyAwardedSidesperDie(0)
        ..setSightRadiusDay(125)
        ..setSightRadiusNight(125)
        ..setHitPointsRegenerationType("")
        ..setNameEditorSuffix("(Wurst)")
        ..setUpgradesUsed("")
        ..setDefenseUpgradeBonus(1)
        ..setTintingColorRed(255)
        ..setTintingColorGreen(255)
        ..setTintingColorBlue(255)
        ..setAnimationCastBackswing(0.2)
        ..setAnimationCastPoint(0.2)
        ..setManaInitialAmount(0)
        ..setManaMaximum(100)
        ..setScalingValue(0.5)
        ..setSelectionScale(1)
        ..setSpeedBase(300)
        ..setLevel(0)
        ..setHitPointsMaximumBase(75)
        ..setTurnRate(0.10)
        ..setSelectionCircleHeight(200)
        ..setDefenseBase(0)
        ..setCategorizationSpecial(true)
        ..setCollisionSize(16)
        ..setElevationSampleRadius(20)
        ..setCategorizationSpecial(true)
        ..setGoldCost(0)
        ..setLumberCost(0)
        ..setBuildTime(20)

@compiletime function fireDragonHatchling() returns UnitDefinition
    return createBaseDragonHatchlingDefinition(UNIT_FIRE_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_FIRE_BREATH.toRawCode()
                             + "," + ABILITY_PET_FIRE_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_FIRE_BREATH.toRawCode()
                          )
        ..setName("Fire Dragon Hatchling")
        ..setModelFile(Units.redDragonWelp)
        ..setIconGameInterface(Icons.bTNRedDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function corrosiveDragonHatchling() returns UnitDefinition
    return createBaseDragonHatchlingDefinition(UNIT_CORROSIVE_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_CORROSIVE_BREATH.toRawCode()
                             + "," + ABILITY_PET_CORROSIVE_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_CORROSIVE_BREATH.toRawCode()
                          )
        ..setName("Corrosive Dragon Hatchling")
        ..setModelFile(Units.greenDragonWelp)
        ..setIconGameInterface(Icons.bTNGreenDragon)

@compiletime function frostDragonHatchling() returns UnitDefinition
    return createBaseDragonHatchlingDefinition(UNIT_FROST_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_GLACIAL_BREATH.toRawCode()
                             + "," + ABILITY_PET_GLACIAL_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_GLACIAL_BREATH.toRawCode()
                          )
        ..setName("Frost Dragon Hatchling")
        ..setModelFile(Units.azureDragonWelp)
        ..setIconGameInterface(Icons.bTNAzureDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function stormDragonHatchling() returns UnitDefinition
    return createBaseDragonHatchlingDefinition(UNIT_STORM_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_STORM_BREATH.toRawCode()
                             + "," + ABILITY_PET_STORM_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_STORM_BREATH.toRawCode()
                          )
        ..setName("Storm Dragon Hatchling")
        ..setModelFile(Units.bronzeDragonWelp)
        ..setIconGameInterface(Icons.bTNBronzeDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function netherDragonHatchling() returns UnitDefinition
    return createBaseDragonHatchlingDefinition(UNIT_NETHER_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_NETHER_BREATH.toRawCode()
                             + "," + ABILITY_PET_NETHER_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_NETHER_BREATH.toRawCode()
                          )
        ..setName("Nether Dragon Hatchling")
        ..setModelFile(Units.netherDragon)
        ..setIconGameInterface(Icons.bTNNetherDragon)
        ..setHitPointsMaximumBase(75)


// Matured
@compiletime function createTamedHawk() returns UnitDefinition
    return createBaseHawk(UNIT_TAMED_HAWK)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_HAWK_SIGHT.toRawCode()
                             + "," + ABILITY_PET_HAWK_SIGHT_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_HAWK_SIGHT.toRawCode()
                          )
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(0)
        ..setHitPointsMaximumBase(90)
        ..setName("Tamed Hawk")
        ..setManaMaximum(100)
        ..setManaInitialAmount(0)

function createDragonDefinition(int unitId) returns UnitDefinition
    return new UnitDefinition(unitId, UnitIds.greendrake)
        ..setAttacksEnabled(0)
        ..setGoldBountyAwardedBase(0)
        ..setGoldBountyAwardedNumberofDice(0)
        ..setGoldBountyAwardedSidesperDie(0)
        ..setSightRadiusDay(125)
        ..setSightRadiusNight(125)
        ..setHitPointsRegenerationType("")
        ..setNameEditorSuffix("(Wurst)")
        ..setUpgradesUsed("")
        ..setDefenseUpgradeBonus(1)
        ..setDefenseBase(0)
        ..setHitPointsRegenerationRate(0)
        ..setAnimationCastBackswing(0.2)
        ..setAnimationCastPoint(0.2)
        ..setManaInitialAmount(0)
        ..setTurnRate(0.10)
        ..setSelectionCircleHeight(200)
        ..setHitPointsMaximumBase(165)
        ..setManaMaximum(100)
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(0)
        ..setCategorizationSpecial(true)
        ..setGoldCost(0)
        ..setLumberCost(0)

@compiletime function fireDragonDefinition() returns UnitDefinition
    return createDragonDefinition(UNIT_FIRE_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_FIRE_BREATH.toRawCode()
                             + "," + ABILITY_PET_FIRE_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_FIRE_BREATH.toRawCode()
                         )
        ..setModelFile(Units.redDragon1)
        ..setIconGameInterface(Icons.bTNRedDragon)
        ..setName("Tamed Fire Dragon")

@compiletime function corrosiveDragonDefinition() returns UnitDefinition
    return createDragonDefinition(UNIT_CORROSIVE_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_CORROSIVE_BREATH.toRawCode()
                             + "," + ABILITY_PET_CORROSIVE_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_CORROSIVE_BREATH.toRawCode()
                          )
        ..setModelFile(Units.greenDragon1)
        ..setIconGameInterface(Icons.bTNGreenDragon)
        ..setName("Tamed Corrosive Dragon")

@compiletime function frostDragonDefinition() returns UnitDefinition
    return createDragonDefinition(UNIT_FROST_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_GLACIAL_BREATH.toRawCode()
                             + "," + ABILITY_PET_GLACIAL_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_GLACIAL_BREATH.toRawCode()
                          )
        ..setModelFile(Units.azureDragon1)
        ..setIconGameInterface(Icons.bTNAzureDragon)
        ..setName("Tamed Frost Dragon")

@compiletime function stormDragonDefinition() returns UnitDefinition
    return createDragonDefinition(UNIT_STORM_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_STORM_BREATH.toRawCode()
                             + "," + ABILITY_PET_STORM_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_STORM_BREATH.toRawCode()
                          )
        ..setModelFile(Units.bronzeDragon1)
        ..setIconGameInterface(Icons.bTNBronzeDragon)
        ..setName("Tamed Storm Dragon")

@compiletime function netherDragonDefinition() returns UnitDefinition
    return createDragonDefinition(UNIT_NETHER_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL
                             + "," + ABILITY_GROW_PET.toRawCode()
                             + "," + ABILITY_NETHER_BREATH.toRawCode()
                             + "," + ABILITY_PET_NETHER_BREATH_UPGD.toRawCode()
                             )
        ..setUpgradesUsed(FLYING_PET_BASIC_UPGD
                          + "," + UPGD_NETHER_BREATH.toRawCode()
                          )
        ..setModelFile(Units.netherDragon)
        ..setIconGameInterface(Icons.bTNNetherDragon)
        ..setName("Tamed Nether Dragon")
