package Game

// Standard library imports:
import ClosureTimers

// Local imports:
import ClassSelector
import ColorUtils
import StringExtensions

// A timer for the core gameplay.
public constant GAME_TIMER = CreateTimer()

// The trigger fired at the beginning of the core gameplay.
let listeners = CreateTrigger()

// Registers a callback to be executed when the core gameplay begins.
public function registerGameStartEvent(code handler)
    listeners.addAction(handler)

init
    // Set additional gameplay constants.
    SetMapFlag(MAP_USE_HANDICAPS, false)
    EnableMinimapFilterButtons(true, false)
    SetCreepCampFilterState(false)

    // Pin time of day to dawn until the game starts.
    SetTimeOfDayScale(0)
    SetTimeOfDay(6)
    registerGameStartEvent() ->
        SetTimeOfDayScale(1.3)

    // TODO: Remove legacy initialization or move elsewhere
    InitGameCache("ITT.w3v")

    // Notify the players when the game officially begins.
    registerGameStartEvent() ->
        print("Game has begun!".color(GENERAL_COLOR))

    // Begin the timing of the core gamplay.
    // TODO: Use GameTimer once it supports additional timers.
    registerGameStartEvent() ->
        GAME_TIMER.start(99999999, null)

    // Begin the core gameplay after class selection.
    registerClassSelectionEndEvent() ->
        listeners.execute()

    // Delay until after the gg_rct_vision is initialized.
    nullTimer() ->
        // Reveal the tutorial island to all players.
        ForForce(bj_FORCE_ALL_PLAYERS) ->
            CreateFogModifierRect(
                GetEnumPlayer(),
                FOG_OF_WAR_VISIBLE,
                gg_rct_vision,
                true,
                false
            ).start()
