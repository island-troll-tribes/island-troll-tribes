package TrollUpgradeSpell

// Standard library imports:
import Assets
import ChannelAbilityPreset
import LinkedList

// Local imports:
import ColorUtils
import LocalAssets
import LocalObjectIDs
import StringExtensions
import TrollUnitTextConstant

function createUpgradeAbility(int newId) returns ChannelAbilityPreset
    return new ChannelAbilityPreset(newId, 1, true)
        // The model change is sufficient to indicate usage.
        ..setAnimationNames("")

function AbilityDefinition.setUpgradeTarget(string name)
    this.presetTooltipNormal(
        lvl -> "Upgrade into ".color(GENERAL_COLOR) + name.color(GOLD_COLOR)
    )

// TODO: Move these into the standard library.
function AbilityDefinition.setRequirementsLevels(vararg integer levels)
    let ll = new LinkedList<int>()
    for t in levels
        ll.add(t)
    this.setRequirementsLevels(ll.joinBy(value -> value.toString(), ","))
    destroy ll

function AbilityDefinition.setRequiredTrollLevel(int level, boolean requiresSub)
    if requiresSub
        this
            ..setRequirements(
                commaList(
                    // Use the upgrade based on both level and status.
                    UPGD_TROLL_LEVEL_AND_MEDAL,
                    // Use this purely to indicate the requirements to the user.
                    UPGD_MEDALLION_COURAGE
                )
            )
            ..setRequirementsLevels(
                level,
                1
            )
    else
        this
            ..setRequirements(
                commaList(
                    UPGD_TROLL_LEVEL
                )
            )
            ..setRequirementsLevels(
                level
            )


// Order IDs are manually set to manaflareon, manaflareoff, and manashieldoff
// in order to avoid conflicts while banning order IDs is not functioning.
// TODO: Remove these manual calls once order ID generation is fixed.
@compiletime function createUpgradeAbilityWarrior() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_WARRIOR)
        ..setUpgradeTarget("Warrior")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_WARRIOR)
        ..setIconNormal(LocalIcons.bTNTrollPredator)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")
        ..setRequiredTrollLevel(6, false)

@compiletime function createUpgradeAbilityTracker() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_TRACKER)
        ..setUpgradeTarget("Tracker")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_TRACKER)
        ..setIconNormal(Icons.bTNIceTroll)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilityJuggernaut() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_JUGGERNAUT)
        ..setUpgradeTarget("Juggernaut")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_JUGGERNAUT)
        ..setIconNormal(LocalIcons.bTNTrollPredator)
        ..setRequiredTrollLevel(9, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityElementalist() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_ELEMENTALIST)
        ..setUpgradeTarget("Elementalist")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_ELEMENTALIST)
        ..setIconNormal(Icons.bTNIceTrollShaman)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityHypnotist() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_HYPNOTIST)
        ..setUpgradeTarget("Hypnotist")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_HYPNOTIST)
        ..setIconNormal(LocalIcons.bTNHypnotist)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilityDementiaMaster() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_DEMENTIA_MASTER)
        ..setUpgradeTarget("Dementia Master")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_DEMENTIA_MASTER)
        ..setIconNormal(Icons.bTNDarkTrollShadowPriest)
        ..setRequiredTrollLevel(8, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityBooster() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_BOOSTER)
        ..setUpgradeTarget("Booster")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_BOOSTER)
        ..setIconNormal(Icons.bTNForestTrollShadowPriest)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityMasterHealer() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_MASTER_HEALER)
        ..setUpgradeTarget("Master Healer")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_MASTER_HEALER)
        ..setIconNormal(LocalIcons.bTNMasterHealer)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilitySage() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_SAGE)
        ..setUpgradeTarget("Sage")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_SAGE)
        ..setIconNormal(Icons.bTNForestTrollShadowPriest)
        ..setRequiredTrollLevel(8, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityShapeshifter() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_SHAPESHIFTER)
        ..setUpgradeTarget("Shapeshifter")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_SHAPESHIFTER)
        ..setIconNormal(Icons.bTNBearForm)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityDruid() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_DRUID)
        ..setUpgradeTarget("Druid")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_DRUID)
        ..setIconNormal(LocalIcons.bTNDruid)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilityUltimateForm() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_JUNGLE_TYRANT)
        ..setUpgradeTarget("Jungle Tyrant")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_JUNGLE_TYRANT)
        ..setIconNormal(Icons.bTNJungleBeast)
        ..setRequiredTrollLevel(9, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityEscapeArtist() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_ESCAPE_ARTIST)
        ..setUpgradeTarget("Escape Artist")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_ESCAPE_ARTIST)
        ..setIconNormal(Icons.bTNDarkTroll)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityContortionist() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_CONTORTIONIST)
        ..setUpgradeTarget("Contortionist")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_CONTORTIONIST)
        ..setIconNormal(LocalIcons.bTNContortionist)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilityAssassin() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_ASSASSIN)
        ..setUpgradeTarget("Assassin")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_ASSASSIN)
        ..setIconNormal(Icons.bTNDarkTrollTrapper)
        ..setRequiredTrollLevel(7, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityObserver() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_OBSERVER)
        ..setUpgradeTarget("Observer")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_OBSERVER)
        ..setIconNormal(LocalIcons.bTNObserverSentry)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityTrapper() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_TRAPPER)
        ..setUpgradeTarget("Trapper")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_TRAPPER)
        ..setIconNormal(LocalIcons.bTNTrapper)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilitySpy() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_SPY)
        ..setUpgradeTarget("Spy")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_SPY)
        ..setIconNormal(Icons.bTNForestTrollTrapper)
        ..setRequiredTrollLevel(7, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")

@compiletime function createUpgradeAbilityHerbMasterGatherer() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_HERB_MASTER)
        ..setUpgradeTarget("Herb Master Gatherer")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_HERB_MASTER)
        ..setIconNormal(Icons.bTNIceTrollShadowPriest)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("Q")
        ..setBaseOrderID(1, "manaflareon")

@compiletime function createUpgradeAbilityRadarGatherer() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_RADAR_GATHERER)
        ..setUpgradeTarget("Radar Gatherer")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_RADAR_GATHERER)
        ..setIconNormal(LocalIcons.bTNTerrorTroll)
        ..setRequiredTrollLevel(6, false)
        ..presetHotkey("W")
        ..setBaseOrderID(1, "manaflareoff")

@compiletime function createUpgradeAbilityOmnigatherer() returns ChannelAbilityPreset
    return createUpgradeAbility(ABILITY_OMNIGATHERER)
        ..setUpgradeTarget("Omnigatherer")
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_OMNIGATHERER)
        ..setIconNormal(LocalIcons.bTNTerrorTroll)
        ..setRequiredTrollLevel(8, true)
        ..presetHotkey("E")
        ..setBaseOrderID(1, "manashieldoff")
