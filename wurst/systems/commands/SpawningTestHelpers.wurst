package SpawningTestHelpers

import ChatCommands
import Game
import SimError
import PlayerExtensions
import GameConfig
import IDUtils
import LegacyColors

let HELP_MESSAGE = (
    GOLD_COLOR + "Create units and items\n|r" +
    GENERAL_COLOR +"-create [pid] [count] [player]\n\n" +
    "Where pid is for example, UNIT_PANTHER or ITEM_ARMORY_KIT" +
    "\ncount the number of spawn\nplayer the player which own the unit, player must be > 0\n" +
    "pid are listed in wurst/_legacy_/lib/IDUtils.wurst\n\n|r"+
    GOLD_COLOR + "Example : \"-create UNIT_PANTHER 2 1\" will spawn 2 panther for player 1|r"
)

init
    registerGameStartEvent() ->
        if gameConfig.isTestModeEnabled()
            registerCommandAll("create") (triggerPlayer, args) ->
                let idStr = args.get(1).toUpperCase()
                let id = S2ID(idStr)
                var nbrArg = 1
                if args.size() > 2
                    nbrArg = (args.get(2).toInt())

                if id <= 0
                    print(HELP_MESSAGE)
                else
                    let owner = args.size() > 2 ? players[args.get(3).toInt() - 1] : triggerPlayer
                    let troll = triggerPlayer.getTroll()
                    let pos = troll.getPos().polarOffset(troll.getFacingAngle(), 100)

                    if idStr.startsWith("UNIT_")
                        for i = nbrArg downto 1
                            if createUnit(owner, id, pos, angle(0)) == null
                                simError(triggerPlayer, "{0} not found".format(idStr))
                                break
                    else if idStr.startsWith("ITEM_")
                        for i = nbrArg downto 1
                            if createItem(id, pos) == null
                                simError(triggerPlayer, "{0} not found".format(idStr))
                                break
                    else
                        simError(triggerPlayer, "Cannot spawn {0}".format(idStr))
