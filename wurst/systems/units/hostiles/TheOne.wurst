package TheOne
import ID
import BonyAnimal
import LinkedList
import TheOneDefinition
import UnitExtensions
import ClosureEvents
import ClosureTimers
import JumpSystem


public let THE_ONE_REGION = CreateRegion()..addRect(gg_rct_TheOne)    //The Region The One rests in
let spawnSpot = gg_rct_TheOneCliff.getLeftTop()                       //The Cliff The One initially spawns on

bool THE_ONE_IN_AREA = false    //Used to check if The One is in THE_ONE_REGION
int TROLLS_IN_AREA   = 0        //Used to count Trolls in THE_ONE_REGION

public TheOne theOne = null


public class TheOne extends BonyAnimal
    private static let unitTypeId = UNIT_ONE

    static function initialize()
        register(unitTypeId, mammoth -> new TheOne(mammoth))

    construct(unit whichUnit)
        super(whichUnit)
        whichUnit..addAbility(JUMP_STOMP_ID)

    construct(player whichPlayer, vec2 pos)
        super(whichPlayer, pos)

    construct(player whichPlayer, vec2 pos, angle facing)
        super(whichPlayer, pos, facing)

    override function postCreate()
        super.postCreate()

    override function getDrops() returns LinkedList<int>
        let drops = super.getDrops()
            ..add(ITEM_ESSENCE_BEES)
            ..add(ITEM_STEEL_INGOT)
        return drops

    override function getNumCorpses() returns int
        return 3

    override function getTypeId() returns int
        return unitTypeId

    override function postDeath()

//Spawns The One
public function spawnTheOne()
    if theOne == null
        //Every sixty seconds The One levels up
        doPeriodically(60) cb ->
            if theOne != null and theOne.getUnit().isAlive()
                theOne.getUnit().addLevels(1, true)
        doAfter(1) () ->
            //Initial spawn of The One
            theOne = new TheOne(players[PLAYER_NEUTRAL_AGGRESSIVE], spawnSpot, angle(0))
            performJump(theOne.getUnit(), gg_rct_TheOne.getCenter())
    else
        //Repeated spawns of The One
        theOne.getUnit().revive(spawnSpot, true)
        doAfter(1) () ->
            performJump(theOne.getUnit(), gg_rct_TheOne.getCenter())

public function canSpawnTheOne() returns boolean
    return theOne == null or not theOne.getUnit().isAlive()

function toggleInvulnerability(unit currentUnit, bool entering)
    if currentUnit.getTypeId() == UNIT_ONE
        //Determine if the one is entering or leaving THE_ONE_REGION
        THE_ONE_IN_AREA = entering ? true : false
    if currentUnit.isTroll()
        if entering
            //Troll entered THE_ONE_REGION
            TROLLS_IN_AREA++
        else 
            //Troll left THE_ONE_REGION
            TROLLS_IN_AREA--
    //If atleast one troll and The One are in THE_ONE_REGION
    if THE_ONE_IN_AREA and TROLLS_IN_AREA > 0
        theOne.getUnit().removeAbility('Avul')
    else if theOne != null
        theOne.getUnit().addAbility('Avul')

    

init
    TheOne.initialize()
    CreateTrigger()
    ..registerEnterRegion(THE_ONE_REGION, null)
    ..addAction() ->
        toggleInvulnerability(GetTriggerUnit(), true)
    CreateTrigger()
    ..registerLeaveRegion(THE_ONE_REGION, null)
    ..addAction() ->
        toggleInvulnerability(GetTriggerUnit(), false)
    EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
        toggleInvulnerability(GetTriggerUnit(), false)
