package TrollUpgradeSpell

// Standard library imports:
import ChannelAbilityPreset
import LinkedList

// Third-party imports:
import Lodash

// Local imports:
import ColorUtils
import LocalObjectIDs
import TrollUnitTextConstant

public class TrollUpgradeSuperSubSpell extends TrollUpgradeSubSpell

    construct(int id, string name, string toolTipExt, Pair<int, int> btnPos, string icon, string hotkey)
        super(id, name, toolTipExt, btnPos, icon, hotkey)
        this.levelReq = 9

public class TrollUpgradeSubSpell
    let id = 0
    let name = ""
    let toolTip = ""
    let toolTipExt = ""
    let hotkey = "E"
    let icon = "ReplaceableTextures\\CommandButtons\\BTN"
    let btnPos = new Pair(0, 0)
    let levelReq = 6

    construct(int id, string name, string toolTipExt, Pair<int, int> btnPos, string icon, string hotkey)
        this.id = id
        this.name = name
        this.btnPos = btnPos
        this.hotkey = hotkey
        this.icon += icon + ".blp"
        this.toolTipExt = "Raise your class status to " + COLOR_LIGHT_BLUE.toColorString() + name + "|r. " + toolTipExt
        this.toolTip =  GENERAL_COLOR.toColorString()+"[" + SPECIAL_COLOR.toColorString() + hotkey + GENERAL_COLOR.toColorString() + "] - " + "Transform into " + name

    function buildSpell()
        new ChannelAbilityPreset(id, 1, true)
        ..setName(name)
        ..setIconNormal(icon)
        ..setIconResearch(icon)
        ..presetTooltipNormal(lvl -> toolTip)
        ..presetTooltipNormalExtended(lvl -> toolTipExt + "|nRequires level {0}.".format(this.levelReq.toString()))
        ..presetFollowThroughTime(lvl -> 0)
        ..setCooldown(1, 0)
        ..setLevels(1)
        ..setRequiredLevel(levelReq)
        ..setHeroAbility(true)
        ..presetHotkey(hotkey)
        ..presetButtonPosResearch(btnPos.a, btnPos.b)

function getTrollUpgrade() returns LinkedList<TrollUpgradeSubSpell>
    return asList<TrollUpgradeSubSpell>(
        // Hunter
        new TrollUpgradeSubSpell(ABILITY_WARRIOR              , "Warrior"              , TOOLTIP_WARRIOR         , new Pair(1, 0), "TrollPredator"           , "W"),
        new TrollUpgradeSubSpell(ABILITY_TRACKER              , "Tracker"              , TOOLTIP_TRACKER         , new Pair(2, 0), "IceTroll"                , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_JUGGERNAUT      , "Juggernaut"           , TOOLTIP_JUGGERNAUT      , new Pair(3, 0), "TrollPredator"           , "R"),

        // Mage
        new TrollUpgradeSubSpell(ABILITY_ELEMENTALIST         , "Elementalist"         , TOOLTIP_ELEMENTALIST    , new Pair(1, 0), "IceTrollShaman"          , "W"),
        new TrollUpgradeSubSpell(ABILITY_HYPNOTIST            , "Hypnotist"            , TOOLTIP_HYPNOTIST       , new Pair(2, 0), "Hypnotist"               , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_DEMENTIA_MASTER , "Dementia Master"      , TOOLTIP_DEMENTIA_MASTER , new Pair(3, 0), "DarkTrollShadowPriest"   , "R"),

        // Priest
        new TrollUpgradeSubSpell(ABILITY_BOOSTER              , "Booster"              , TOOLTIP_BOOSTER         , new Pair(1, 0), "ForestTrollShadowPriest" , "W"),
        new TrollUpgradeSubSpell(ABILITY_MASTER_HEALER        , "Master Healer"        , TOOLTIP_MASTER_HEALER   , new Pair(2, 0), "MasterHealer"            , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_SAGE            , "Sage"                 , TOOLTIP_SAGE            , new Pair(3, 0), "ForestTrollShadowPriest" , "R"),

        // Beast Master
        new TrollUpgradeSubSpell(ABILITY_SHAPESHIFTER         , "Shapeshifter"         , TOOLTIP_SHAPESHIFTER    , new Pair(1, 0), "BearForm"                , "W"),
        new TrollUpgradeSubSpell(ABILITY_CHICKEN              , "Chicken"              , TOOLTIP_CHICKEN         , new Pair(2, 0), "CritterChicken"          , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_ULTIMATE_FORM   , "Ultimate Form"        , TOOLTIP_ULTIMATE_FORM   , new Pair(3, 0), "JungleBeast"             , "R"),

        // Thief
        new TrollUpgradeSubSpell(ABILITY_ESCAPE_ARTIST        , "Escape Artist"        , TOOLTIP_ESCAPE_ARTIST   , new Pair(1, 0), "DarkTroll"               , "W"),
        new TrollUpgradeSubSpell(ABILITY_CONTORTIONIST        , "Contortionist"        , TOOLTIP_CONTORTIONIST   , new Pair(2, 0), "Contortionist"           , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_ASSASSIN        , "Assassin"             , TOOLTIP_ASSASSIN        , new Pair(3, 0), "DarkTrollTrapper"        , "R"),

        // Scout
        new TrollUpgradeSubSpell(ABILITY_OBSERVER             , "Observer"             , TOOLTIP_OBSERVER        , new Pair(1, 0), "ObserverSentry"          , "W"),
        new TrollUpgradeSubSpell(ABILITY_TRAPPER              , "Trapper"              , TOOLTIP_TRAPPER         , new Pair(2, 0), "Trapper"                 , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_SPY             , "Spy"                  , TOOLTIP_SPY             , new Pair(3, 0), "ForestTrollTrapper"      , "R"),

        // Gatherer
        new TrollUpgradeSubSpell(ABILITY_HERB_MASTER          , "Herb Master Gatherer" , TOOLTIP_HERB_MASTER     , new Pair(1, 0), "IceTrollShadowPriest"    , "W"),
        new TrollUpgradeSubSpell(ABILITY_RADAR_GATHERER       , "Radar Gatherer"       , TOOLTIP_RADAR_GATHERER  , new Pair(2, 0), "TerrorTroll"             , "E"),
        new TrollUpgradeSuperSubSpell(ABILITY_OMNIGATHERER    , "Omnigatherer"         , TOOLTIP_OMNIGATHERER    , new Pair(3, 0), "TerrorTroll"             , "R")
    )

@compiletime function buildSpell()
    getTrollUpgrade().forEach(elem -> elem.buildSpell())
