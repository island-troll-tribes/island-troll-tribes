package TeamGoldSharing

// Standard library imports:
import ClosureTimers
import RegisterEvents

// Third-party imports:
import Lodash

// Local imports:
import ChatUtils
import Game
import GameConfig
import GameMode
import LocalObjectIDs
import StringExtensions
import Tribe

function syncTribeGold(unit whichUnit, boolean useMin)
    nullTimer() ->
        let owner = whichUnit.getOwner()
        let tribe = Tribe.ofPlayer(owner)
        let members = tribe.getMembers()
        let gold = useMin
            ? min(map((member, index) -> member.getLumber(), members))
            : owner.getLumber()
        for member in members
            member.setLumber(gold)

function initializeTeamGold()
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM) ->
        syncTribeGold(GetBuyingUnit(), true)

    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_PAWN_ITEM) ->
        syncTribeGold(GetTriggerUnit(), false)

    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
        if GetManipulatedItem().getTypeId() == ITEM_ALIGATOR_GOLD
            syncTribeGold(GetTriggerUnit(), false)

init
    new GameMode("team-gold", "tg", "Pro", "Players on a team share gold in the same pool") (mode, args) ->
        let enabled = args.size() > 1 ? args.get(0).isConfirmation() : true
        gameConfig.setTeamGoldEnabled(enabled)
        mode.message("Team gold ".color(COLOR_GOLD) + enabled.toOnOff() + "!")

    registerGameStartEvent() ->
        if gameConfig.isTeamGoldEnabled()
            initializeTeamGold()
