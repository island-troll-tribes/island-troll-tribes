package Mixing
import HashMap
import LinkedList
import UnitExtensions
import ID

public function mixIt(LinkedList<item> inv)
    inv.forEach() items -> 
        if items.getTypeId() == ITEM_RIVER_ROOT
            items.remove()
        if items.getTypeId() == ITEM_RIVER_STEM
            items.remove()
        if items.getTypeId() == ITEM_BUTSU
            items.remove()
        if items.getTypeId() == ITEM_BLUE_HERB
            items.remove()
        if items.getTypeId() == ITEM_ORANGE_HERB
            items.remove()
        if items.getTypeId() == ITEM_PURPLE_HERB
            items.remove()
        if items.getTypeId() == ITEM_YELLOW_HERB
            items.remove()

public function mix(unit u)
    let count = u.getInventoryItemCountMap()
    let inventory = u.getInventory()
    int specCount = 0
    int specTypes = 0

    int blue = count.get(ITEM_BLUE_HERB)
    int oran = count.get(ITEM_ORANGE_HERB)
    int purp = count.get(ITEM_PURPLE_HERB)
    int yell = count.get(ITEM_YELLOW_HERB)

    int root = count.get(ITEM_RIVER_ROOT)
    int stem = count.get(ITEM_RIVER_STEM)
    int butsu = count.get(ITEM_BUTSU)

    specCount = blue + oran + purp + yell

    if count.get(ITEM_BLUE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_ORANGE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_PURPLE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_YELLOW_HERB) > 0
        specTypes += 1

    //Debug
    //print("{0} root {1} stem {2} butsu {3} Blue {4} Orange {5} Purple {6} Yellow"
    //.format(root.toString(), stem.toString(), butsu.toString(), blue.toString(), oran.toString(), purp.toString(), yell.toString()))

    // Eob
    if specTypes > 2  and specCount > 3
        mixIt(inventory)
        u.addItemById(ITEM_ESSENCE_BEES)
        return

    // Twin Islands
    if (yell > 2 and blue > 2) or (oran > 2 and purp > 2)
        mixIt(inventory)
        u.addItemById(ITEM_POTION_TWIN_ISLANDS)
        return

    // Nether
    if specCount > 0 and stem > 1 and butsu > 1
        mixIt(inventory)
        u.addItemById(ITEM_NETHER_POTION)
        return

    // Drunk
    if specCount > 0 and root > 1 and butsu > 1
        mixIt(inventory)
        u.addItemById(ITEM_DRUNKS_POTION)
        return
 
    // Fervor
    if specCount > 2 and specTypes > 1 and butsu > 0
        mixIt(inventory)
        u.addItemById(ITEM_FERVER_POTION)
        return

    // Disease Potion
    if specTypes > 1 and specCount > 3 and root > 0
        mixIt(inventory)
        u.addItemById(ITEM_DISEASE_POTION)
        return

    // Acid Bomb
    if specTypes > 1 and specCount > 3 and stem > 1
        mixIt(inventory)
        u.addItemById(ITEM_ACID_BOMB)
        return

    // Bee Hive
    if specCount > 0 and stem > 1
        mixIt(inventory)
        u.addItemById(ITEM_BEE_HIVE)
        return

    // Dark Rock
    if stem > 0 and root > 0 and butsu == 2
        mixIt(inventory)
        u.addItemById(ITEM_DARK_ROCK)
        return

    // Anabolic Potion
    if stem > 3
        mixIt(inventory)
        u.addItemById(ITEM_ANABOLIC_POTION)
        return

    // Elemental Shield Potion
    if stem > 0 and butsu > 0 and specCount > 0
        mixIt(inventory)
        u.addItemById(ITEM_ELEMENTAL_SHIELD_POTION)
        return
    
    // Omnicure
    if butsu > 1 and specTypes > 1
        mixIt(inventory)
        u.addItemById(ITEM_OMNICURE)
        return
    
    // Oracle
    if butsu > 1 and specCount > 0
        mixIt(inventory)
        u.addItemById(ITEM_ORACLE_POTION)
        return
    
    // Mana
    if stem > 0 and butsu > 0
        mixIt(inventory)
        u.addItemById(ITEM_MANA_POTION_I)
        return
    
    // Healing
    if root > 0 and butsu > 0
        mixIt(inventory)
        u.addItemById(ITEM_HEALING_POTION_I)
        return
    
    // Gem Of Knowledge
    if specTypes >= 2 and specCount >= 4
        mixIt(inventory)
        u.addItemById(ITEM_GEM_OF_KNOWLEDGE)
        return
    
    // Anti Magic Potion
    if specCount > 0 and butsu > 0
        mixIt(inventory)
        u.addItemById(ITEM_ANTI_MAGIC_POTION)
        return
    
    // Wind
    if stem > 1
        mixIt(inventory)
        u.addItemById(ITEM_SPIRIT_WIND)
        return
    
    // Water
    if root > 1
        mixIt(inventory)
        u.addItemById(ITEM_SPIRIT_WATER)
        return
    
    // Cure All
    if butsu > 1
        mixIt(inventory)
        u.addItemById(ITEM_CURE_ALL)
        return

    

    