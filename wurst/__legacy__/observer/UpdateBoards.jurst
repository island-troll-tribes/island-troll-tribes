library UpdateBoards initializer onInit requires OldBoards, Respawn, ForcedDuel, ShrinkingMap, Game, LegacyTriggers

globals
    string gameTimeStr = ""
    string forcedDuelStr = ""
    string gracePeriodStr = ""
    string forestFireStr = ""
endglobals

function measureTime takes nothing returns nothing
    local integer mt_hours = 0
    local integer mt_mins = 0
    local integer mt_secs
    local integer mt_time = R2I(TimerGetElapsed(GAME_TIMER))
    local string sHrs
    local string sMin
    local string sSec
    local integer gracePeriodRemaining = R2I(TimerGetRemaining(GRACE_PERIOD_TIMER))
    local integer forcedDuelRemaining = R2I(TimerGetRemaining(DUEL_TIMER))
    local integer forestFireRemaining = R2I(TimerGetRemaining(FOREST_FIRE_TIMER))
    set forcedDuelStr = ""
    set gracePeriodStr = ""
    set forestFireStr = ""
    if mt_time >= 3600 then
        loop
            exitwhen mt_time < 3600
            set mt_time = mt_time - 3600
            set mt_hours = mt_hours + 1
        endloop
    endif
    if mt_time >= 60 then
        loop
            exitwhen mt_time < 60
            set mt_time = mt_time - 60
            set mt_mins = mt_mins + 1
        endloop
    endif
    set mt_secs = mt_time
    set sSec = I2S(mt_secs)
    set sMin = I2S(mt_mins)
    set sHrs = I2S(mt_hours)
    if StringLength(sSec) == 1 then
        set sSec = "0"+sSec
    endif
    if StringLength(sMin) == 1 then
        set sMin = "0"+sMin
    endif
    if StringLength(sHrs) == 1 then
        set sHrs = "0"+sHrs
    endif
    if gracePeriodRemaining > 0 then
        set mt_hours = (gracePeriodRemaining / 3600).toInt()
        set mt_mins = (ModuloInteger(gracePeriodRemaining, 3600) / 60).toInt()
        set mt_secs = ModuloInteger(gracePeriodRemaining, 60)
        set gracePeriodStr = " - Revive " + COLOR_GREEN
        if mt_hours > 0 then
            if mt_hours < 10 then
                set gracePeriodStr = gracePeriodStr + "0"
            endif
            set gracePeriodStr = gracePeriodStr + I2S(mt_hours) + ":"
        endif
        if mt_mins < 10 then
            set gracePeriodStr = gracePeriodStr + "0"
        endif
        set gracePeriodStr = gracePeriodStr + I2S(mt_mins) + ":"
        if mt_secs < 10 then
            set gracePeriodStr = gracePeriodStr + "0"
        endif
        set gracePeriodStr = gracePeriodStr + I2S(mt_secs) + "|r"
    endif
    if forcedDuelRemaining > 0 then
        set mt_hours = (forcedDuelRemaining / 3600).toInt()
        set mt_mins = (ModuloInteger(forcedDuelRemaining, 3600) / 60).toInt()
        set mt_secs = ModuloInteger(forcedDuelRemaining, 60)
        set forcedDuelStr = " - Duel " + ENERGY_COLOR
        if mt_hours > 0 then
            if mt_hours < 10 then
                set forcedDuelStr = forcedDuelStr + "0"
            endif
            set forcedDuelStr = forcedDuelStr + I2S(mt_hours) + ":"
        endif
        if mt_mins < 10 then
            set forcedDuelStr = forcedDuelStr + "0"
        endif
        set forcedDuelStr = forcedDuelStr + I2S(mt_mins) + ":"
        if mt_secs < 10 then
            set forcedDuelStr = forcedDuelStr + "0"
        endif
        set forcedDuelStr = forcedDuelStr + I2S(mt_secs) + "|r"
    endif
    if forestFireRemaining > 0 then
        set mt_hours = (forestFireRemaining / 3600).toInt()
        set mt_mins = (ModuloInteger(forestFireRemaining, 3600) / 60).toInt()
        set mt_secs = ModuloInteger(forestFireRemaining, 60)
        set forestFireStr = " - Fire " + RED_COLOR
        if mt_hours > 0 then
            if mt_hours < 10 then
                set forestFireStr = forestFireStr + "0"
            endif
            set forestFireStr = forestFireStr + I2S(mt_hours) + ":"
        endif
        if mt_mins < 10 then
            set forestFireStr = forestFireStr + "0"
        endif
        set forestFireStr = forestFireStr + I2S(mt_mins) + ":"
        if mt_secs < 10 then
            set forestFireStr = forestFireStr + "0"
        endif
        set forestFireStr = forestFireStr + I2S(mt_secs) + "|r"
    endif
    //set gameTimeStr = I2S(mt_hours)+":"+I2S(mt_mins)+":"+I2S(R2I(mt_secs))
    if sHrs == "00" then
        set gameTimeStr = GENERAL_COLOR+sMin+":"+sSec+"|r"
    else
        set gameTimeStr = GENERAL_COLOR+sHrs+":"+sMin+":"+sSec+"|r"
    endif
    //call PauseTimer(GAME_TIMER)
endfunction

function updateBoards takes nothing returns nothing
    if OBSERVER_BOARD != null then
        call measureTime()
        call MultiboardSetTitleText(OBSERVER_BOARD, gameTimeStr + gracePeriodStr + forcedDuelStr + forestFireStr)
    endif
endfunction

//===========================================================================
function onInit takes nothing returns nothing
    set gg_trg_update_boards = CreateTrigger()
    call TriggerAddAction(gg_trg_update_boards, function updateBoards)
endfunction

//===========================================================================
