package TwinIslandPotion

// Standard lib Imports:
import Assets
import BuffObjEditing
import ChannelAbilityPreset
import ClosureEvents
import ClosureForGroups
import ClosureTimers
import InstantDummyCaster
import Orders

// Local lib Imports:
import ToolTipsUtils
import Items
import LocalItemObjEditing
import LocalObjectIDs
import LocalAssets
import UnitExtensions

constant ABIL      = compiletime(ABIL_ID_GEN.next())
constant CAST_ABIL = compiletime(ABIL_ID_GEN.next())
constant BUFF      = compiletime(BUFF_ID_GEN.next())

constant DURATION = 30.

public constant TT_TWIN_ISLAND_POTION = "" +
    "Reveal enemy trolls upon use. "+
    "Last {0} seconds."
    .format(DURATION.toToolTipLightBlue())

@compiletime function createBuff()
    new BuffDefinition(BUFF, BuffIds.ultravision) // Ultravision
    ..setName(1, "Twin Islands")
    ..setIcon(Icons.bTNCharm)
    ..setIconNormal(1, Icons.bTNCharm)
    ..setTooltipNormal(1, "Revealed")
    ..setTooltipNormalExtended(1, "Revealed for {0} seconds.".format(DURATION.toToolTipLightBlue()))

@compiletime function createVisionSpell()
    new AbilityDefinitionFaerieFire(ABIL)
    ..setDummyAbility()
    ..setDurationHero(1, DURATION)
    ..setDurationNormal(1, DURATION)
    ..setDefenseReduction(1, 0)
    ..setHeroAbility(false)
    ..setItemAbility(false)
    ..setArtEffect("")
    ..setArtCaster("")
    ..setArtTarget("")
    ..setLevels(1)
    ..setBuffs(1, BUFF.toRawCode())

@compiletime function createItemCast() returns AbilityDefinitionBerserk
    return createItemBerserkCast(CAST_ABIL)
        ..setArtCaster(Abilities.thunderclapCaster)
        ..setName("Twin Island Potion Cast")


@compiletime function createTwinIslandPotion() returns ItemDefinition
    return createPerishableItem(ITEM_POTION_TWIN_ISLANDS)
        ..setInterfaceIcon(Icons.bTNPotionGreenSmall)
        ..setModelUsed(LocalItems.potionGreenSmall)
        ..setNameEnhance("Twin Island Potion")
        ..setTooltipExtended(TT_TWIN_ISLAND_POTION)
        ..setDescription(TT_TWIN_ISLAND_POTION)
        ..setLumberCost(39)
        ..setAbilities(commaList(CAST_ABIL))
        ..setScalingValue(0.70)
        ..setCooldownGroup(commaList(CAST_ABIL))
        ..setStockReplenishInterval(120)


init
    EventListener.onCast(CAST_ABIL) (unit caster) ->
        let owner = caster.getOwner()
        forUnitsAll() u ->
            if u.getOwner().isEnemyOf(owner) and u.isAlive()
                if u.isTroll()
                    PingMinimapForForceEx(GetPlayersAllies(owner), u.getPos().x, u.getPos().y, 8, bj_MINIMAPPINGSTYLE_ATTACK, 255, 0, 0)
                    //Temporary vision required by dummy
                    let vis = createVision(owner, u.getPos(), 200, true)
                    vis.start()
                    doAfter(0.2) ->
                        vis.destr()
                    InstantDummyCaster.castTarget(owner, ABIL, 1, Orders.faeriefire, u)
                else if u.getTypeId() == UNIT_SPIRIT_WARD
                    PingMinimapForForceEx(GetPlayersAllies(owner), u.getPos().x, u.getPos().y, 8, bj_MINIMAPPINGSTYLE_SIMPLE, 0, 0, 255)
