package IttDummyCaster
import DummyRecycler
import MapBounds
import ClosureTimers

public class IttDummyCaster
    unit caster
    int finisher

    construct()
        create(ANIMATION_PERIOD)

    construct(real delay)
        create(delay)

    private function create(real delay)
        caster = DummyRecycler.get(vec2(0, 0), angle(0))
        doAfter(delay) ->
            doFinish()
            DummyRecycler.recycle(caster)
            destroy this

    private function prepare(player owner, int id, int lvl, vec3 pos)
        caster..addAbility(id)..setMana(1000000)
        if pos.inBounds()
            caster.setXYZ(pos)
        if lvl > 1
            caster.setAbilityLevel(id, lvl)
        if owner != null
            caster.setOwner(owner, false)

    private function finish(int abilityId)
        finisher = abilityId

    private function doFinish()
        caster.setOwner(DUMMY_PLAYER, false)
        caster.removeAbility(finisher)
        caster.setPos(boundMax)

    function castImmediate(player owner, int abilityId, int lvl, int orderId, vec3 pos) returns boolean
        prepare(owner, abilityId, lvl, pos)
        boolean b = caster.issueImmediateOrderById(orderId)
        finish(abilityId)
        return b

    function castTarget(player owner, int abilityId, int lvl, int orderId, widget target, vec3 casterPos) returns boolean
        prepare(owner, abilityId, lvl, casterPos)
        caster.setFacing(caster.getPos().angleTo(target.getPos()))
        boolean b = caster.issueTargetOrderById(orderId, target)
        finish(abilityId)
        return b

    function castPoint(player owner, int abilityId, int lvl, int orderId, vec2 targetPos, vec3 casterPos) returns boolean
        prepare(owner, abilityId, lvl, casterPos)
        caster.setFacing(caster.getPos().angleTo(targetPos))
        boolean b = caster.issuePointOrderById(orderId, targetPos)
        finish(abilityId)
        return b

    // Use with Orders package
    function castTarget(player owner, int abilityId, int lvl, int orderId, widget target) returns boolean
        return castTarget(owner, abilityId, lvl, orderId, target, vec2(GetWidgetX(target), GetWidgetY(target)).toVec3())

    function castPoint(player owner, int abilityId, int lvl, int orderId, vec2 targetPos) returns boolean
        return castPoint(owner, abilityId, lvl, orderId, targetPos, targetPos.toVec3())

    // string orders / vec2 casterpos wrappers
    function castImmediate(player owner, int abilityId, int lvl, string order, vec3 pos) returns boolean
        return castImmediate(owner, abilityId, lvl, OrderId(order), pos)
    function castImmediate(player owner, int abilityId, int lvl, string order, vec2 pos) returns boolean
        return castImmediate(owner, abilityId, lvl, OrderId(order), pos.toVec3())
    function castImmediate(player owner, int abilityId, int lvl, int orderId, vec2 pos) returns boolean
        return castImmediate(owner, abilityId, lvl, orderId, pos.toVec3())

    function castTarget(player owner, int abilityId, int lvl, string order, widget target) returns boolean
        return castTarget(owner, abilityId, lvl, OrderId(order), target)
    function castTarget(player owner, int abilityId, int lvl, string order, widget target, vec3 casterPos) returns boolean
        return castTarget(owner, abilityId, lvl, OrderId(order), target, casterPos)
    function castTarget(player owner, int abilityId, int lvl, string order, widget target, vec2 casterPos) returns boolean
        return castTarget(owner, abilityId, lvl, OrderId(order), target, casterPos.toVec3())
    function castTarget(player owner, int abilityId, int lvl, int orderId, widget target, vec2 casterPos) returns boolean
        return castTarget(owner, abilityId, lvl, orderId, target, casterPos.toVec3())

    function castPoint(player owner, int abilityId, int lvl, string order, vec2 targetPos) returns boolean
        return castPoint(owner, abilityId, lvl, OrderId(order), targetPos)
    function castPoint(player owner, int abilityId, int lvl, string order, vec2 targetPos, vec3 casterPos) returns boolean
        return castPoint(owner, abilityId, lvl, OrderId(order), targetPos, casterPos)
    function castPoint(player owner, int abilityId, int lvl, string order, vec2 targetPos, vec2 casterPos) returns boolean
        return castPoint(owner, abilityId, lvl, OrderId(order), targetPos, casterPos.toVec3())
    function castPoint(player owner, int abilityId, int lvl, int orderId, vec2 targetPos, vec2 casterPos) returns boolean
        return castPoint(owner, abilityId, lvl, orderId, targetPos, casterPos.toVec3())
