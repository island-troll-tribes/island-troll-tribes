package PetReleasing

// Standard library imports:
import ClosureEvents

// Local imports:
import ID
import PetAbilities
import Pets
import TrollUpgrade

public function releasePet(unit caster)
    // Look up the pet.
    let pet = caster.getOwner().getPet()

    // Deregister the pet.
    caster.getOwner().removePet()

    // Revert the available abilities.
    setPetAbilities(caster.getOwner(), false)

    // Compute the new owner.
    let owner =  pet.getPetGrowthChain().indexOf(pet.getTypeId()) == 0
        ? PLAYER_NEUTRAL_PASSIVE
        : PLAYER_NEUTRAL_AGGRESSIVE

    // Transfer the ownership of the pet.
    pet.setOwner(Player(owner), true)

    // Notify the owning tribe.
    if localPlayer.isAllyOf(caster.getOwner())
        print("A pet was released!")

init
    EventListener.onCast(SPELL_PET_RELEASE) (unit caster) ->
        releasePet(caster)

    // Release pets if the new class does not have them.
    registerPreprocessor(UNIT_BEAST_MASTER) (unit origin, int targetID) ->
        if targetID == UNIT_CHICKEN_FORM or targetID == UNIT_SHAPESHIFTER_WOLF
            if origin.getOwner().getPet() != null
                releasePet(origin)
