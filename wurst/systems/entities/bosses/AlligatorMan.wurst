package AlligatorMan

// Standard-library imports:
import LinkedList
import RegisterEvents
import HashMap

// Local imports:
import LocalObjectIDs
import Hostile
import BossUtilities


// List of alligator regions
let regions = asList(
    CreateRegion()..addRect(gg_rct_NW_Alligator),
    CreateRegion()..addRect(gg_rct_NE_Alligator),
    CreateRegion()..addRect(gg_rct_SW_Alligator),
    CreateRegion()..addRect(gg_rct_SE_Alligator)
)

// Mapping of alligator regions to it's corresponding alligator.
let regionsToAlligators = new IterableMap<region, unit>()

public class AlligatorMan extends Hostile
    private static let unitTypeId = UNIT_ALIGATOR_MAN

    static function initialize()
        register(unitTypeId, alligator -> new AlligatorMan(alligator))

    construct(unit whichUnit)
        super(whichUnit)

    override function postCreate()
        super.postCreate()

    override function getDrops() returns LinkedList<int>
        let drops = super.getDrops()
            ..add(ITEM_BONE)
            ..add(ITEM_BONE)
            ..add(ITEM_ALIGATOR_GOLD)
        return drops

    override function getNumCorpses() returns int
        return 10

init
    AlligatorMan.initialize()

    // Cycle through alligator regions.
    for currentRegion in regions
        // Create trigger for detecting alligator.
        CreateTrigger()
            ..registerEnterRegion(currentRegion, null)
            ..addAction() ->
                let triggerRegion = GetTriggeringRegion()
                let enteringUnit = GetEnteringUnit()
                // Verify entering unit is alligator.
                if enteringUnit.getTypeId() == UNIT_ALIGATOR_MAN
                    // Map region to alligator.
                    regionsToAlligators.put(triggerRegion, enteringUnit)
                    // Destroy trigger since it is no longer needed.
                    GetTriggeringTrigger().destr()


    // Create triggers for Alligator Islands.
    for currentRegion in regions
        // Trigger detecting unit entering island.
        CreateTrigger()
            ..registerEnterRegion(currentRegion, null)
            ..addAction() ->
                let gatorRegion = GetTriggeringRegion()
                toggleInvulnerability(gatorRegion, regionsToAlligators.get(gatorRegion))
        // Trigger detecting unit leaving island.
        CreateTrigger()
            ..registerLeaveRegion(currentRegion, null)
            ..addAction() ->
                let gatorRegion = GetTriggeringRegion()
                toggleInvulnerability(gatorRegion, regionsToAlligators.get(gatorRegion))
        // Trigger dectecting unit death on island (needed since dying does not trigger leaving).
        registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH)->
            let gatorRegion = GetTriggeringRegion()
            toggleInvulnerability(gatorRegion, regionsToAlligators.get(gatorRegion))
