package DamageTexts

// Standard library imports:
import LinkedList
import StandardTextTags

// Third-party imports:
import ChatCommands

// Local imports:
import ColorUtils
import DamageListeners

// TODO: Use a setting.
LinkedList<player> damageTextPlayers = new LinkedList<player>()

function onDamage()
    // Look up the state.
    let target = DamageEvent.getTarget()
    let amount = DamageEvent.getAmount()
    let element = DamageEvent.getElement()

    // Ignore fake damage.
    if element != null and element.hasTag(FAKE_DAMAGE)
        return

    // Ignore triggered damage.
    if DamageEvent.getType() == DamageType.CODE
        return

    // Ignore damage used by the engine to indicate debuffs.
    if DamageEvent.getDamageType() == DAMAGE_TYPE_UNKNOWN and amount == 0
        return

    // Compute a random offset to avoid stacking.
    let offset = vec2(GetRandomReal(-20, 20), GetRandomReal(0, 7.5))

    // Create the text tag to visualize the damage.
    standardTextTag()
        ..setText(
            // Round damage before displaying.
            amount.toInt().toString(),
            // Correlate the text size to the damage amount.
            8 * SquareRoot(SquareRoot(amount / 20)).clamp(1, 1.4)
        )
        ..setColor(COLOR_RED.withAlpha(255))
        ..setPos((target.getPos() + offset).toVec3())
        ..setVelocity(offset.setLength(0.04))
        ..setVisibility(localPlayer.canPlayerSeeDamageText(target))


function player.canPlayerSeeDamageText(unit target) returns boolean
    return damageTextPlayers.has(this) and this.hasVisibility(target)

init
    DamageEvent.addListener(DamageListenerPriorities.TAGS castTo int) ->
        onDamage()

    registerCommandAll("sd") (triggerPlayer, args) ->
        if damageTextPlayers.has(triggerPlayer)
            damageTextPlayers.remove(triggerPlayer)
            printTimedToPlayer("Disabled damage display!", 5, triggerPlayer)
        else
            damageTextPlayers.add(triggerPlayer)
            printTimedToPlayer("Enabled damage display!", 5, triggerPlayer)
