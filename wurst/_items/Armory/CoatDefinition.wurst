package CoatDefinition

import Items
import AbilityObjectCreationUtils
import ItemObjEditing
import ObjectIds
import ID
import Orders
import LegacyColors
import LinkedList
import ToolTipsUtils
import ClosureEvents
import InstantDummyCaster

constant ABIL_STATS_ELK    = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_WOLF   = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_BEAR   = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_BONE   = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_IRON   = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_STEEL  = compiletime(ABIL_ID_GEN.next())
constant ABIL_STATS_BATTLE = compiletime(ABIL_ID_GEN.next())

constant ABIL_CAST_BATTLE = compiletime(ABIL_ID_GEN.next())

constant ABIL_ELK    = commaList(ABIL_STATS_ELK    , 'AId1')
constant ABIL_WOLF   = commaList(ABIL_STATS_WOLF   , 'AId2')
constant ABIL_BEAR   = commaList(ABIL_STATS_BEAR   , 'AId3')
constant ABIL_BONE   = commaList(ABIL_STATS_BONE   , 'AId2')
constant ABIL_IRON   = commaList(ABIL_STATS_IRON   , 'AId3')
constant ABIL_STEEL  = commaList(SPELL_OMNICURE, ABIL_STATS_STEEL  , 'AId5') // Using current priest omnicure spell
constant ABIL_BATTLE = commaList(ABIL_CAST_BATTLE, ABIL_STATS_BATTLE , 'AId7')

constant ABIL_BTG = "A07E,AId7,Alsr" //+30% AS, +5 Armor, +4 stats

// Remember to check out the tooltip if you change the following
// STR,AGI,INT
constant ELK_STATS_BONUS    = [2, 0, 1]
constant WOLF_STATS_BONUS   = [3, 0, 2]
constant BEAR_STATS_BONUS   = [4, 0, 3]
constant BONE_STATS_BONUS   = [3, 0, 2]
constant IRON_STATS_BONUS   = [4, 0, 3]
constant STEEL_STATS_BONUS  = [8, 0, 6]
constant BATTLE_STATS_BONUS = [4, 4, 4]

constant IRON_ICON      = ICON_PATH.format("ImprovedMoonArmor")
constant BONE_ICON      = ICON_PATH.format("BoneCoat")
constant STEEL_ICON     = ICON_PATH.format("AdvancedMoonArmor")
constant BATTLE_ICON    = ICON_PATH.format("RobeOfTheMagi")
constant ELK_SKIN_ICON  = ICON_PATH.format("ElkHideCoat")
constant WOLF_SKIN_ICON = ICON_PATH.format("WolfHideCoat")
constant BEAR_SKIN_ICON = ICON_PATH.format("BearHideCoat")

constant SKIN_MODEL  = "Models\\Items\\SkinCoat.mdx"
constant BONE_MODEL  = "Models\\Items\\BoneCoat.mdx"
constant ARMOR_MODEL = "Models\\Items\\Armor.mdx"

constant BATTLE_COOLDOWN = 75.

constant TT_BASIC  = COLOR_ORANGE + "\nBasic Coat|r"  + COLOR_RED +  "\nNote : All basic Coat transmute into the same Bone/Iron/Steel Coat."
constant TT_COMMON = "Increases Strenght by {0}, Intelligence by {1}, Armor by {2}"
constant TT_SKIN   = "A coat made from animals pelt. " + TT_COMMON + " and provides warmth."
constant TT_ARMOR  = "A coat reinforced with metals. " + TT_COMMON + " and provides warmth."

constant TT_BONE  = ("A coat reinforced with bones. "  + TT_COMMON + " and provides warmth.")
                            .format(BONE_STATS_BONUS  [0].formatStat(), BONE_STATS_BONUS  [2].formatStat(), (3).formatStat())
constant TT_ELK   = TT_SKIN .format(ELK_STATS_BONUS  [0].formatStat(), ELK_STATS_BONUS  [2].formatStat(), (1).formatStat()) + TT_BASIC
constant TT_WOLF  = TT_SKIN .format(WOLF_STATS_BONUS [0].formatStat(), WOLF_STATS_BONUS [2].formatStat(), (2).formatStat()) + TT_BASIC
constant TT_BEAR  = TT_SKIN .format(BEAR_STATS_BONUS [0].formatStat(), BEAR_STATS_BONUS [2].formatStat(), (3).formatStat()) + TT_BASIC
constant TT_IRON  = TT_ARMOR.format(IRON_STATS_BONUS [0].formatStat(), IRON_STATS_BONUS [2].formatStat(), (3).formatStat())
constant TT_STEEL = TT_ARMOR.format(STEEL_STATS_BONUS[0].formatStat(), STEEL_STATS_BONUS[2].formatStat(), (5).formatStat()) + " Can cast Omnicure, curing all allies on the map."
constant TT_BATTLE = ("A coat embedded with a protective mana layer. Increase all stats by {0}, Armor by {1} and provides warmth. Can cast Anti-Magic on "+
                     "Allies wherever they are.").format(4..toToolTipGreen(), 7..toToolTipGreen()) + makeToolTipCooldown(BATTLE_COOLDOWN)

class CoatDefinition extends IttItem
    construct(int id, string icon, string model, string name, string hotkey, string toolTipExt, int cost, LinkedList<int> tinting, string abilities)
        super(id, icon, model, name, hotkey, toolTipExt, cost, 1.50, tinting, abilities)
        this.setClassification("Permanent")

class UsableCoatDefinition extends CoatDefinition
    construct(int id, string icon, string model, string name, string hotkey, string toolTipExt, int cost, LinkedList<int> tinting, string abilities)
        super(id, icon, model, name, hotkey, toolTipExt, cost, tinting, abilities)
        this.setActivelyUsed(true)
        this.setCooldownGroup("AIms")

@compiletime function createCoats()
    new DummyCastAbilityWindWalk(ABIL_CAST_BATTLE, "Battle Armor", BATTLE_COOLDOWN)

    new StatBonusAbility(ABIL_STATS_ELK  , "Elk Coat"     , ELK_STATS_BONUS  [0], ELK_STATS_BONUS  [1], ELK_STATS_BONUS  [2])
    new StatBonusAbility(ABIL_STATS_WOLF , "Wolf Coat"    , WOLF_STATS_BONUS [0], WOLF_STATS_BONUS [1], WOLF_STATS_BONUS [2])
    new StatBonusAbility(ABIL_STATS_BEAR , "Bear Coat"    , BEAR_STATS_BONUS [0], BEAR_STATS_BONUS [1], BEAR_STATS_BONUS [2])
    new StatBonusAbility(ABIL_STATS_BONE , "Bone Coat"    , BONE_STATS_BONUS [0], BONE_STATS_BONUS [1], BONE_STATS_BONUS [2])
    new StatBonusAbility(ABIL_STATS_IRON , "Iron Coat"    , IRON_STATS_BONUS [0], IRON_STATS_BONUS [1], IRON_STATS_BONUS [2])
    new StatBonusAbility(ABIL_STATS_STEEL, "Steel Coat"   , STEEL_STATS_BONUS[0], STEEL_STATS_BONUS[1], STEEL_STATS_BONUS[2])
    new StatBonusAbility(ABIL_STATS_BATTLE, "Anabolic Coat", BATTLE_STATS_BONUS[0], BATTLE_STATS_BONUS[1], BATTLE_STATS_BONUS[2])

    new CoatDefinition(ITEM_ELK_SKIN_COAT  , ELK_SKIN_ICON  , SKIN_MODEL, "Elk Skin Coat"  , "A", TT_ELK   , 27, asList(136 , 0   , 255), ABIL_ELK)
    new CoatDefinition(ITEM_WOLF_SKIN_COAT , WOLF_SKIN_ICON , SKIN_MODEL, "Wolf Skin Coat" , "A", TT_WOLF  , 49, asList(255 , 255 , 255), ABIL_WOLF)
    new CoatDefinition(ITEM_BEAR_SKIN_COAT , BEAR_SKIN_ICON , SKIN_MODEL, "Bear Skin Coat" , "A", TT_BEAR  , 70, asList(139 , 69  , 19 ), ABIL_BEAR)
    new CoatDefinition(ITEM_BONE_COAT      , BONE_ICON      , BONE_MODEL, "Bone Coat"      , "A", TT_BONE  , 47, asList(255 , 255 , 255), ABIL_BONE)
    new CoatDefinition(ITEM_IRON_COAT      , IRON_ICON      , ARMOR_MODEL, "Iron Coat"     , "S", TT_IRON  , 63, asList(255 , 255 , 255), ABIL_IRON)..setBtnPos(1, 1)

    new UsableCoatDefinition(ITEM_STEEL_COAT   , STEEL_ICON  , ARMOR_MODEL, "Steel Coat"   , "A", TT_STEEL  , 68, asList(0   , 119 , 255 ), ABIL_STEEL)
    new UsableCoatDefinition(ITEM_BATTLE_ARMOR , BATTLE_ICON , ARMOR_MODEL, "Battle Armor" , "A", TT_BATTLE , 66, asList(255 , 0   , 128 ), ABIL_BATTLE)

init
    EventListener.onCast(ABIL_CAST_BATTLE) (unit caster) ->
        let heroes = GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(() -> begin
            let filterUnit = GetFilterUnit()
            return filterUnit.isType(UNIT_TYPE_HERO) and filterUnit.getOwner().isAllyOf(GetSpellAbilityUnit().getOwner())
        end))
        for hero in heroes
            InstantDummyCaster.castTarget(caster.getOwner(), SPELL_ANTI_MAGIC, 1, Orders.antimagicshell, hero)
