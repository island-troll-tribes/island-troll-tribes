package Dysentery

// Standard lib Imports:
import LocalObjectIDs
import Assets
import BuffObjEditing
import ClosureTimers
import RegisterEvents
import ObjectIds
import ObjectIdGenerator
import AbilityObjEditing

// Third party Imports:
import Lodash

// Local Imports:
import ToolTipsUtils
import LocalAssets

let BUFF_ID = BUFF_DYSENTERY
let BUFF_ORIGINAL_ID = 'BNab'
let CAST_RANGE = 500.
let COOLDOWN = 40.
let MANACOST = 0
let DURATION = 45.

let TOOLTIP_NORM = "Dysentery Track AKA \"Charlie Brown"
let TOOLTIP_EXTENDED = "Throws a bottle filled with dirty stuff, causing the target to get dysentery-like symptoms and poop hot, steaming diarrhea uncontrollably. "+
                        "Tracks a lot longer than normal track and is good for tracking long range."+makeToolTipDuration(DURATION, COOLDOWN)

let UNIT_LOCUST_POOP_ID = compiletime(UNIT_ID_GEN.next())

function createBuff()
    new BuffDefinition(BUFF_ID, BUFF_ORIGINAL_ID)
        ..setIcon(LocalIcons.bTNTracking)
        ..setArtTarget(1,"")
        ..setTooltipNormal(1, TOOLTIP_NORM)
        ..setTooltipNormalExtended(1, "This unit is leaving a trail of feces.")
        ..setTargetAttachmentPoint0(1, "")
        ..setArtSpecial(1, "")

class Dysentery extends AbilityDefinitionParasite
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.setIconNormal(LocalIcons.bTNTracking)
        this.setIconResearch(LocalIcons.bTNTracking)
        this.setManaCost(1, MANACOST)
        this.setCooldown(1, COOLDOWN)
        this.setDurationHero(1, DURATION)
        this.setDurationNormal(1, DURATION)
        this.setBuffs(1, toRawCode(BUFF_ID))
        this.setDamageperSecond(1, 0)
        this.setSummonedUnitCount(1, 0)
        this.setMissileArc(0.35)
        this.setMissileArt(Abilities.brewmasterMissile1)
        this.setTargetsAllowed(1, commaList(
            TargetsAllowed.organic,
            TargetsAllowed.enemies,
            TargetsAllowed.ground
        ))
        this.setCastRange(1, CAST_RANGE)


@compiletime function createDysentery()
    new Dysentery(ABILITY_DYSENTERY, "Q", new Pair(0, 0))
    createBuff()

    new UnitDefinition(UNIT_LOCUST_POOP_ID, UnitIds.locust)
        ..setNameEditorSuffix("(Wurst)")
        ..setModelFile(Objects.illidanSpawnFootPrint1)
        ..setManaInitialAmount(3000)
        ..setManaMaximum(3000)
        ..setScalingValue(1.2)
        ..setMovementHeightMinimum(0.0)
        ..setMovementHeight(0.0)
        ..setShadowImageUnit("")
        ..setAttacksEnabled(0)
        ..setName("Dysentry poop effect")
        ..setDescription("A locust used to display 'poop' left behind by target affected by dysentry")

function onCast()
    let caster = GetSpellAbilityUnit()
    let target = GetSpellTargetUnit()

    doPeriodicallyTimed(0.5, DURATION) cb ->
        if target.isAlive() and target.hasAbility(BUFF_ID)
            // Well since it's about diarrhea and hot poop....
            let poopPrint = createUnit(caster.getOwner(), UNIT_LOCUST_POOP_ID, target.getPos(), target.getFacingAngle())
            poopPrint.setTimedLife(30)


init
    registerSpellEffectEvent(ABILITY_DYSENTERY, () -> onCast())
