package Hostile
import ID
import LinkedList
import UnitEntity
import Lodash


public function createCorpse(player p, int unitId, vec2 pos, angle facing) returns unit
    return CreateCorpse(p, unitId, pos.x, pos.y, facing.degrees())

public abstract class Hostile extends UnitEntity
    protected LinkedList<int> drops

    construct(unit whichUnit)
        super(whichUnit)

    construct(player whichPlayer, vec2 pos)
        super(whichPlayer, pos)

    construct(player whichPlayer, vec2 pos, angle facing)
        super(whichPlayer, pos, facing)

    function addDrop(int itemId)
        drops.add(itemId)

    function getNumCorpses() returns int
        return 1

    override function postCreate()
        super.postCreate()
        drops = new LinkedList<int>()

    override function onDeath()
        let pos = getPos()
        let numCorpses = getNumCorpses()

        for i = 1 to numCorpses
            createCorpse(players[PLAYER_NEUTRAL_AGGRESSIVE], UNIT_MEAT, pos, randomAngle())

        drops.each(drop -> createItem(drop, pos))

        super.onDeath()
