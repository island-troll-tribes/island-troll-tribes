library InitializeUnits requires ID {
	public destructable mammothGate;

	public unit MAMMOTH;
	public unit MASTER_CRAFTER;
	public unit OMINOUS_ALTAR;
	public unit RECIPE_ARMORY;
	public unit RECIPE_WORKSHOP;
	public unit RECIPE_POT;
	public unit RECIPE_WITCH_DOCTORS_HUT;
	public unit RECIPE_TANNERY;
	public unit RECIPE_FIRE;
	public unit RECIPE_GATHERER;

	function onInit() {
		group g = CreateGroup();
		GroupEnumUnitsInRect(g, GetWorldBounds(), Filter(function() -> boolean {
			return GetUnitTypeId(GetFilterUnit()) == UNIT_MAMMOTH;
		}));
		MAMMOTH = FirstOfGroup(g);
		DestroyGroup(g);

		g = CreateGroup();
		GroupEnumUnitsInRect(g, GetWorldBounds(), Filter(function() -> boolean {
			return GetUnitTypeId(GetFilterUnit()) == UNIT_CRAFT_MASTER;
		}));
		MASTER_CRAFTER = FirstOfGroup(g);
		DestroyGroup(g);

		EnumDestructablesInRect(GetWorldBounds(), null, function() {
			if (GetDestructableTypeId(GetEnumDestructable()) == 'ZTg2') {
				mammothGate = GetEnumDestructable();
			}
		});

		RECIPE_ARMORY = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_ARMORY, 2368.0, -10816.0, 270.000 );
		RECIPE_WORKSHOP = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_WORKSHOP, 1728.0, -11456.0, 270.000 );
		RECIPE_POT = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_POT, 1600.0, -11136.0, 270.000 );
		RECIPE_WITCH_DOCTORS_HUT = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_WITCH_DOCTORS_HUT, 1728.0, -10880.0, 270.000 );
		RECIPE_TANNERY = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_TANNERY, 2048.0, -10816.0, 270.000 );
		RECIPE_FIRE = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_FIRE, 2048.0, -11200.0, 270.000 );
		RECIPE_GATHERER = CreateUnit( Player( PLAYER_NEUTRAL_PASSIVE ), UNIT_GATHERER, 2309.0, -11213.2, 172.169 );

		UnitAddAbility(RECIPE_ARMORY, 'Aloc');
		UnitAddAbility(RECIPE_WORKSHOP, 'Aloc');
		UnitAddAbility(RECIPE_POT, 'Aloc');
		UnitAddAbility(RECIPE_WITCH_DOCTORS_HUT, 'Aloc');
		UnitAddAbility(RECIPE_TANNERY, 'Aloc');
		UnitAddAbility(RECIPE_FIRE, 'Aloc');
		UnitAddAbility(RECIPE_GATHERER, 'Aloc');

		g = null;
	}
}
