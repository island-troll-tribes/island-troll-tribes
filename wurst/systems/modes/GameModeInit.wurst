package GameModeInit

import GameMode
import LegacyColors
import IDUtils
import ChatUtils
import LinkedList
import Lodash
import StringUtils
import Classes
import initlater CheatPack

// Just stocking up some string with following index : 0 -> name, 1 -> abbreviation, 2 -> description
public constant string array PLAYER_PER_TRIBE       = ["players-per-tribe"     , "ppt"  , "Set the number of players in each tribe, eg: \"-ppt 6\""]
public constant string array SIX_PER_TRIBE          = ["6v6"                   , "6s"   , "Set the number of players in each tribe to 6"]
public constant string array FOUR_PER_TRIBE         = ["4v4v4"                 , "4s"   , "Set the number of players in each tribe to 4"]
public constant string array THREE_PER_TRIBE        = ["3v3v3v3"               , "3s"   , "Set the number of players in each tribe to 3"]
public constant string array TWO_PER_TRIBE          = ["2v2v2v2v2v2"           , "2s"   , "Set the number of players in each tribe to 2"]
public constant string array FREE_FOR_ALL           = ["free-for-all"          , "ffa"  , "Each player is on their own"]
public constant string array STANDARD_1V1           = ["standard-1v1"          , "1v1"  , "Enables all standard modes for 1v1 (-sf, -rs, -fd 35)"]
public constant string array TOURNAMENT             = ["tournament"            , "to"   , "Tournament Modes (-sf, -el, -fd)"]
public constant string array ALL_RANDOM             = ["all"                   , "ar"   , "Each player is given the same or a random troll, eg: \"-all random\" or \"-all mage\""]
public constant string array HOT_MODE               = ["hot-mode"              , "hm"   , "Increase the amount of heat a fire gives per cast, defaults to 22, eg: \"-hm 30\""]
public constant string array RAISE_HEAT             = ["raise-heat"            , "rh"   , "Increase heat capacity, defaults to 150, eg: \"-rh 200\""]
public constant string array ENABLE_BOATS           = ["enable-boats"          , "eb"   , "Enables construction of transport boats"]
public constant string array NO_TRADE               = ["no-trade"              , "nt"   , "Disable trade ships and merchants"]
public constant string array RANDOM_SPAWNS          = ["random-spawns"         , "rs"   , "Randomize spawn locations, can optionally specify how many to randomize between, eg: \"-rs 4\""]
public constant string array START_WITH_FIRE        = ["start-with-fire"       , "sf"   , "Every troll starts with a fire kit"]
public constant string array START_WITH_ONE_FIRE    = ["start-with-one-fire"   , "so"   , "Each tribe starts with a fire kit"]
public constant string array START_WITH_SPIRIT_WARD = ["start-with-spirit-ward", "sw"   , "Every troll starts with a spirit ward"]
public constant string array MORE_HOSTILES          = ["more-hostiles"         , "rb"   , "Raise hostile animal spawn rate, eg: \"-rb 300\""]
public constant string array ELIMINATION            = ["elimination"           , "el"   , "Elimination mode (no spirit wards)"]
public constant string array NOELIMINATION          = ["noelimination"         , "noel" , "Removed Elimination mode (spirit wards allowed)"]
public constant string array OLD_RANDOM             = ["old-random"            , "or"   , "You can random any class, not just those which haven't been picked"]
public constant string array GRACE_PERIOD_DURATION  = ["grace-period-duration" , "gp"   , "Change the duration of the grace period, eg: \"-gp 8\""]
public constant string array RESPAWN_SYSTEM         = ["respawn-system"        , "re"   , "Use the new respawn system instead of grace period"]
public constant string array FORCED_DUEL            = ["forced-duel"           , "fd"   , "Set a forced duel after a time limit, defaults to 1 h, eg: \"-fd 60\""]
public constant string array SHRINKING_MAP          = ["shrinking-map"         , "sm"   , "Forest fire shrinks map after a default of 60 minutes to a default of 4000 units from center, eg: \"-sm 60 4000\""]
public constant string array QUICK_PICK             = ["quick-pick"            , "qp"   , "Reduce class selection time, defaults to 5, eg: \"-qp 15\""]
public constant string array TEST_MODE              = ["test-mode"             , "tm"   , "No one can lose, enables test commands"]
public constant string array START                  = ["start"                 , "st"   , "Start the game by entering class selection"]
public constant string array SAFE                   = ["safe"                  , "sa"   , "Stats degrade slower every 4.5 s instead of 3 s"]
public constant string array INCREASE_PETS          = ["increase-pets"         , "ip"   , "Pets spawn 23% of the time instead of 17%"]
public constant string array RAISE_PET_GROWTH       = ["raise-pet-growth"      , "rpg"  , "Increase pet growth chance to 30%"]
public constant string array LAVISH                 = ["lavish"                , "lv"   , "More animals spawn and they give more food"]
public constant string array RAISE_FOOD_LIMIT       = ["raise-food-limit"      , "rfl"  , "More animals and fish can be on the map at the same time"]
public constant string array FAST                   = ["fast"                  , "fs"   , "More items spawn at once"]
public constant string array RAISE_ITEM_LIMIT       = ["raise-item-limit"      , "ril"  , "Increase item spawn limits"]
public constant string array NO_INVENTORY_LIMIT     = ["no-inventory-limit"    , "nil"  , "Remove inventory limits on axes/spells/armor"]
public constant string array SURVIVAL               = ["survival"              , "sv"   , "This mode combines famine, cold, and slow mode"]
public constant string array PANIC                  = ["panic"                 , "pn"   , "Stats degrade faster at 2.3 s vs 3 s"]
public constant string array DOUBLE                 = ["double"                , "db"   , "Stats degrade twice as fast"]
public constant string array FAMINE                 = ["famine"                , "fm"   , "Animals spawn less"]
public constant string array FAMINE_X2              = ["famine-x2"             , "fm2"  , "More intense famine"]
public constant string array SLOW                   = ["slow"                  , "sl"   , "Spawn less items"]
public constant string array LOWER_FOOD_LIMIT       = ["lower-food-limit"      , "lfl"  , "Lower spawn rate for animals on the map"]
public constant string array LOWER_ITEM_LIMIT       = ["lower-item-limit"      , "lil"  , "Lower item spawn rate on the map"]
public constant string array OLD_ELEMENTALIST       = ["old-elementalist"      , "oe"   , "Replaces new elementalist with the old elementalist."]
public constant string array DEV                    = ["dev"                   , "d"    , "Development mode (-qp, -tm, -st)"]
public constant string array TAMEABLE_FAWN          = ["tameable-fawn"         , "tf"   , "Tame fawns with acorns"]


init
    GameMode.initialize()

    new GameMode(PLAYER_PER_TRIBE[0], PLAYER_PER_TRIBE[1], PLAYER_PER_TRIBE[2]) (mode, args) ->
        if args.size() < 2
            mode.error("Must supply # of tribes to \"ppt\"")
        else
            let ppt = args.get(1).toInt()
            if (ppt <= 0 or 6 < ppt or ModuloInteger(12, ppt) != 0)
                mode.error("Must have 1-6 players per tribe and all slots must belong to a team")
            else
                gameConfig.setNumPlayersPerTribe(ppt)
                mode.message(ENERGY_COLOR + "Players per tribe|r set to " + ppt.toString())

    new GameMode(SIX_PER_TRIBE[0], SIX_PER_TRIBE[1], SIX_PER_TRIBE[2]) (mode, args) ->
        gameConfig.setNumPlayersPerTribe(6)
        mode.message(ENERGY_COLOR + "6v6|r enabled")

    new GameMode(FOUR_PER_TRIBE[0], FOUR_PER_TRIBE[1], FOUR_PER_TRIBE[2]) (mode, args) ->
        gameConfig.setNumPlayersPerTribe(4)
        mode.message(ENERGY_COLOR + "4v4v4|r enabled")

    new GameMode(THREE_PER_TRIBE[0], THREE_PER_TRIBE[1], THREE_PER_TRIBE[2]) (mode, args) ->
        gameConfig.setNumPlayersPerTribe(3)
        mode.message(ENERGY_COLOR + "3v3v3v3|r enabled")

    new GameMode(TWO_PER_TRIBE[0], TWO_PER_TRIBE[1], TWO_PER_TRIBE[2]) (mode, args) ->
        gameConfig.setNumPlayersPerTribe(2)
        mode.message(ENERGY_COLOR + "2v2v2v2v2v2|r enabled")

    new GameMode(FREE_FOR_ALL[0], FREE_FOR_ALL[1], FREE_FOR_ALL[2]) (mode, args) ->
        gameConfig.setNumPlayersPerTribe(1)
        mode.message(ENERGY_COLOR + "Free for all|r enabled")

    new GameMode(STANDARD_1V1[0], STANDARD_1V1[1], STANDARD_1V1[2]) (mode, args) ->
        mode.message(ENERGY_COLOR + "1v1|r enabled")
        gameConfig.setNumPlayersPerTribe(1)
        GameMode.find("fd").enable(asList("35"))
        GameMode.find("rs").enable()
        GameMode.find("sf").enable()

    new GameMode(TOURNAMENT[0], TOURNAMENT[1], TOURNAMENT[2]) (mode, args) ->
        mode.message(HIGHLIGHT_COLOR + "Tournament mode|r enabled:")
        GameMode.find("sf").enable()
        GameMode.find("fd").enable()
        GameMode.find("el").enable()

    new GameMode(ALL_RANDOM[0], ALL_RANDOM[1], ALL_RANDOM[2]) (mode, args) ->
        let classArgs = args.drop(1)
        if classArgs.size() > 0 and args.get(0) != "random"
            let trollClass = "UNIT_" + classArgs.joinBy("_").toUpperCase()
            let uid = S2ID(trollClass)
            if uid == 0 or getTrollClassType(uid) != ClassType.BASE_CLASS
                mode.error("Invalid class selection")
            else
                gameConfig.setAllTrollEnabled(uid)
                mode.message(ENERGY_COLOR + "All " + classArgs.joinBy(" ") + "|r enabled")
        else
            gameConfig.setAllTrollEnabled(0)
            mode.message(ENERGY_COLOR + "All random|r enabled")
        destroy classArgs

    new GameMode(HOT_MODE[0], HOT_MODE[1], HOT_MODE[2]) (mode, args) ->
        var amount = 22
        if (args.size() > 1)
            amount = args.get(1).toInt()
        gameConfig.setHeatPerCast(amount)
        mode.message(ENERGY_COLOR + "Hot mode|r enabled, heat per cast is now " + GOLD_COLOR + amount.toString() + "|r")

    new GameMode(RAISE_HEAT[0], RAISE_HEAT[1], RAISE_HEAT[2]) (mode, args) ->
        var amount = 150
        if (args.size() > 1)
            amount = S2I(args.get(1))
        gameConfig.setHeatMaximum(amount)
        mode.message(ENERGY_COLOR + "Heat Max|r has been increased. Heat capacity is " + amount.toString())

    new GameMode(ENABLE_BOATS[0], ENABLE_BOATS[1], ENABLE_BOATS[2]) (mode, args) ->
        udg_DisabledBoats = false
        GameMode.find("eb").deregister()
        mode.message(ENERGY_COLOR + "Transport ships|r enabled")

    new GameMode(NO_TRADE[0], NO_TRADE[1], NO_TRADE[2]) (mode, args) ->
        gameConfig.setTradeEnabled(false)
        mode.message("Trade ships and merchants have been disabled.")

    new GameMode(RANDOM_SPAWNS[0], RANDOM_SPAWNS[1], RANDOM_SPAWNS[2]) (mode, args) ->
        let numSpawns = args.size() > 1 ? max(12, args.get(1).toInt()) : 1
        mode.deregister()
        mode.message(ENERGY_COLOR + "Spawn locations|r have been randomized")
        gameConfig.setRandomSpawns(numSpawns)

    new GameMode(START_WITH_FIRE[0], START_WITH_FIRE[1], START_WITH_FIRE[2]) (mode, args) ->
        mode.deregister()
        mode.message("Every troll will start with a " + ENERGY_COLOR + "fire kit|r")
        gameConfig.setStartWithFire(true)

    new GameMode(START_WITH_ONE_FIRE[0], START_WITH_ONE_FIRE[1], START_WITH_ONE_FIRE[2]) (mode, args) ->
        mode.deregister()
        mode.message("Each tribe will start with a " + ENERGY_COLOR + "fire kit|r")
        gameConfig.setStartWithOneFire(true)

    new GameMode(START_WITH_SPIRIT_WARD[0], START_WITH_SPIRIT_WARD[1], START_WITH_SPIRIT_WARD[2]) (mode, args) ->
        mode.deregister()
        mode.message("Every troll will start with a " + ENERGY_COLOR + "spirit ward")
        gameConfig.setStartWithSpiritWard(true)

    new GameMode(MORE_HOSTILES[0], MORE_HOSTILES[1], MORE_HOSTILES[2]) (mode, args) ->
        real next
        if (args.size() > 1)
            next = args.get(1).toReal() / 100
        else
            next = gameConfig.getHostileSpawnRate() + 0.20
        next = min(next, 3.0)
        gameConfig.setHostileSpawnRate(next)
        mode.message(ENERGY_COLOR + "Hostile Animal Spawn Rate|r has been increased to " + (next * 100).toInt().toString() + "% of normal.")

    new GameMode(ELIMINATION[0], ELIMINATION[1], ELIMINATION[2]) (mode, args) ->
        mode.message(HIGHLIGHT_COLOR + "Elimination Mode|r has been enabled. Teams can not build spirit wards now!")
        gameConfig.setEliminationEnabled(true)

    new GameMode(NOELIMINATION[0], NOELIMINATION[1], NOELIMINATION[2]) (mode, args) ->
        mode.message(HIGHLIGHT_COLOR + "Elimination Mode|r has been disabled. Teams can build spirit wards now!")
        gameConfig.setEliminationEnabled(false)

    new GameMode(OLD_RANDOM[0], OLD_RANDOM[1], OLD_RANDOM[2]) (mode, args) ->
        mode.deregister()
        mode.message("Old random enabled, you can now random any class")
        gameConfig.setOldRandomEnabled(true)

    new GameMode(GRACE_PERIOD_DURATION[0], GRACE_PERIOD_DURATION[1], GRACE_PERIOD_DURATION[2]) (mode, args) ->
        var amount = 8.0
        if (args.size() > 1)
            amount = args.get(1).toReal()
        if (not gameConfig.setGracePeriodDuration(amount))
            mode.error("Grace period must end before forced duel")
        else
            mode.message(ENERGY_COLOR + "Grace period duration|r " + amount.toInt().toString() + " min")

    new GameMode(RESPAWN_SYSTEM[0], RESPAWN_SYSTEM[1], RESPAWN_SYSTEM[2]) (mode, args) ->
        gameConfig.setRespawnSystemEnabled(true)
        GameMode.find("gp").enable(asList("0"))
        mode.message(ENERGY_COLOR + "Respawn system|r enabled")

    new GameMode(FORCED_DUEL[0], FORCED_DUEL[1], FORCED_DUEL[2]) (mode, args) ->
        var amount = 60.0
        if (args.size() > 1)
            amount = args.get(1).toReal()
        if (not gameConfig.setForcedDuel(amount))
            mode.error("Force duel must be after end of the grace period")
        else
            mode.message(ENERGY_COLOR + "Forced duel|r after " + amount.toInt().toString() + " min")

    new GameMode(SHRINKING_MAP[0], SHRINKING_MAP[1], SHRINKING_MAP[2]) (mode, args) ->
        var amount = 60.0
        var distance = 4000.0
        if (args.size() > 1)
            amount = args.get(1).toReal()
        if (args.size() > 2)
            distance = args.get(2).toReal()
        if (amount < 0)
            mode.error("Shrinking map timeout must be greater than 0!")
        else
            gameConfig.setForestFire(amount, distance)
            mode.message(RED_COLOR + "Forest fire|r after " + amount.toInt().toString() + " min")

    new GameMode(QUICK_PICK[0], QUICK_PICK[1], QUICK_PICK[2]) (mode, args) ->
        var timeAllowed = 5
        if (args.size() > 1)
            timeAllowed = S2I(args.get(1))
        mode.message(ENERGY_COLOR + "Selection time|r set to " + timeAllowed.toString() + "s")
        gameConfig.setSelectionTimeAllowed(timeAllowed)

    new GameMode(TEST_MODE[0], TEST_MODE[1], TEST_MODE[2]) (mode, args) ->
        mode.message(SPECIAL_COLOR + "Test mode enabled|r")
        gameConfig.setTestMode(true)

    new GameMode(START[0], START[1], START[2]) (mode, args) ->
        GameMode.endModeSelection(true)

    // legacy modes
    new GameMode(SAFE[0], SAFE[1], SAFE[2], false) (mode, args) ->
        udg_STAT_LOWER_INTERVAL = 4.50 //normal 3
        mode.message(ENERGY_COLOR + "Safe mode|r has been enabled. Stats degrade slower. 4.5 sec/decay.")

    new GameMode(INCREASE_PETS[0], INCREASE_PETS[1], INCREASE_PETS[2], false) (mode, args) ->
        udg_PET_CHANCE = 0.23 //.17
        mode.message(ENERGY_COLOR + "Increased Pet|r mode has been enabled. Pets now appear way more frequently. 23%.")

    new GameMode(RAISE_PET_GROWTH[0], RAISE_PET_GROWTH[1], RAISE_PET_GROWTH[2], false) (mode, args) ->
        udg_PET_GROWTH = 0.03
        mode.message(ENERGY_COLOR + "Pet Growth Chance|r has been increased to 30%.")

    new GameMode(LAVISH[0], LAVISH[1], LAVISH[2], false) (mode, args) ->
        udg_FOOD_BASE = 1.80
        udg_FOOD_FOR_KILL_PROPORTION = 1.30
        udg_Lavish = true
        mode.message(ENERGY_COLOR + "Reverse Famine|r has been enabled. More animals spawn and they give more food.")

    new GameMode(RAISE_FOOD_LIMIT[0], RAISE_FOOD_LIMIT[1], RAISE_FOOD_LIMIT[2], false) (mode, args) ->
        gameConfig.setMaxAnimals(90)
        udg_FISH_MAX = 320
        mode.message(ENERGY_COLOR + "Food limits|r have been increased. More animals and fish can be on the map at the same time.")

    new GameMode(FAST[0], FAST[1], FAST[2], false) (mode, args) ->
        udg_ITEM_BASE = 1.50
        udg_FAST_MODE = true
        mode.message(ENERGY_COLOR + "Fast mode|r has been enabled. More items spawn at once.")

    new GameMode(RAISE_ITEM_LIMIT[0], RAISE_ITEM_LIMIT[1], RAISE_ITEM_LIMIT[2], false) (mode, args) ->
        udg_ITEM_MAX = 700
        mode.message(ENERGY_COLOR + "Item spawn limits|r have been increased")

    new GameMode(NO_INVENTORY_LIMIT[0], NO_INVENTORY_LIMIT[1], NO_INVENTORY_LIMIT[2], false) (mode, args) ->
        gameConfig.setInventoryLimits(false)
        mode.message(ENERGY_COLOR + "Inventory Limits|r have been taken off. Trolls can now carry any number of axes/spells/armor.")

    new GameMode(SURVIVAL[0], SURVIVAL[1], SURVIVAL[2]) (mode, args) ->
        udg_FOOD_BASE = 0.40
        udg_FOOD_FOR_KILL_PROPORTION = 0.80
        udg_ITEM_BASE = 0.80
        udg_FAST_MODE = false
        udg_HEAT_PER_CAST = 4
        mode.message("Survival of the fittest has been activated. This mode combines famine, cold, and slow mode.")

    new GameMode(PANIC[0], PANIC[1], PANIC[2], false) (mode, args) ->
        udg_STAT_LOWER_INTERVAL = 2.30
        mode.message("|c00000000Panic mode|r has been enabled. Stats degrade faster now.")

    new GameMode(DOUBLE[0], DOUBLE[1], DOUBLE[2], false) (mode, args) ->
        udg_STAT_DEGRADE_AMOUNT = 2
        mode.message("|c00140000Double Degrade| 2 has been enabled. Stats lower by twice as much.")

    new GameMode(FAMINE[0], FAMINE[1], FAMINE[2], false) (mode, args) ->
        udg_FOOD_BASE = 0.40
        udg_FOOD_FOR_KILL_PROPORTION = 0.80
        udg_Famine = true
        mode.message("|c00800040Famine mode|r has been enabled. Animals spawn less.")

    new GameMode(FAMINE_X2[0], FAMINE_X2[1], FAMINE_X2[2], false) (mode, args) ->
        udg_FOOD_BASE = 0.20
        udg_FOOD_FOR_KILL_PROPORTION = 0.60
        mode.message("|c00800040Ultra Famine|r mode has been enabled. Animals spawn less.")

    new GameMode(SLOW[0], SLOW[1], SLOW[2], false) (mode, args) ->
        udg_ITEM_BASE = 0.80
        udg_FAST_MODE = false
        mode.message("|c00ae4946Slow mode|r has been enabled. Less items spawn at once.")

    new GameMode(LOWER_FOOD_LIMIT[0], LOWER_FOOD_LIMIT[1], LOWER_FOOD_LIMIT[2]) (mode, args) ->
        gameConfig.setMaxAnimals(40)
        udg_FOOD_BASE = 0.8
        udg_FISH_MAX = 50
        mode.message("Food limits have been |c00755d00decreased|r.")

    new GameMode(LOWER_ITEM_LIMIT[0], LOWER_ITEM_LIMIT[1], LOWER_ITEM_LIMIT[2]) (mode, args) ->
        udg_ITEM_MAX = 250
        mode.message("Item limits have been |cff755d00decreased|r.")

    // Not legacy I guess, but we want them at the bottom?
    new GameMode(OLD_ELEMENTALIST[0], OLD_ELEMENTALIST[1], OLD_ELEMENTALIST[2], true) (mode, args) ->
        gameConfig.setUseOldMage(true)
        mode.message(ENERGY_COLOR + "New elementalist subclass replaced with old elementalist.|r")

    new GameMode(DEV[0], DEV[1], DEV[2], false) (mode, args) ->
        addCheatPlayer(players[0])
        GameMode.find("qp").enable()
        GameMode.find("tm").enable()
        GameMode.find("st").enable()

    new GameMode(TAMEABLE_FAWN[0], TAMEABLE_FAWN[1], TAMEABLE_FAWN[2]) (mode, args) ->
        let value = args.size() > 1 ? args.get(0).isConfirmation() : true
        gameConfig.setTameableFawnEnabled(value)
        mode.message(ENERGY_COLOR + "Taming fawns enabled by placing acorns near them")