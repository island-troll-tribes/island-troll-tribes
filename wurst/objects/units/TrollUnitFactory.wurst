package TrollUnitFactory

// Standard library imports:
import Assets
import HashMap
import LinkedList
import ObjectIdGenerator
import ObjectIds
import StringUtils
import UnitObjEditing
import ShopObjects

// Third-party imports:
import Lodash

// Local imports:
import AbilityObjectCreationUtils
import TrollUnitTextConstant

public function HeroDefinition.setNameEnhance(string name)
    this.setName(name)
    this.setTooltipBasic("Pick " + name)
    this.setTooltipAwaken("Revive " + name)
    this.setTooltipRevive("Revive " + name)

public function HeroDefinition.setIcons(string iconPath)
    this.setIconGameInterface(iconPath)
    this.setIconScoreScreen(iconPath)

public function HeroDefinition.setAttackDamage(int attackDamage)
    this.setAttack1DamageBase(attackDamage)
    this.setAttack2DamageBase(attackDamage)

public function HeroDefinition.setAttackSpeed(real attackSpeed)
    this.setAttack1CooldownTime(attackSpeed)
    this.setAttack2CooldownTime(attackSpeed)

public function HeroDefinition.setAbilitiesEnhance(string normalAbilities, string heroAbilities)
    var normalAbil = normalAbilities
    let heroAbilitiesList = heroAbilities.split(",")..dequeue()
    if heroAbilitiesList.size() > 0
        let subclassMenuID = ABIL_ID_GEN.next()

        // Create the spellbook
        let spellbook = new SpellBookObject(
            subclassMenuID,
            "Subclass Menu",
            "T",
            "Choose a subclass.",
            heroAbilitiesList.joinBy(","),
            new Pair(3, 1),
            "StatUp"
        ).buildSpellBook()

        // Update the order ID of the spellbook to avoid conflicts.
        spellbook.presetBaseOrderID(lvl -> "absorb")
        normalAbil += ","+subclassMenuID.toRawCode()

    var inventoryAbil = ""
    for key in trollInventoryAbilityMap
        if trollInventoryAbilityMap.get(key).has(this.getNewId())
            inventoryAbil += commaList(key)
    this.setNormalAbilities(normalAbil+","+inventoryAbil + ","+BASIC_TROLL_SPELLS)

public function createBasicTroll(int newId) returns HeroDefinition
    return new HeroDefinition(newId, UnitIds.blademaster)
        ..setTotemShopInterface()
        ..setUpgradesUsed("")
        ..setRequierementsForTier(2, "")
        ..setRequierementsForTier(3, "")
        ..setHeroAbilities("")
        ..setAttack1Range(128)
        ..setAttack1DamageNumberofDice(1)
        ..setAttack1DamageSidesperDie(1)
        ..setAttack2DamageNumberofDice(1)
        ..setAttack2DamageSidesperDie(1)
        ..setAttack2TargetsAllowed("debris,ground,item,structure,tree,ward")
        ..setAttack2WeaponSound(WeaponSound.MetalHeavySlice)
        ..setAttack2Range(128)
        ..setAttack2WeaponType(WeaponType.Normal)
        ..setAnimationRunSpeed(290)
        ..setAnimationWalkSpeed(290)
        ..setTurnRate(1.80)
        ..setAllowCustomTeamColor(true)
        ..setStrengthPerLevel(1.00)
        ..setAgilityPerLevel(1.0)
        ..setIntelligencePerLevel(1.00)
        ..setManaRegeneration(0)
        ..setManaInitialAmount(200)
        ..setHitPointsRegenerationRate(0)
        ..setManaMaximum(192)
        ..setHitPointsMaximumBase(192)
        ..setStartingStrength(1)
        ..setStartingAgility(1)
        ..setStartingIntelligence(1)

public function createSubTroll(int newId) returns HeroDefinition
    return createBasicTroll(newId)
        ..setStartingStrength(6)
        ..setStartingAgility(6)
        ..setStartingIntelligence(6)

public function createSuperSubTroll(int newId) returns HeroDefinition
    return createBasicTroll(newId)
        ..setManaMaximum(210)
        ..setHitPointsMaximumBase(210)
        ..setStartingStrength(9)
        ..setStartingAgility(9)
        ..setStartingIntelligence(9)
