package GoldTrading

// Standard library imports:
import LinkedList
import SimError

// Local imports:
import ColorUtils
import ChatCommands
import Game
import GameConfig
import PlayerExtensions
import PlayerUtils
import StringExtensions

// The base message used for notifying users of the exchange.
let MSG = compiletime(
    asList(
        "{0}".color(GENERAL_COLOR),  // The action: Sent | Received.
        "{1}",                       // The amount, an integer.
        "gold".color(GOLD_COLOR),    // A constant.
        "{2}".color(GENERAL_COLOR),  // The preposition: to | from.
        "{3}"                        // The name of the counterparty.
    ).joinBy(" ")
)

CommandHandler giveGold = (player giver, LinkedList<string> args) -> begin
    let tribeId = giver.getTribe().getId()
    let playerId = findPlayerIdByStringMatchingTribe(args.get(1), tribeId)
    let currentGold = giver.getLumber()
    let target = players[playerId]
    var amount = args.size() > 2 ? args.get(2).toInt() : currentGold

    if playerId < 0 or playerId > 11
        simError(giver, "Command: -g [player] [goldAmount]")
    else if amount > currentGold
        simError(giver, "Not enough gold")
    else if amount <= 0
        simError(giver, "Amount must be positive.")
    else if playerId == giver.getId()
        simError(giver, "You cannot trade with yourself")
    else if target.getTribe().getId() != tribeId
        simError(giver, "You cannot trade with that player")
    else if not players[playerId].isIngame()
        simError(giver, "This player has left the game")
    else
        // Perform the transaction.
        giver.subLumber(amount)
        target.addLumber(amount)

        // Notify the target.
        printTimedToPlayer(
            MSG.format(
                "Received",
                amount.toString(),
                "from",
                giver.getNameColored()
            ),
            10,
            target
        )

        // Notify the giver.
        printTimedToPlayer(
            MSG.format(
                "Sent",
                amount.toString(),
                "to",
                target.getNameColored()
            ),
            10,
            giver
        )
end

init
    registerGameStartEvent() () ->
        if not gameConfig.isTeamGoldEnabled()
            registerCommandAll("g", giveGold)
            registerCommandAll("gold", giveGold)
