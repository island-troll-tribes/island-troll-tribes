package PetAbilities

// Standard library imports:
import ObjEditingNatives
import ObjectIds

// Local imports:
import ID

// The abilities present in the spellbook for handling pets.
let PET_SPELLS = commaList(
    SPELL_PET_TAME,
    SPELL_PET_RELEASE,
    SPELL_PET_SLEEP
)

@compiletime function createPetSpells()
    createObjectDefinition("w3a", SPELL_PET_SPELLS, 'Aspb')
        ..setLvlDataString("aart", 0, 0, "ReplaceableTextures\\CommandButtons\\BTNSpiritWalker.blp")
        ..setLvlDataInt("abpx", 0, 0, 2)
        ..setLvlDataInt("abpy", 0, 0, 1)
        ..setLvlDataString("spb1", 1, 1, PET_SPELLS)
        ..setLvlDataInt("spb2", 1, 2, 0)
        ..setLvlDataInt("spb3", 1, 3, 10)
        ..setLvlDataInt("spb4", 1, 4, 10)
        ..setLvlDataString("ansf", 0, 0, " (All Test)")
        ..setLvlDataString("ahky", 0, 0, "R")
        ..setLvlDataInt("aite", 0, 0, 0)
        ..setLvlDataString("anam", 0, 0, "Pet Spells")
        ..setLvlDataString("atp1", 1, 0, "[|cffffd700R|r] Pet Commands")
        ..setLvlDataString("aub1", 1, 0, "Use these to control your pet")

public function setPetAbilities(player p, bool hasPet)
    SetPlayerAbilityAvailable(p, SPELL_PET_TAME,    not hasPet)
    SetPlayerAbilityAvailable(p, SPELL_PET_RELEASE,     hasPet)
    SetPlayerAbilityAvailable(p, SPELL_PET_SLEEP,       hasPet)

init
    ForForce(bj_FORCE_ALL_PLAYERS) ->
        setPetAbilities(GetEnumPlayer(), false)
