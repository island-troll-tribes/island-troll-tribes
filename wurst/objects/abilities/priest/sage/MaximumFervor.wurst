package MaximumFervor

import ChannelAbilityPreset
import LocalObjectIDs
import Lodash
import Assets
import RegisterEvents
import ToolTipsUtils
import BuffObjEditing
import DummyCaster
import OrderIds

// I don't know why this spell was made this way in the first place, but I don't want to think about it right now :)
let ABILITY_HIDDEN_POTENTIAL_ID = compiletime(ABIL_ID_GEN.next())

let BUFF_ID = compiletime(BUFF_ID_GEN.next())
let COOLDOWN = 60.
let MANACOST = 30
let DURATION = 10.

let DAMAGE_BONUS = 0.50
let ARMOR_BONUS = 10.

let TOOLTIP_NORM = "Maximum Fervor"
let TOOLTIP_EXTENDED = "This spell has a similar effect of a fervor potion and increase armor by {0}, damage by {1} for {2} seconds. Has {3} seconds cooldown."
                        .format(ARMOR_BONUS.toToolTipGreen(), DAMAGE_BONUS.toToolTipRed(), DURATION.toToolTipLightBlue(), COOLDOWN.toToolTipLightBlue())
let TARGET_ALLOWED = "friend,ground,self"

function createBuff()
    new BuffDefinition(BUFF_ID,  BuffIds.bloodlust)
        ..setIcon(Icons.bTNBerserk)
        ..setArtSpecial(1,"")
        ..setTooltipNormal(1, "Hidden Potential")
        ..setTooltipNormalExtended(1, "This unit has had its hidden potential unleashed, gains high damage and armor for a short time.")
        ..setArtTarget(1, Abilities.illidanMissile)
        ..setTargetAttachmentPoint1(0, "")
        ..setTargetAttachmentPoint0(0, "head")

// Old Spell was coded this way, I used battle roar instead

class HiddenPotential extends AbilityDefinitionInnerFireCreep
    construct(int newAbilityId)
        super(newAbilityId)
        this.setLevels(1)
        this.presetAutocastRange(lvl -> 0)
        this.presetDamageIncrease(lvl -> DAMAGE_BONUS)
        this.presetDefenseIncrease(lvl -> ARMOR_BONUS.toInt())
        this.presetCastRange(lvl -> 99999)
        this.presetCooldown(lvl -> 0)
        this.presetDurationHero(lvl -> DURATION)
        this.presetDurationNormal(lvl -> DURATION)
        this.presetManaCost(lvl -> 0)
        this.presetBuffs(lvl -> toRawCode(BUFF_ID))
        this.setCheckDependencies(false)
        this.setHeroAbility(false)
        this.setItemAbility(false)

class MaximumFervor extends ChannelAbilityPreset
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, 1, true)
        this.presetManaCost(lvl -> MANACOST)
        this.presetCooldown(lvl -> COOLDOWN)
        this.setHeroAbility(false)
        this.setItemAbility(false)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)
        this.setIconNormal(Icons.bTNBerserk)
        this.setIconResearch(Icons.bTNBerserk)
        this.setIconTurnOff(Icons.bTNBerserk)
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.setFollowThroughTime(1, 1)
        this.setAnimationNames("spell,throw")
        this.setArtEffect("")
        this.setArtDuration(1, 1)
        this.setArtTarget(Abilities.brilliance)
        this.setArtCaster("")
        this.setCasterAttachmentPoint("")
        this.setBaseOrderID(1, "taunt")

// class MaximumFervor extends AbilityDefinitionRoar
//     construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
//         super(newAbilityId)
//         this.setHotkeyNormal(hotkey)
//         this.setName(TOOLTIP_NORM)
//         this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
//         this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)
//         this.setButtonPositionNormalX(buttonPos.a)
//         this.setButtonPositionNormalY(buttonPos.b)
//         this.setIconNormal(Icons.bTNBerserk)
//         this.setManaCost(1, MANACOST)
//         this.setCooldown(1, COOLDOWN)
//         this.setDurationHero(1, DURATION)
//         this.setDurationNormal(1, DURATION)
//         this.setAreaofEffect(1, 1)
//         this.setDamageIncrease(1, DAMAGE_BONUS)
//         this.setDefenseIncrease(1, ARMOR_BONUS.toInt())
//         this.setManaRegen(1, 0)
//         this.setMissileArc(0.10)
//         this.setMissileArt(Abilities.murgulMagicMissile)
//         this.setArtCaster(Abilities.berserkertarget)
//         this.setMissileHomingEnabled(true)
//         this.setMissileSpeed(700)
//         this.setBuffs(1, toRawCode(BUFF_ID))


@compiletime function createMaximumFervor()
    new MaximumFervor(ABILITY_MAXIMUM_FERVOR, "W", new Pair(1, 0))
    new HiddenPotential(ABILITY_HIDDEN_POTENTIAL_ID)
    createBuff()

function onCast()
    let caster = GetSpellAbilityUnit()

    new DummyCaster()
        ..owner(caster.getOwner())
        ..origin(caster.getPos())
        ..castTarget(ABILITY_HIDDEN_POTENTIAL_ID, 1, Orders.innerfire, caster)

init
    registerSpellEffectEvent(ABILITY_MAXIMUM_FERVOR, () -> onCast())
