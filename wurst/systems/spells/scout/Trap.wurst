package Trap

import AbilityObjEditing
import BuffObjEditing
import RegisterEvents
import UnitExtensions
import ClosureForGroups
import ObjectIdGenerator
import Orders
import DummyCaster
import ObjectIds
import ID
import Icons
import ToolTipsUtils

constant let COOLDOWN = 150.
constant let TRAP_DURATION = 600.
constant let TRAP_EFFECT_RADIUS = 200.
constant let TOOL_TIP_NORM_TRACK_TRAP = makeToolTipNorm("W", "Tracking Trap")
constant let TOOL_TIP_NORM_SPIKED_TRAP = makeToolTipNorm("Q", "Spiked Trap")

constant let ABILITY_TRAP_EXPLOSION = compiletime(ABIL_ID_GEN.next())
constant let ABILITY_SPIKED_TRAP_SLOW = compiletime(ABIL_ID_GEN.next())
constant let BUFF_SPIKED_TRAP_SLOW = compiletime(BUFF_ID_GEN.next())


constant let TOOL_TIP_LEARN_TRACK_TRAP = makeToolTipNorm("W", "Learn Tracking Trap")
constant let TOOL_TIP_LEARN_SPIKED_TRAP = makeToolTipNorm("Q", "Learn Spiked Trap")

constant let TOOL_TIP_EXT_TRACK_TRAP = "Troll walking through this trap will get tracked, having their position revealed and armor reduced by 4 for 30 seconds. Has "
constant let TOOL_TIP_EXT_SPIKED_TRAP = "An itchy trap, troll who walks on it will get slowed by 80% for 5 seconds. Has 60 seconds cooldown. Spiked Trap last "+
                                        TRAP_DURATION.toInt().toString()+" seconds."

@compiletime function createSpikedTrapBuff()
    new BuffDefinition(BUFF_SPIKED_TRAP_SLOW, 'Bcri')
        ..setArtTarget(1, "Objects\\Spawnmodels\\Other\\HumanBloodCinematicEffect\\HumanBloodCinematicEffect.mdl")
        ..setTargetAttachmentPoint1(1, "chest")
        ..setIcon(Icons.bTNMeatapult)
        ..setTooltipNormal(1, "Spike Trap Slow")
        ..setTooltipNormalExtended(1, "This unit has been crippled by an spiked trap, it's movement speed has been greatly reduced.")

@compiletime function createSpikedTrapDebuffSpell()
    new AbilityDefinitionCripple(ABILITY_SPIKED_TRAP_SLOW)
        ..setIconNormal(Icons.bTNMeatapult)
        ..setManaCost(1, 0)
        ..setDurationHero(1, 5)
        ..setDamageReduction(1, 0)
        ..setAttackSpeedReduction(1, 0)
        ..setMovementSpeedReduction(1, 0.80)
        ..setRequirements("")
        ..setBuffs(1, BUFF_SPIKED_TRAP_SLOW.toRawCode())

@compiletime function createTrapUnit()
    new UnitDefinition(UNIT_TRAP, 'otot')
        ..setNormalAbilities(commaList("Aeth",  ABILITY_TRAP_EXPLOSION.toRawCode()))
        ..setName("Trapper Track Trap")
        ..setModelFile("units\\orc\\StasisTotem\\StasisTotem.mdx")
        ..setHitPointsMaximumBase(15)
        ..setDeathTimeseconds(3)
        ..setSightRadiusDay(200)
        ..setSightRadiusNight(200)

@compiletime function createSpikedTrapUnit()
    new UnitDefinition(UNIT_SPIKED_TRAP, 'otot')
        ..setNormalAbilities(commaList("Aeth",  ABILITY_TRAP_EXPLOSION.toRawCode()))
        ..setName("Trapper Spiked Trap")    
        ..setIconGameInterface(Icons.bTNMeatapult)
        ..setModelFile("Models\\SpikedTrap.mdx")
        ..setScalingValue(1)
        ..setDeathTimeseconds(3)
        ..setHitPointsMaximumBase(15)

@compiletime function createTrackTrapSpell()
    new AbilityDefinitionStasisTrap(SPELL_TRACK_TRAP)
        ..setRequirements("")
        ..setAnimationNames("spell,throw")
        ..setButtonPositionNormalX(1)
        ..setButtonPositionNormalY(1)
        ..setButtonPositionResearchX(1)
        ..setButtonPositionResearchY(0)
        ..setIconNormal(Icons.bTNStasisTrap)
        ..setIconResearch(Icons.bTNStasisTrap)
        ..presetManaCost(lvl -> 10)
        ..setName("Tracking Trap")
        ..setLevels(3)
        ..setLevelSkipRequirement(1)
        ..setHeroAbility(true)
        ..setTooltipLearn(TOOL_TIP_LEARN_TRACK_TRAP)
        ..setTooltipLearnExtended("Troll walking through this trap will get tracked, having their position revealed and armor reduced by 4 for 30 seconds.")
        ..presetTooltipNormal(lvl -> TOOL_TIP_NORM_TRACK_TRAP+" - Level "+lvl.toString())
        ..presetTooltipNormalExtended(lvl -> TOOL_TIP_EXT_TRACK_TRAP+(((COOLDOWN - lvl * 30).toInt()).toString())+" cooldown. Track Trap last "
                                     +TRAP_DURATION.toInt().toString()+" seconds.")
        ..setHotkeyNormal("W")
        ..presetDetonationRadius(lvl -> 100)
        ..presetDetectionRadius(lvl -> 100)
        ..presetDurationNormal(lvl -> TRAP_DURATION)
        ..presetCastRange(lvl -> 100.)
        ..presetDurationHero(lvl -> 0.1)
        ..presetStunDuration(lvl -> 0.1)
        ..presetCooldown(lvl -> COOLDOWN - lvl * 30)
        ..presetWardUnitType(lvl -> UNIT_TRAP.toRawCode())


@compiletime function createSpyTrackTrapSpell()
    new AbilityDefinitionStasisTrap(SPELL_SPY_TRACK_TRAP)
        ..setRequirements("")
        ..setAnimationNames("spell,throw")
        ..setButtonPositionNormalX(1)
        ..setButtonPositionNormalY(1)
        ..setButtonPositionResearchX(1)
        ..setButtonPositionResearchY(0)
        ..setIconNormal(Icons.bTNStasisTrap)
        ..setIconResearch(Icons.bTNStasisTrap)
        ..presetManaCost(lvl -> 10)
        ..setName("Tracking Trap")
        ..setLevels(1)
        ..setHeroAbility(false)
        ..setTooltipNormal(1, TOOL_TIP_NORM_TRACK_TRAP)
        ..setTooltipNormalExtended(1, TOOL_TIP_EXT_TRACK_TRAP+(((COOLDOWN - 90).toInt()).toString())+" cooldown. Track Trap last "
                                     +TRAP_DURATION.toInt().toString()+" seconds.")
        ..setHotkeyNormal("W")
        ..presetDetonationRadius(lvl -> 100)
        ..presetDetectionRadius(lvl -> 100)
        ..presetDurationNormal(lvl -> TRAP_DURATION)
        ..presetCastRange(lvl -> 100.)
        ..presetDurationHero(lvl -> 0.1)
        ..presetStunDuration(lvl -> 0.1)
        ..presetCooldown(lvl -> COOLDOWN - 90)
        ..presetWardUnitType(lvl -> UNIT_TRAP.toRawCode())
    
@compiletime function createSpikedTrapSpell()
    new AbilityDefinitionShadowHunterSerpentWard(SPELL_SPIKED_TRAP)
        ..setRequirements("")
        ..setAnimationNames("spell,slam")
        ..setButtonPositionNormalX(0)
        ..setButtonPositionNormalY(1)
        ..setButtonPositionResearchX(0)
        ..setButtonPositionResearchY(0)
        ..setIconNormal(Icons.bTNMeatapult)
        ..setIconResearch(Icons.bTNMeatapult)
        ..setManaCost(1, 10)
        ..setName("Spiked Trap")
        ..setTooltipLearn(TOOL_TIP_LEARN_SPIKED_TRAP)
        ..setTooltipLearnExtended("Allows you to place spiked trap on the ground, greatly slowing enemy troll who walk through it.")
        ..setTooltipNormal(1, TOOL_TIP_NORM_SPIKED_TRAP)
        ..setTooltipNormalExtended(1, TOOL_TIP_EXT_SPIKED_TRAP)
        ..setHotkeyNormal("Q")
        ..setOrderStringUseTurnOn("purge")
        ..setRequiredLevel(4)
        ..setLevels(1)
        ..setCastRange(1, 100.)
        ..setDurationNormal(1, TRAP_DURATION)
        ..setHeroAbility(TRUE)
        ..setCooldown(1, 60.)
        ..setSummonedUnitType(1, UNIT_SPIKED_TRAP.toRawCode())

@compiletime function createTrapExplosionSpell()
    new AbilityDefinitionMine(ABILITY_TRAP_EXPLOSION)
        ..setButtonPositionNormalX(0)
        ..setButtonPositionNormalY(1)
        ..setCastRange(1, TRAP_EFFECT_RADIUS + 50)
        ..setActivationDelay(1, 5)
        ..setTargetsAllowed(1, "Hero")

function onCast(unit trap)

    forUnitsInRange(trap.getPos(), TRAP_EFFECT_RADIUS) u ->
        if u.isTroll() and u.getOwner().isEnemyOf(trap.getOwner())
            let dummy = new DummyCaster()
            dummy.owner(trap.getOwner())
            dummy.origin(trap.getPos() + vec2(100, 0))
            if  trap.getTypeId() == UNIT_TRAP
                dummy.castTarget('A05P', 1, Orders.faeriefire, u)
            else if trap.getTypeId() == UNIT_SPIKED_TRAP
                dummy.castTarget(ABILITY_SPIKED_TRAP_SLOW, 1, Orders.cripple, u)
    
init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH) ->
        let dyingUnit = GetDyingUnit()

        if dyingUnit.getTypeId() == UNIT_TRAP
            onCast(dyingUnit)
        else if dyingUnit.getTypeId() == UNIT_SPIKED_TRAP
            onCast(dyingUnit)