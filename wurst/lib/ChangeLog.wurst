package ChangeLog

// Standard library imports:
import Assets
import ClosureTimers
import HashMap
import LinkedList
import Quest
import SimError

// Third-party imports:
// TODO: Use this once .join is supported.
// import LodashExtensions

// Local imports:
import ChatCommands
import ColorUtils
import StringExtensions
import StringUtils

// Formatting strings used to display messages.
let TITLE_MSG = "Changelog for ".color(ENERGY_COLOR) + "{0}".color(GOLD_COLOR)
let ENTRY_MSG = DASH + "{0}".color(GENERAL_COLOR)

public class ChangeLog
    static let versions = new HashMap<string, thistype>()
    static let list = new LinkedList<thistype>()
    static var sorted = false
    static Comparator<thistype> comparator = (a, b) -> begin
        return a.major != b.major ?
            (b.major - a.major) :
            (a.minor != b.minor ?
                b.minor - a.minor :
                b.rev.toInt() - a.rev.toInt())
    end

    int major
    int minor
    char rev
    let changes = new LinkedList<string>()

    construct(int major, int minor, int rev)
        this.major = major
        this.minor = minor
        this.rev = char(rev)
        versions.put(this.getVersionString(), this)
        list.add(this)

    function getVersionString() returns string
        return "v{0}.{1}{2}".format(
            this.major.toString(),
            this.minor.toString(),
            this.rev.toString()
        )

    function add(string change)
        // TODO: Do not format here once Lodash supports changes.joinBy.
        this.changes.add(ENTRY_MSG.format(change))

    static function getVersion(string which) returns thistype
        if versions.has(which)
            return versions.get(which)
        return null

    static function ordered() returns LinkedList<thistype>
        if not sorted
            list.sortWith(comparator)
            sorted = true
        return list

    function getTitle() returns string
        return TITLE_MSG.format(this.getVersionString())

    function getDescription() returns string
        // TODO: Use changes.map here once Lodash supports changes.joinBy.
        return this.changes.joinBy("\n")

    function toString() returns string
        return this.getTitle() + "\n" + this.getDescription()


    static function handler(player triggerPlayer, LinkedList<string> args)
        let changelog = args.size() > 1
            ? ChangeLog.getVersion(args.get(1))
            : ChangeLog.ordered().getFirst()

        if changelog == null
            simError(triggerPlayer, "Invalid changelog specified.")
        else
            // Precede the changes with the title.
            triggerPlayer.print(changelog.getTitle(), 15)

            // Print each line individually to avoid truncation.
            for change in changelog.changes
                triggerPlayer.print(change, 15)

init
    registerCommandAll("changelog") (triggerPlayer, args) ->
        ChangeLog.handler(triggerPlayer, args)
    registerCommandAll("cl") (triggerPlayer, args) ->
        ChangeLog.handler(triggerPlayer, args)

    nullTimer() ->
        for changelog in ChangeLog.ordered()
            new Quest(true)
                ..setTitle(changelog.getTitle())
                ..setDescription(changelog.getDescription())
                ..setIcon(Icons.bTNBerserkForTrolls)
                ..setState(QuestState.DISCOVERED)
