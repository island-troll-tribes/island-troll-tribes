package WardArea

// Standard library imports:
import ChannelAbilityPreset
import ClosureEvents

// Third-party imports:
import Lodash

// Local imports:
import ColorUtils
import LocalObjectIDs
import ToolTipsUtils

let ABILITY_ICON = "ReplaceableTextures\\CommandButtons\\BTNGreenSentryWard.blp"

let COOLDOWN = 80.
let SPY_COOLDOWN = COOLDOWN - 30

let WARD_BASE_DURATION = 240.
let WARD_ADDED_DURATION = 120.

let TOOLTIP_NORM = "Ward the Area"
let TOOLTIP_EXTENDED = "Places {0}|r living clay in the area around you. Living clay last {1}|r seconds, has {2} seconds cooldown."

let MANACOST = 10
let CASTTIME = 1.0

class WardAreaSpell extends ChannelAbilityPreset
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, 3, true)
        this.presetManaCost(lvl -> MANACOST)
        this.presetCooldown(lvl -> COOLDOWN - lvl * 10)
        this.setHeroAbility(true)
        this.setItemAbility(false)
        this.setRequiredLevel(0)
        this.setLevelSkipRequirement(0)
        this.presetTargetTypes(Targettype.NONE)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNormHero(hotkey, TOOLTIP_NORM, lvl))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED.format(COLOR_ORANGE.toColorString()+(lvl + 1).toString(),
        (WARD_BASE_DURATION + WARD_ADDED_DURATION * lvl).toToolTipLightBlue(), (COOLDOWN - lvl * 10).toToolTipLightBlue()))

        this.setTooltipLearn(makeToolTipLearn(TOOLTIP_NORM))
        this.setTooltipLearnExtended(TOOLTIP_EXTENDED.format(COLOR_ORANGE.toColorString()+"2/3/4|r", COLOR_LIGHT_BLUE.toColorString()+"360/480/600|r", COLOR_LIGHT_BLUE.toColorString()+"70/60/50|r"))
        this.setIconNormal(ABILITY_ICON)
        this.setIconResearch(ABILITY_ICON)
        this.setIconTurnOff(ABILITY_ICON)
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.presetFollowThroughTime(lvl -> CASTTIME)
        this.setAnimationNames("spell,throw")

class SpyWardAreaSpell extends WardAreaSpell
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, hotkey, buttonPos)
        this.setLevels(1)
        this.setHeroAbility(false)
        this.setCooldown(1, SPY_COOLDOWN)
        this.setTooltipNormal(1, makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.setTooltipNormalExtended(1, TOOLTIP_EXTENDED.format(COLOR_ORANGE.toColorString()+"4", COLOR_LIGHT_BLUE.toColorString()+"600", SPY_COOLDOWN.toToolTipLightBlue()))

@compiletime function createWardAreaSpells()
    new WardAreaSpell(ABILITY_WARD_AREA, "R", new Pair(2, 1))
    new SpyWardAreaSpell(ABILITY_SPY_WARD_AREA, "R", new Pair(3, 1))

function onCast()
    let caster = GetSpellAbilityUnit()
    var wardNbr = GetSpellAbilityId() == ABILITY_WARD_AREA
        ? caster.getAbilityLevel(ABILITY_WARD_AREA)
        : 3

    for i = wardNbr downto 0
        var pos = caster.getPos()
        pos.x += GetRandomReal(-500, 500)
        pos.y += GetRandomReal(-500, 500)
        createUnit(caster.getOwner(), UNIT_LIVING_CLAY, pos, (270.0).asAngleDegrees())
            ..setTimedLife(240. + 120 * wardNbr)
            ..setAnimation("birth")

init
    registerSpellEffectEvent(ABILITY_WARD_AREA, () -> onCast())
    registerSpellEffectEvent(ABILITY_SPY_WARD_AREA, () -> onCast())
