library PublicLibrary initializer initPublicLibrary requires IsTypeThing, LegacyTimerUtils, ID, LegacyColors, HashMap, LegacyTriggers

globals
    HashMap<unit, int> unitUserData
endglobals

public function SetUnitUserDataEx takes unit u, integer data returns nothing
    unitUserData.put(u, data)
endfunction

public function GetUnitUserDataEx takes unit u returns integer
    return unitUserData.get(u)
endfunction

public function HornSound takes nothing returns nothing
    local sound horn = CreateSound("Sound\\Ambient\\DoodadEffects\\TheHornOfCenarius.wav",false,false,false,10,10,"")
    call SetSoundPitch(horn,1.)
    call SetSoundVolume(horn,127)
    call StartSound(horn)
    call KillSoundWhenDone(horn)
    set horn = null
endfunction

public function IsUnitImmobilized takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'Beng') > 0 or GetUnitAbilityLevel(u, 'Bena') > 0 or GetUnitAbilityLevel(u, 'BEer') > 0
endfunction

// superior function to GetUnitsInRangeOfLocMatching
public function GetUnitsInRangeMatching takes real radius, real x, real y, boolexpr filter returns group
    local group g = CreateGroup()
    call GroupEnumUnitsInRange(g, x , y , radius, filter)
    call DestroyBoolExpr(filter)
    return g
endfunction

// New Timed Effects --
public function DestroyEffectTimed takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local effect e = LoadEffectHandle(udg_GameHash, GetHandleId(t), StringHash("effect"))
    call DestroyEffect(e)
    call RemoveSavedHandle(udg_GameHash, GetHandleId(t), StringHash("effect"))
    call ReleaseTimer(t)
    set t = null
    set e = null
endfunction

public function AddTimedEffectLoc takes string STRINGPATH, location UNITLOC, real TIME returns nothing
    local effect e = AddSpecialEffectLoc(STRINGPATH,UNITLOC)
    local timer t = NewTimer()
    call SaveEffectHandle(udg_GameHash, GetHandleId(t), StringHash("effect"),e)
    call TimerStart(t , TIME, false, function DestroyEffectTimed)
    set t = null
    set e = null
endfunction

//call AddTimedEffectUnit("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl","origin",t,2.5)

public function AddTimedEffectUnit takes string STRINGPATH, string UNITHEADER, unit WHICHUNIT, real TIME returns nothing
    local effect e = AddSpecialEffectTarget(STRINGPATH,WHICHUNIT,UNITHEADER)
    local timer t = NewTimer()
    call SaveEffectHandle(udg_GameHash, GetHandleId(t), StringHash("effect"),e)
    call TimerStart(t , TIME, false, function DestroyEffectTimed)
    set t = null
    set e = null
endfunction

//Other functions
public function hasPets takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == UNIT_BEAST_MASTER or GetUnitTypeId(GetFilterUnit()) == UNIT_TRUE_FORM or GetUnitTypeId(GetFilterUnit()) == UNIT_ULTIMATE_FORM )
endfunction

public function getAnimalGreenLight takes unit u returns boolean
    local group bms
    local unit bm
    local integer maxLevel = 0
    set bms = GetUnitsInRangeMatching(400, GetUnitX(u), GetUnitY(u), Condition(function hasPets) )
    if(bms != null) then
      loop
        if(FirstOfGroup(bms) != null) then
          set bm = FirstOfGroup(bms)
          set maxLevel = IMaxBJ(maxLevel, GetHeroLevel(bm))
          call GroupRemoveUnit(bms, bm)
        endif
        exitwhen FirstOfGroup(bms) == null
      endloop
    set udg_booleanParameter=( GetRandomReal(0, 1) <= udg_PET_CHANCE+(maxLevel*0.05) )
    else
    set udg_booleanParameter=( GetRandomReal(0, 1) <= udg_PET_CHANCE )
    endif
    set bms = null
    set bm = null
    return udg_booleanParameter
endfunction


public function getPlayersTroll takes player p returns nothing
    set udg_parameterUnit=udg_PUnits[GetPlayerId(p)]
endfunction

public function GetPlayerTroll takes player p returns unit
    set udg_parameterUnit=udg_PUnits[GetPlayerId(p)]
    return udg_parameterUnit
endfunction

public function setUpSkillTriggers takes unit u returns nothing
    local player p=GetOwningPlayer(u)

    if(GetUnitTypeId(u)==UNIT_HUNTER) then//hunter
        call TriggerRegisterPlayerUnitEventSimple( gg_trg_Sniff, p, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    endif

	set p=null
endfunction

public function itemLower takes integer i returns nothing
    set udg_ITEM_CURRENT=IMaxBJ(udg_ITEM_CURRENT-i,0)
endfunction

globals
    public real array ZOOM_DISTANCE
endglobals

public function ZoomSetCamera takes integer i returns nothing
    if GetLocalPlayer()==Player(i) then
        call SetCameraField(CAMERA_FIELD_ZOFFSET,ZOOM_DISTANCE[i],1)
        call SetCameraField(CAMERA_FIELD_FARZ,5000,0)
    endif
endfunction

public function GetRandomX takes rect whichRect returns real
    return GetRandomReal(GetRectMinX(whichRect), GetRectMaxX(whichRect))
endfunction

public function GetRandomY takes rect whichRect returns real
    return GetRandomReal(GetRectMinY(whichRect), GetRectMaxY(whichRect))
endfunction

globals
    constant real   FONT_SIZE = 0.024
endglobals

public function ManaBurn takes unit whichUnit, real dmg returns nothing
    local texttag tt
    local real cMana = GetUnitState(whichUnit, UNIT_STATE_MANA)
    local real nMana = cMana - dmg
    local real burn
    if cMana - dmg < 0 then
        set nMana = 0
    endif
    call SetUnitState(whichUnit, UNIT_STATE_MANA, nMana )
    set burn = cMana - nMana
    if IsUnitType(whichUnit, UNIT_TYPE_HERO) == true then
        set tt = CreateTextTag()
        call SetTextTagText(tt, "-"+I2S(R2I(burn)), FONT_SIZE)
        call SetTextTagPos(tt, GetUnitX(whichUnit), GetUnitY(whichUnit), 0.0)
        call SetTextTagColor(tt, 82, 82 ,255 ,255)
        call SetTextTagVelocity(tt, 0.0, 0.04)
        call SetTextTagVisibility(tt, true)
        call SetTextTagFadepoint(tt, 2.0)
        call SetTextTagLifespan(tt, 5.0)
        call SetTextTagPermanent(tt, false)
    endif
	set tt=null
endfunction

public function ControlCameraZoom takes nothing returns nothing
    local integer i = 0
    loop
        exitwhen i == 12
        call ZoomSetCamera( i )
        set i = i + 1
    endloop
endfunction

public function initPublicLibrary takes nothing returns nothing
    local timer t = CreateTimer()
    call TimerStart( t, 1., true, function ControlCameraZoom )
    set t = null
    set unitUserData = new HashMap<unit, int>()
endfunction

endlibrary
