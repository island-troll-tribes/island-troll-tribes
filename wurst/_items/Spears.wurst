package Spears
import ClosureEvents
import DummyCaster
import Orders
import ClosureTimers
import PublicLibrary

let ABILITY_SPEAR_HIT_DETECTION = 'A0EH'

enum SpearType
    DarkSpear
    UltraPoisonSpear
    RefinedPoisonSpear
    PoisonSpear
    SteelSpear
    IronSpear
    Spear

let spellToSpearType = new HashMap<int, SpearType>
let spearListeners = new HashMap<unit, EventListener>()

function onSpear(unit caster, unit target, SpearType spearType)
    let dummyCaster = new DummyCaster()
        ..delay(8)
        ..owner(caster.getOwner())
        ..origin(caster.getPos())
    let dummy = dummyCaster.castTarget(ABILITY_SPEAR_HIT_DETECTION, 1, Orders.creepthunderbolt, target)

    bindSpearDamageListener(dummy, target, spearType)

function bindSpearDamageListener(unit dummy, unit target, SpearType spearType)
    let listener = EventListener.add(EVENT_UNIT_DAMAGED) ->
        let damaged = GetTriggerUnit()
        if damaged == target and GetEventDamageSource() == dummy
            if spearListeners.has(dummy)
                destroy spearListeners.getAndRemove(dummy)
                onSpearImpact(target, spearType)

    spearListeners.put(dummy, listener)

function onSpearImpact(unit target, SpearType spearType)
    switch spearType
        case UltraPoisonSpear
            spawnItemChance(0.5, ITEM_ULTRA_POISON_SPEAR, target.getPos())
        case RefinedPoisonSpear
            spawnItemChance(0.5, ITEM_REFINED_POISON_SPEAR, target.getPos())
        case PoisonSpear
            spawnItemChance(0.5, ITEM_POISON_SPEAR, target.getPos())
        case DarkSpear
            spawnItemChance(0.4, ITEM_DARK_SPEAR, target.getPos())
            ManaBurn(target, GetRandomReal(45, 55))
        case SteelSpear
            spawnItemChance(0.666, ITEM_STEEL_SPEAR, target.getPos())
        case IronSpear
            spawnItemChance(0.666, ITEM_IRON_SPEAR, target.getPos())
        case Spear
            spawnItemChance(0.666, ITEM_SPEAR, target.getPos())

    if target.isType(UNIT_TYPE_HERO)
        addSpearResistance(target)

function addSpearResistance(unit u)
    SetPlayerAbilityAvailable(u.getOwner(), ABILITY_SPEAR_RESIST, false)
    if not u.hasAbility(ABILITY_SPEAR_RESIST)
        u.addAbility(ABILITY_SPEAR_RESIST)
    else if u.getAbilityLevel(ABILITY_SPEAR_RESIST) < 6
        u.incAbilityLevel(ABILITY_SPEAR_RESIST)

    doAfter(1) ->
        if u.getAbilityLevel(ABILITY_SPEAR_RESIST) > 1
            u.decAbilityLevel(ABILITY_SPEAR_RESIST)
        else
            u.removeAbility(ABILITY_SPEAR_RESIST)

function spawnItemChance(real chance, int itemId, vec2 pos)
    if GetRandomReal(0, 1) <= chance
        createItem(itemId, pos)

function onSpell()
    let caster = GetSpellAbilityUnit()
    let target = GetSpellTargetUnit()
    let spell = GetSpellAbilityId()
    if spellToSpearType.has(spell)
        onSpear(caster, target, spellToSpearType.get(spell))

init
    spellToSpearType.put(SPELL_DARK_SPEAR, SpearType.DarkSpear)
    spellToSpearType.put(SPELL_UPOISON_SPEAR, SpearType.UltraPoisonSpear)
    spellToSpearType.put(SPELL_RPOISON_SPEAR, SpearType.RefinedPoisonSpear)
    spellToSpearType.put(SPELL_POISON_SPEAR, SpearType.PoisonSpear)
    spellToSpearType.put(SPELL_STEEL_SPEAR, SpearType.SteelSpear)
    spellToSpearType.put(SPELL_IRON_SPEAR, SpearType.IronSpear)
    spellToSpearType.put(SPELL_SPEAR, SpearType.Spear)

    EventListener.add(EVENT_PLAYER_UNIT_SPELL_EFFECT) ->
        onSpell()
