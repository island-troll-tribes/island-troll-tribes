package QuickMake

// Standard library imports:
import ClosureEvents
import LinkedList

// Third-party imports:
import Lodash

// Local imports:
import ClosuresForItems
import HashMap
import LocalObjectIDs
import Mixing
import Tannering
import Transmute
import UnitExtensions

public class QuickMake
    let itemLists = new OwnedLinkedList<LinkedList<int>>()
    let specialHerb = new HashMap<int, int>
    real pickUpRange = 700
    int herbThreshold = 0
    int spellAbilityId = 0

    construct(int spellAbilityId)
        this.spellAbilityId = spellAbilityId
        EventListener.onCast(spellAbilityId, caster -> onCast(caster))

    construct(int spellAbilityId, int herbThreshold)
        this.spellAbilityId = spellAbilityId
        this.herbThreshold = herbThreshold
        EventListener.onCast(spellAbilityId, caster -> onCast(caster))

    function onCast(unit caster)
        let pos = caster.getPos()
        let recipeSize = itemLists.size()
        let items = new OwnedLinkedList<item>()
        let inventory = caster.getInventory()

        specialHerb.put(ITEM_BLUE_HERB, 0)
        specialHerb.put(ITEM_YELLOW_HERB, 0)
        specialHerb.put(ITEM_PURPLE_HERB, 0)
        specialHerb.put(ITEM_ORANGE_HERB, 0)

        if caster.isTroll()
            pickUpRange = 100
        if caster.getTypeId() == UNIT_CRAFT_MASTER
            pickUpRange = 300

        caster.dropItems()

        for itemIds in itemLists
            item found = null
            for itemId in itemIds
                found = findNearestItem(pos, pickUpRange, i -> i.getTypeId() == itemId)

                if specialHerb.has(found.getTypeId())
                    specialHerb.put(found.getTypeId(), specialHerb.get(found.getTypeId()) + 1)

                //In order to avoid picking up the same special herb too much time
                if specialHerb.get(found.getTypeId()) > herbThreshold
                    found = null

                //Special case for eob, once you get 2 spec, you don't want to be able to pick up 2 spec of another type
                //Not pretty but couldn't figure out something else
                if spellAbilityId == ABILITY_QM_ESSENCE_BEES and specialHerb.get(found.getTypeId()) == herbThreshold
                    herbThreshold = 1

                if found != null
                    items.add(found)
                    found.setVisible(false)
                    break
            if found == null
                break

        for elem in items
            elem.setVisible(true)

        if items.size() == recipeSize
            for elem in items
                inventory.remove(elem)
                caster.addItemHandle(elem)

        if caster.getName() == "Mixing Pot"
            mix(caster)
        else if caster.getName() == "Tannery" or caster.getName() == "Ominous Altar"
            tan(caster, spellAbilityId)

        gg_trg_transmute.disable()

        for elem in inventory
            caster.addItemHandle(elem)
        caster.moveInventoryDown()

        gg_trg_transmute.enable()

        if spellAbilityId == ABILITY_QM_ESSENCE_BEES
            herbThreshold = 2
        destroy items
        destroy inventory

    function add(int itemId)
        add(asList(itemId))

    function add(LinkedList<int> itemIds)
        itemLists.add(itemIds)
