package PetGrowth

// Standard library imports:
import ClosureTimers
import LinkedList

// Local imports:
import FlyingUnitDefinition
import MathUtils
import Pets
import Hawk
import Transformation
import UnitEntity

// The frequency for which pet growth is checked.
let GROWTH_FREQUENCY = 4.

// The probability that a pet will advance.
let GROWTH_RATE = 0.02

function checkGrowth(unit pet)
    // Look up the growth chain for the pet.
    let chain = pet.getPetGrowthChain()

    // Look up the next unit along the chain.
    let next = chain.get(chain.indexOf(pet.getTypeId()) + 1)

    // Exit if the unit is at the end of its chain or if it was not chosen.
    if next == 0 or GetRandomReal(0., 1.) > GROWTH_RATE
        return

    // Transform the pet to its next stage.
    transformUnit(pet, next)

    // Increment hawk abilities.
    if UnitEntity.findForUnit(pet) instanceof Hawk
        for abilityID in hawkAbilities
            if flipCoin() and pet.getAbilityLevel(abilityID) < 6
                pet.incAbilityLevel(abilityID)

init
    doPeriodically(GROWTH_FREQUENCY) (CallbackPeriodic cb) ->
        for pet in ENUM_GROUP..enumPets()
            checkGrowth(pet)
