package DiscoDuck
import Hostile
import ItemPoolExtensions


public constant string TELEPORT_MODEL = "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl"


public class DiscoDuck extends Hostile
    private static let unitTypeId = UNIT_DISCO_DUCK
    private static let pinions = CreateItemPool()
    private static thistype instance = null

    static function initialize()
        register(unitTypeId, duck -> new DiscoDuck(duck))

        pinions
        ..addItemType(ITEM_DD_PINION_FIRE, 100)
        ..addItemType(ITEM_DD_PINION_SHADOW, 100)
        ..addItemType(ITEM_DD_PINION_PAIN, 100)

    static function getInstance() returns thistype
        return instance

    construct(unit whichUnit)
        super(whichUnit)

    construct()
        super(players[PLAYER_NEUTRAL_AGGRESSIVE], gg_rct_discoduck.getCenter(), (315.0).asAngleDegrees())

        HornSound()
        flashEffect(TELEPORT_MODEL, getUnit(), "overhead")

        if instance == null
            instance = this

    override function postCreate()
        super.postCreate()
        drops
        ..add(ITEM_BONE)
        ..add(ITEM_BONE)
        ..add(ITEM_STEEL_INGOT)
        ..add(ITEM_STEEL_INGOT)
        ..add(ITEM_MEDALLION_COURAGE)

    override function getNumCorpses() returns int
        return 13

    override function getTypeId() returns int
        return unitTypeId

    override function onDeath()
        let pos = getPos()
        let pinion = pinions.placeRandomItem(pos)
        pinions.removeItemType(pinion.getTypeId())
        super.onDeath()

    override function postDeath()
        getUnit().remove()


init
    DiscoDuck.initialize()
