package UnitExtensions
import HashMap

public function unit.getHeroSkillPoints() returns integer
    return GetHeroSkillPoints(this)

public function unit.modifySkillPoints(integer value)
    UnitModifySkillPoints(this, value)

public function unit.freeSlots() returns int
    int result = 0
    for slot = 0 to this.inventorySize() - 1
        if this.itemInSlot(slot) == null
            result++
    return result

public function unit.itemCount(int itemTypeId) returns int
    var count = 0
    for i = 0 to 5
        if this.itemInSlot(i).getTypeId() == itemTypeId
            count++
    return count

public function unit.getInventoryItemCountMap() returns HashMap<int, int>
    let map = new HashMap<int, int>()
    for i = 0 to 5
        let id = this.itemInSlot(i).getTypeId()
        if map.has(id)
            map.put(id, map.get(id) + 1)
        else
            map.put(id, 1)
    return map


public function unit.addXp(int toAdd)
    AddHeroXP(this, toAdd, true)

public function unit.setXp(int newXpVal)
    this.setXp(newXpVal, true)
