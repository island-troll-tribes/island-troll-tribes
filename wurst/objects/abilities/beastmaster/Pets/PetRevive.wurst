package PetRevive

// Standard library imports:
import ClosureEvents
import ClosureTimers
import OrderIds
import MapBounds
import InstantDummyCaster
import Assets
import AbilityObjEditing

// Local imports:
import Pets
import PlayerExtensions
import ColorUtils
import StringExtensions
import LocalObjectIDs
import AbilityObjectCreationUtils

// Time before pet revives.
let PET_REVIVE_TIME = 90.

// Small aoe to avoid reviving other units.
let AOE = 1.

// Used to get a random area around map bounds.
let MAP_BOUNDS_OFFSET = 1000.

// Message printed to owner on pet death.
let DEATH_MESSAGE = "Your pet has died. It will revive at your side in {0} seconds.".format(PET_REVIVE_TIME.toInt().toString().color(GOLD_COLOR))

let NAME = "Enduring Spirit"
let REVIVE_INFO_TT = "The pet will revive next to its master {0} seconds after it dies.".format(PET_REVIVE_TIME.toInt().toString().color(GOLD_COLOR))

// Only used to give information about revive system to players.
@compiletime function createPetReviveInfo() returns AbilityDefinitionThornyShieldCreep
    return createDummyTooltipAbility(ABILITY_PET_REVIVE_INFO)
        ..presetTooltipNormal(lvl -> NAME.color(COLOR_YELLOW))
        ..presetTooltipNormalExtended(lvl -> REVIVE_INFO_TT)
        ..setIconNormal(Icons.pASBTNReincarnation)
        ..setButtonPositionNormalX(0)
        ..setButtonPositionNormalY(1)

public function onDeath(unit u)
    // Store the owner of the pet.
    let owner = u.getOwner()

    // Exit if dying unit is not its owner's pet.
    if not owner.getPet() == u
        return

    // Effect played when the pet dies.
    flashEffect(Objects.undeadDissipate, u.getPos())

    // Notify the owner of the pet's death.
    owner.print(DEATH_MESSAGE)

    // Delay to ensure corpses/bone drops before being moved.
    nullTimer() ->
        // Move the corpse to a position away from any other dead pets.
        vec2 targetPos = boundMax + vec2(MAP_BOUNDS_OFFSET * owner.getId(), 0)

        // Move the pet to target pos.
        u.setPos(targetPos)

        // Suspend decay of unit's corpse.
        UnitSuspendDecay(u, true)

        // Wait for revive timer.
        doAfter(PET_REVIVE_TIME) ->
            // Verify that the unit is still the pet of the owner.
            if u == owner.getPet()
                // Revive the pet.
                InstantDummyCaster.castImmediate(u.getOwner(), AbilityIds.resurrection, 1, Orders.resurrection, u.getPos())
                // Move the pet back to its owner's troll.
                u.setPos(owner.getTroll().getPos())


init
    EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
        onDeath(EventData.getTriggerUnit())
