package SpellBook

import AbilityObjEditing
import ClosureForGroups
import GameConfig
import ClosureEvents
import Knockback3

@configurable constant string array SPELLS = ["XEZS, XEMS, XFPS, ESEF, ESOC, ESMD", "XEZS, XEMS, XFPS, ESEF, ESOC, ESMD", "XEZS, XEMS, XFPS, ESEF, ESOC, ESMD"]

@compiletime function createSpellbook()
    new AbilityDefinitionSpellBook('XESB')
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(1)
    ..setButtonPositionResearchX(1)
    ..setButtonPositionResearchY(1)
    ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setIconResearch("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setIconTurnOff("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setHeroAbility(true)
    ..setItemAbility(false)
    ..setLevels(3)
    ..presetBaseOrderID(lvl -> "spellbook")
    ..setHotkeyLearn("Z")
    ..setHotkeyNormal("Z")
    ..setName("New Elementalist")
    ..setTooltipLearn("Learn Spells of The Elementalist")
    ..setTooltipLearnExtended("Harness the elements to do your bidding")
    ..presetMaximumSpells(lvl -> 8)
    ..presetMinimumSpells(lvl -> 8)
    ..presetSpellList(lvl -> SPELLS[lvl-1])
    ..presetCooldown(lvl -> 0)
    ..presetTooltipNormal(lvl -> "Look up elemental spell (|cffffcc00Z|r)")
    ..presetTooltipNormalExtended(lvl -> "Contains various spells n such")
    ..presetSharedSpellCooldown(lvl -> false)

function addSpellbook()
    var trigPlayer = GetTriggerPlayer()

    if (gameConfig.isTestModeEnabled())
        print("Adding spellbook to selected heroes")
        forUnitsSelected(trigPlayer) u ->
            if (u.isType(UNIT_TYPE_HERO))
                u.addAbility('XESB')
    else
        print("Requires test mode!")

function addKnockback()
    var trigPlayer = GetTriggerPlayer()
    forUnitsSelected(trigPlayer) u ->
        print("Knocking back " + u.getName())
        Knockback3.add(u, 500., angle(0), angle(0))
        
init
    /*
    var chatTrig = CreateTrigger()
    var chatTrigKB = CreateTrigger()

    for ix = 0 to bj_MAX_PLAYERS - 1
        chatTrig.registerPlayerChatEvent(players[ix], "-spells", true)
        chatTrig.registerPlayerChatEvent(players[ix], "-knockback", true)
    chatTrig.addAction(() -> addSpellbook())
    chatTrigKB.addAction(() -> addKnockback())
    */
    
    EventListener.add(EVENT_PLAYER_CHAT_FILTER) ->
        string msg = GetEventPlayerChatString()
        if (msg == "-spells")
            addSpellbook()
        else if (msg == "-knockback")
            addKnockback()