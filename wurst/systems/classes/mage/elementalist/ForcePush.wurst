package ForcePush

import RegisterEvents
import ClosureTimers
import ClosureForGroups
import AbilityObjEditing
import BuffObjEditing
import OverCharge
import Orders
import DummyCaster
import ITTKnockback

@configurable constant int ABILITY_ID = 'XFPS'
@configurable constant int DUMMY_STUN_ABILITY_ID = 'XFPD'
@configurable constant real RADIUS = 285
@configurable constant real CAST_TIME = 0.25
@configurable constant real COOLDOWN = 5
@configurable constant real MS_SLOW = 0.85
@configurable constant int MANACOST = 5
@configurable constant real SLOW_DURATION = 1
@configurable constant real KNOCKBACK_SPEED = 485
@configurable constant real OVERCHARGE_KNOCKBACK_MULTIPLIER = 1.4
@configurable constant real OVERCHARGE_STUN_DURATION = 1.2

@configurable constant string SLIDE_EFFECT_PATH = "Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl"
@configurable constant string EFFECT_PATH = "Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl"

@compiletime function createBuffs()
    new BuffDefinition('XFPB', 'BHtc')
    ..setIcon("ReplaceableTextures\\CommandButtons\\BTNGolemThunderclap.blp")
    ..setName(1, "Force Push")
    ..setTooltipNormal(1, "Force Push")
    ..setTooltipNormalExtended(1, "Knocked back by force push.")
    ..setArtTarget(1, "")

@compiletime function createSpell()
    new AbilityDefinitionThunderClapCreep('XFPS')
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(0)
    ..setButtonPositionResearchX(2)
    ..setButtonPositionResearchY(0)
    ..setArtCaster("")
    ..setCasterAttachmentPoint("")
    ..setArtTarget("")
    ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNGolemThunderclap.blp")
    ..setAreaofEffect(1, RADIUS-15)
    ..setBuffs(1, "XFPB")
    ..setCastRange(1, 0)
    ..setCastingTime(1, CAST_TIME)
    ..setCooldown(1, COOLDOWN)
    ..setDurationHero(1, SLOW_DURATION+0.05)
    ..setDurationNormal(1, SLOW_DURATION+0.05)
    ..setHeroAbility(false)
    ..setItemAbility(false)
    ..setLevels(1)
    ..setManaCost(1, MANACOST)
    ..setHotkeyNormal("E")
    ..setName("Force Push")
    ..setTooltipNormal(1, "E - Force Push")
    ..setTooltipNormalExtended(1, "After a short channel creates a force wave radiating outwards, knocking back nearby enemies.")
    ..setMovementSpeedReduction(1, MS_SLOW)
    ..setAttackSpeedReduction(1, 0)
    ..setDamage(1, 0)

@compiletime function createStunDummySpell()
    new AbilityDefinitionFireBolt(DUMMY_STUN_ABILITY_ID)
    ..setAnimationNames("")
    ..setMissileSpeed(80000)
    ..setMissileArt("")
    ..setMissileHomingEnabled(true)
    ..setCastingTime(1, 0)
    ..setBuffs(1, "BSTN")
    ..setCastRange(1, 9999)
    ..setCooldown(1, 0)
    ..setDamage(1, 0)
    ..setDurationHero(1, OVERCHARGE_STUN_DURATION)
    ..setDurationNormal(1, OVERCHARGE_STUN_DURATION)
    ..setHeroAbility(false)
    ..setItemAbility(false)
    ..setLevels(1)
    ..setManaCost(1, 0)
    ..setRace(Race.Creeps)
    ..setName("Forcepush overcharged Stun Dummy Spell")

function onCast()
    var caster = GetSpellAbilityUnit()
    var owner = caster.getOwner()
    var pos = caster.getPos()
    bool isOvercharged = consumeOvercharge(caster)
    
    //SFX
    var efx = addEffect(EFFECT_PATH, pos)
    efx..setTimeScale(3)..setScale(0.75)
    doAfter(3, () -> efx.destr())

    //Add to list all units effected
    forUnitsInRange(pos, RADIUS) u ->
        if u.getOwner().isEnemyOf(owner) and not u.isType(UNIT_TYPE_FLYING) and u.isAlive()
            if not isOvercharged
                ITTKnockback.add(u, KNOCKBACK_SPEED, pos.angleTo(u.getPos()), angle( bj_PI / 2))
            else if isOvercharged
                ITTKnockback.add(u, KNOCKBACK_SPEED * OVERCHARGE_KNOCKBACK_MULTIPLIER, pos.angleTo(u.getPos()), angle( bj_PI / 2))
                new DummyCaster().castTarget(owner, DUMMY_STUN_ABILITY_ID, 1, Orders.firebolt, u, caster.getPos3Real())
                                
init
    registerSpellEffectEvent(ABILITY_ID, () -> onCast())
    
