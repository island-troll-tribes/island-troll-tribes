package ItemExtensions
import IsTypeThing

public function item.getType() returns itemtype
    return GetItemType(this)

public function item.isSpell() returns bool
    return isItemSpell(this)

public function item.isAxe() returns bool
    return isItemAnyAxe(this)

public function item.isShield() returns bool
    return isItemAnyShield(this)

public function item.isCoat() returns bool
    return isItemCoat(this)

public function item.isGloves() returns bool
    return isItemGloves(this)

public function item.isBoots() returns bool
    return isItemBoots(this)

public function item.isPinion() returns bool
    return isItemPinion(this)

public function item.isAxeOrShield() returns bool
    return this.isAxe() or this.isShield()

public function item.isAllyFireAround(real radius, unit caster) returns bool
    var nearbyUnits = CreateGroup()..enumUnitsInRange(this.getPos(), radius)
    while nearbyUnits.hasNext()
        let u = nearbyUnits.next()
        if not u.isEnemyOf(caster.getOwner()) and u.getTypeId() == UNIT_FIRE
            nearbyUnits.destr()
            return true
    nearbyUnits.destr()
    return false

// TODO: Automate this check somehow.
public function item.isSpellbook() returns bool
    return this.getTypeId() == ITEM_HORN_MAMMOTH
