package SmokeMeat
import RegisterEvents
import MathUtils
import UnitExtensions
import ID
import StackNSplit

init
    registerSpellEffectEvent(SPELL_SMOKE_MEAT) ->
        let smoker = GetSpellAbilityUnit()
        if smoker.hasItemById(ITEM_FLINT) and smoker.hasItemById(ITEM_TINDER)
            smoker.getItemById(ITEM_TINDER).remove()

            var charges = 0
            for i = 0 to smoker.inventorySize() - 1
                let maybeMeat = smoker.itemInSlot(i)
                let itemId = maybeMeat.getTypeId()
                switch itemId
                    case ITEM_COOKED_MEAT
                        charges += maybeMeat.getCharges()
                    case ITEM_DISEASED_MEAT
                        charges += floor(maybeMeat.getCharges() / 2)

            //Spawn meat in appropriately sized stacks
            removeMeats(smoker)
            let maxStack = getItemMaxStacks(ITEM_SMOKED_MEAT)
            while charges > 0
                let meat = createItem(ITEM_SMOKED_MEAT, smoker.getPos())
                    ..setCharges(min(charges, maxStack))
                smoker.addOrStackItem(meat)
                charges -= min(charges, maxStack)

function removeMeats(unit smoker)
    for i = 1 to 6
        smoker.getItemById(ITEM_COOKED_MEAT).remove()
        smoker.getItemById(ITEM_DISEASED_MEAT).remove()
