package AutoSkill
import RegisterEvents
import HashMap
import UnitExtensions
import OnUnitEnterLeave
import ClosureTimers
import ID

let skillMap = new HashMap<int, int>()

/**
    This file allow you to put spells on autoSkill, meaning the skill will level up by itself instead of having the player
    attribute skillPoint
*/

function autoSkill(unit whichUnit)
    if not whichUnit.isTroll()
        return

    let unitTypeId = whichUnit.getTypeId()
    let skillPoints = whichUnit.getSkillPoints()

    if not skillMap.has(unitTypeId)
        return

    for i = 1 to skillPoints
        whichUnit.selectSkill(skillMap.get(unitTypeId))

function maybeAutoSkillEnteringUnit(unit whichUnit)
    if not whichUnit.isTroll()
        return

    nullTimer(-> autoSkill(whichUnit))


init
    registerPlayerUnitEvent(EVENT_PLAYER_HERO_LEVEL, -> autoSkill(GetTriggerUnit()))
    onEnter(-> maybeAutoSkillEnteringUnit(getEnterLeaveUnit()))

    skillMap

    // Hunter
    ..put(UNIT_HUNTER              , SPELL_TRACK                     )
    ..put(UNIT_HUNTER_1            , SPELL_TRACK                     )
    ..put(UNIT_WARRIOR             , SPELL_WARRIOR_SPELLBOOK         )
    ..put(UNIT_WARRIOR             , SPELL_GIANT_SWING               )
    ..put(UNIT_TRACKER             , SPELL_TRACKER_SPELLBOOK         )
    ..put(UNIT_JUGGERNAUT          , SPELL_THE_JUGGERNAUT            )

    // Mage
    ..put(UNIT_MAGE                , SPELL_MAGE_SPELLBOOK            )
    ..put(UNIT_MAGE_1              , SPELL_MAGE_SPELLBOOK            )
    ..put(UNIT_ELEMENTALIST        , 'A04S'                          )
    ..put(UNIT_ELEMENTALIST_1      , 'A04S'                          )
    ..put(UNIT_ELEMENTALIST_NEW    , SPELL_ELEMENTALIST_NEW_SPELLBOOK)
    ..put(UNIT_HYPNOTIST           , SPELL_HYPNOTIST_SPELLBOOK       )
    ..put(UNIT_DEMENTIA_MASTER     , SPELL_DEMENTIA_MASTER_SPELLBOOK )

    // Priest
    ..put(UNIT_PRIEST              , SPELL_PRIEST_SPELLBOOK          )
    ..put(UNIT_BOOSTER             , SPELL_BOOSTER_SPELLBOOK         )
    ..put(UNIT_BOOSTER_1           , SPELL_BOOSTER_SPELLBOOK         )
    ..put(UNIT_MASTER_HEALER       , SPELL_MASTER_HEALER_SPELLBOOK   )
    ..put(UNIT_MASTER_HEALER_1     , SPELL_MASTER_HEALER_SPELLBOOK   )
    ..put(UNIT_SAGE                , SPELL_SAGE_SPELLBOOK            )

    // Beast Master
    ..put(UNIT_SHAPESHIFTER_WOLF   , SPELL_SHAPESHIFTER_FORM         )
    ..put(UNIT_SHAPESHIFTER_BEAR   , SPELL_SHAPESHIFTER_FORM         )
    ..put(UNIT_SHAPESHIFTER_PANTHER, SPELL_SHAPESHIFTER_FORM         )
    ..put(UNIT_SHAPESHIFTER_TIGER  , SPELL_SHAPESHIFTER_FORM         )
    ..put(UNIT_CHICKEN_FORM        , SPELL_SHORTNESS                 )

    // Thief
    ..put(UNIT_THIEF               , SPELL_CLOAK                     )
    ..put(UNIT_ESCAPE_ARTIST       , SPELL_ESCAPE_ARTIST_SPELLBOOK   )
    ..put(UNIT_CONTORTIONIST       , SPELL_CONTORTIONIST_SPELLBOOK   )
    ..put(UNIT_ASSASSIN            , SPELL_ASSASSINATE               )

    // Scout
    ..put(UNIT_SCOUT               , SPELL_REVEAL_ID                 )
    ..put(UNIT_OBSERVER            , SPELL_WARD_AREA                 )
    ..put(UNIT_TRAPPER             , SPELL_TRAPPER_SPELLBOOK         )
    ..put(UNIT_SPY                 , SPELL_CHAIN_REVEAL              )

    // Gatherer
    ..put(UNIT_GATHERER            , SPELL_ITEM_RADAR                )
    ..put(UNIT_HERB_MASTER         , SPELL_TELE_GATHER               )
    ..put(UNIT_RADAR_GATHERER      , SPELL_TELE_GATHER               )
    ..put(UNIT_OMNIGATHERER        , SPELL_ITEM_WARP                 )

    // Unimplemented Troll
    ..put(UNIT_TROLL_BRAWLER       , 'A0C3'                          )
    ..put(UNIT_TROLL_BREWMASTER    , 'A0C5'                          )
    ..put(UNIT_DRUID               , 'A0EW'                          )
    ..put(UNIT_DRUNKEN_TROLL       , 'A0C1'                          )
