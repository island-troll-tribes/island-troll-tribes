package HuntingNet


import AbilityObjEditing
import PublicLibrary
import ItemObjEditing
import Assets
import ClosureEvents
import ClosureTimers
import ObjectIds
import UnitExtensions
import PreventNet
import Ensnare

constant HUNTING_NET_ENSNARE = compiletime(ABIL_ID_GEN.next())
let HERO_DURATION = 2.5
let NORMAL_DURATION = 13.
let COOLDOWN = 12.
let CAST_RANGE = 700.

constant ICON = "ReplaceableTextures\\CommandButtons\\BTNHuntingNet.blp"
constant MODEL = Abilities.ensnareTarget
constant TT = "A net primarily used for hunting. If the animal dies while ensnared the net will be retrievable"


@compiletime function createDummyAbility()
    new AbilityDefinitionEnsnare(HUNTING_NET_ENSNARE)
    ..setArtCaster("")
    ..setArtEffect("")
    ..setArtTarget("")
    ..setArtSpecial("")
    ..setIconNormal(Icons.bTNGreaterInvisibility)
    ..setIconResearch(Icons.bTNGreaterInvisibility)
    ..setIconTurnOff(Icons.bTNGreaterInvisibility)
    ..setHeroAbility(false)
    ..setItemAbility(true)
    ..setLevels(1)
    ..setHotkeyNormal("A")
    ..setName("TrueSight")
    ..setTooltipNormal(1, "dummy spell")
    ..setTooltipNormalExtended(1, "dummy spell")
    ..setCooldown(1, COOLDOWN)
    ..setManaCost(1, 0)
    ..setAnimationNames("")
    ..setDurationHero(1, HERO_DURATION)
    ..setCastingTime(1, 0)
    ..setDurationNormal(1, NORMAL_DURATION)
    ..setEffectSound("")
    ..setCastRange(1, CAST_RANGE)

@compiletime function createHuntingNet()
    new ItemDefinition(ITEM_HUNTING_NET, 'rst1')
    ..setName("Hunting Net")
    ..setAbilities(toRawCode(HUNTING_NET_ENSNARE))
    ..setTooltipBasic("A net for Hunting")
    ..setHotkey("")
    ..setTooltipExtended(TT)
    ..setDroppedWhenCarrierDies(true)
    ..setLumberCost(8)
    ..setGoldCost(0)
    ..setModelUsed(MODEL)
    ..setScalingValue(1)
    ..setInterfaceIcon(ICON)
    ..setDescription("Reusable net as long as target dies while ensnared")
    ..setLevel(0)
    ..setCanBeSoldToMerchants(true)
    ..setActivelyUsed(true)
    ..setHitPoints(75)
    ..setIgnoreCooldown(false)
    ..setNumberofCharges(1)
    ..setPerishable(true)
    ..setCooldownGroup("Aens")
 
        
function onHuntNet()
    let target = GetSpellTargetUnit()
    let pos = target.getPos()
    real NET_DURATION = 0.
    NET_DURATION = target.isTroll() ? HERO_DURATION : NORMAL_DURATION
    doPeriodicallyTimed(ANIMATION_PERIOD, NET_DURATION) netCounter ->
        if not target.isAlive()
            createItem(ITEM_HUNTING_NET, pos)
            netCounter.stop()
    
    
init
    registerSpellEffectEvent(HUNTING_NET_ENSNARE) ->// TODO moveTarget and onHuntNet need to be conditional based on preventNet
        preventNet()
        moveTarget()
        onHuntNet()

