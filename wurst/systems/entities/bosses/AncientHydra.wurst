package AncientHydra

// Standard library imports:
import Assets
import ClosureEvents
import ClosureForGroups
import ClosureTimers
import DummyCaster
import Orders

// Local imports:
import GeometryUtils
import Hostile
import LocalObjectIDs
import LocalSoundUtils
import UnitExtensions
import UnitUtils

public class AncientHydra extends Hostile
    private static let unitTypeId = UNIT_ANCIENT_HYDRA

    static function initialize()
        register(unitTypeId, hydra -> new AncientHydra(hydra))

    CallbackPeriodic callback
    var frostReady = true

    construct(unit whichUnit)
        super(whichUnit)

    override function postCreate()
        super.postCreate()
        let hydra = getUnit()
            ..addSleep(false)
            ..setCreepGuard(false)

        playMammothHorn()
        printTimed("The ancient hydra has been summoned!".color("red".toColor()), 5)
        flashEffect(Abilities.massTeleportCaster, hydra, "overhead")
        callback = doPeriodically(4, cb -> attackCenter())

        EventListener.add(hydra, EVENT_UNIT_DAMAGED, -> onAttacked())
        EventListener.add(hydra, EVENT_PLAYER_UNIT_SPELL_EFFECT, -> onSpellEffect())

    function attackCenter()
        let hydra = getUnit()

        // Reset position to avoid neutral guarding behavior.
        hydra.setPos(hydra.getPos())

        // Continue attacking if Breath of Frost cannot be used.
        if not frostReady
            return

        // Search for a nearby target to attack.
        let nearest = findNearestUnit(getPos(), 600) (target) ->
            return not target.isAllyOf(hydra)

        // Use of Breath of Frost if there is a target.
        if nearest != null
            hydra.issuePointOrder("breathoffrost", nearest.getPos())
            frostReady = false
            doAfter(10) ->
                frostReady = true
        // Continue moving and attacking otherwise.
        else
            hydra.issuePointOrder("attack", gg_rct_discoduck.getCenter())

    override function getNumCorpses() returns int
        return 8

    override function onDeath()
        destroy callback

        let pos = getPos()
        for i = 0 to 1
            createUnit(
                players[PLAYER_NEUTRAL_AGGRESSIVE],
                UNIT_LESSER_HYDRA,
                pos,
                randomAngle()
            )

        super.onDeath()

    function onAttacked()
        let attacker = GetEventDamageSource()
        if attacker.getTypeId() == UNIT_BEE
            attacker.setOwner(players[PLAYER_NEUTRAL_AGGRESSIVE], true)

    function onSpellEffect()
        if GetSpellAbilityId() == ABILITY_NETHER_POTION_BANISH
            getUnit().removeAbility(BUFF_NETHER)
            new DummyCaster()
                ..owner(players[PLAYER_NEUTRAL_AGGRESSIVE])
                ..origin(GetSpellAbilityUnit().getPos())
                ..castTarget(ABILITY_NETHER_POTION_BANISH, 1, Orders.banish, GetSpellAbilityUnit())


init
    AncientHydra.initialize()
