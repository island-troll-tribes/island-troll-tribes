package EatRawMeat

import AbilityObjEditing
import Assets
import ClosureEvents
import ClosureTimers
import MeatSystem
import HashMap

public let ABILITY_ID_EAT_RAW_MEAT = 'XERW'
public let ABILITY_ID_EAT_RAW_MEAT_DISABLED = 'XERD'
let CHANNEL_TIME = 2.
let HP_PER_SECOND = 12.5
let SFX_PATH = "Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl"

@compiletime function createEatRawMeat()
    new AbilityDefinitionIllidanChannel(ABILITY_ID_EAT_RAW_MEAT)
        ..setTargetType(1, 0)
        ..setAnimationNames("")
        ..setArtCaster("")
        ..setArtEffect("")
        ..setArtTarget("")
        ..setArtSpecial("")
        ..setButtonPositionNormalX(1)
        ..setButtonPositionNormalY(2)
        ..setButtonPositionResearchX(1)
        ..setButtonPositionResearchY(2)
        ..setIconNormal(Icons.bTNCannibalize)
        ..setIconResearch(Icons.bTNCannibalize)
        ..setIconTurnOff(Icons.bTNCannibalize)
        ..setHeroAbility(false)
        ..setItemAbility(false)
        ..setLevels(1)
        ..setHotkeyNormal("D")
        ..setName("Eat Raw Meat")
        ..setDisableOtherAbilities(1, false)
        ..setFollowThroughTime(1, CHANNEL_TIME)
        ..setCastingTime(1, 0)
        ..setTooltipNormal(1, "|c00ffcc00D|r - Eat Raw Meat")
        ..setTooltipNormalExtended(1, "Eats a raw meat from your meat inventory. Restores 25 hp over 2 seconds. Moving cancels this effect.")
        ..setBaseOrderID(1, "cannibalize")
        ..setOrderStringUseTurnOn("cannibalize")
        ..setOrderStringActivate("cannibalize")
        ..setOrderStringDeactivate("cannibalize")
        ..setOrderStringTurnOff("cannibalize")
        ..setOptions(1, 1)
        ..setCooldown(1, 0.5)
        ..setManaCost(1, 0)

@compiletime function createEatRawMeatDisabled()
    new AbilityDefinitionBladeMasterCriticalStrike(ABILITY_ID_EAT_RAW_MEAT_DISABLED)
        ..presetChancetoCriticalStrike(lvl -> 0)
        ..presetChancetoEvade(lvl -> 0)
        ..presetDamageBonus(lvl -> 0)
        ..presetDamageMultiplier(lvl -> 0)
        ..presetTooltipNormal(lvl ->  "|c00ffcc00D|r - Eat Raw Meat")
        ..presetTooltipNormalExtended(lvl -> "Pick up a raw meat to activate this ability")
        ..setHeroAbility(false)
        ..setItemAbility(false)
        ..presetButtonPosNormal(1, 2)
        ..presetIcon(Icons.dISBTNCannibalize)

let eatRawMeatInstances = new HashMap<unit, EatRawMeatInstance>()

class EatRawMeatInstance
    unit caster
    bool isChanneling

    function healthLoop()
        doPeriodicallyTimed(ANIMATION_PERIOD, CHANNEL_TIME) cb ->
            if this.isChanneling and caster.isAlive()
                caster.setHP(caster.getHP() + HP_PER_SECOND * ANIMATION_PERIOD)
            else
                cb.stop()

            if cb.isLast()
                destroy this

    construct(unit casterUnit)
        caster = casterUnit
        this.isChanneling = true
        healthLoop()

    ondestroy
        this.isChanneling = false
        if (eatRawMeatInstances.has(caster))
            if (eatRawMeatInstances.get(caster) == this)
                eatRawMeatInstances.remove(caster)

function onCast()
    var caster = GetSpellAbilityUnit()

    //Exit if no meat inventory to begin with
    if not meatInventoryInstances.has(caster)
        return

    //Try consuming a meat if we have one and do effects if succesful
    if meatInventoryInstances.get(caster).tryRemoveOneMeat()
        if eatRawMeatInstances.has(caster)
            destroy eatRawMeatInstances.getAndRemove(caster)

        eatRawMeatInstances.put(caster, new EatRawMeatInstance(caster))
        let efx = caster.addEffect(SFX_PATH, "origin")
        efx.destr()

function onEndCast()
    if GetSpellAbilityId() == ABILITY_ID_EAT_RAW_MEAT
        var caster = GetSpellAbilityUnit()
        if (eatRawMeatInstances.has(caster))
            eatRawMeatInstances.get(caster).isChanneling = false

init
    registerSpellEffectEvent(ABILITY_ID_EAT_RAW_MEAT, () -> onCast())
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_ENDCAST, () -> onEndCast())
