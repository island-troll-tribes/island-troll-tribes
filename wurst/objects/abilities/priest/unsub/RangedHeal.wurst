package RangedHeal

import RegisterEvents
import ChannelAbilityPreset
import Assets
import LocalObjectIDs
import HealingSystem
import ClosureTimers
import Lodash
import ToolTipsUtils

//let ABILITY_ID = 'XPRH'
let CAST_RANGE = 6000.
let HEALING_AMOUNT = 50.
let COOLDOWN = 5.
let MANACOST = 15
let HEAL_AMOUNT = 50.
let TOOLTIP_NORM = "Ranged heal"
let TOOLTIP_EXTENDED = "Heals a friendly unit for {0} health. Can be casted from very far away. Has {1} seconds cooldown."
                        .format(HEALING_AMOUNT.toToolTipGreen(),COOLDOWN.toToolTipLightBlue())

let HEAL_HIT_FX = Abilities.healTarget
let TARGET_ALLOWED = "air,ground,friend,vuln,invu,self,organic,nonancient,neutral"


class RangedHeal extends ChannelAbilityPreset
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, 1, true)
        this.setIconNormal(Icons.bTNHeal)
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.presetCastRange(lvl -> CAST_RANGE)
        this.presetCastingTime(lvl -> 0)
        this.presetFollowThroughTime(lvl -> 0.275)
        this.presetCooldown(lvl -> COOLDOWN)
        this.presetManaCost(lvl -> MANACOST)
        this.presetTargetType(lvl -> 1)
        this.presetTargetsAllowed(lvl -> TARGET_ALLOWED)
        this.presetOptions(lvl -> 1)
        this.presetBaseOrderID(lvl -> "heal")
        this.setHeroAbility(false)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)

@compiletime function createRangedHeal()
    new RangedHeal(ABILITY_RANGED_HEAL, "R", new Pair(3, 0))

function onCast()
    var target = GetSpellTargetUnit()
    new HealingInstance(target, HEALING_AMOUNT, HealingType.ABILITY)
    let fx = target.addEffect(HEAL_HIT_FX, "origin")
    doAfter(1.5) ->
        fx.destr()

init
    registerSpellEffectEvent(ABILITY_RANGED_HEAL) ->
        onCast()
