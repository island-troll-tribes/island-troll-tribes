package Rejuvenation

// Standard Library Imports:
import AbilityObjEditing
import Assets
import ObjectIds

// Third-party imports:
import Lodash

// Local Imports:
import LocalObjectIDs
import ToolTipsUtils


let COOLDOWN = 60.
let MANA_COST = 15
let HEAL_AMOUNT = 150.
let DURATION = 3.
let CAST_RANGE = 150.
let BUTTON_POS_X = 0
let BUTTON_POS_Y = 0
let HOTKEY = "Q"
let NAME = "Rejuvenation"
let TOOLTIP_BASIC = "Rejuvenation"
let TOOLTIP_EXT   = "Heal target ally for " + HEAL_AMOUNT.toToolTipGreen() + "over " + DURATION.toToolTipOrange()
                    + "seconds. "
                    + makeToolTipCooldown(COOLDOWN)

@compiletime function createRejuvenationAbility() returns AbilityDefinitionRejuvination
    return new AbilityDefinitionRejuvination(ABILITY_REJUVENATION)
    ..setName(NAME)
    ..presetManaPointsGained(LVL -> 0)
    ..presetHitPointsGained(LVL -> HEAL_AMOUNT)
    ..presetAllowWhenFull(LVL -> 1)
    ..presetDurationHero(LVL -> DURATION)
    ..presetDurationNormal(LVL -> DURATION)
    ..presetCooldown(LVL -> COOLDOWN)
    ..presetManaCost(LVL -> MANA_COST)
    ..presetCastRange(LVL -> CAST_RANGE)
    ..presetButtonPosNormal(BUTTON_POS_X, BUTTON_POS_Y)
    ..presetHotkey(HOTKEY)
    ..presetTooltipNormal(LVL -> TOOLTIP_BASIC)
    ..presetTooltipNormalExtended(LVL -> TOOLTIP_EXT)
    ..presetTargetsAllowed(lvl -> commaList(
        TargetsAllowed.air,
        TargetsAllowed.ground,
        TargetsAllowed.friend,
        TargetsAllowed.vulnerable,
        TargetsAllowed.invulnerable,
        TargetsAllowed.self,
        TargetsAllowed.organic,
        TargetsAllowed.nonancient
    ))
