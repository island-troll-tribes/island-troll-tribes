library IDUtils requires ArrayLists {

	public {
		ArrayListInteger UNIT_ALL;
		ArrayListInteger SPELL_ALL;
		ArrayListInteger ABILITY_ALL;
		ArrayListInteger BUFF_ALL;
		ArrayListInteger ITEM_ALL;
		ArrayListInteger DEST_ALL;
	}

	public function S2ID (string s) -> integer {

		if (s == "UNIT_HUNTER") return UNIT_HUNTER;
		if (s == "UNIT_HUNTER_1") return UNIT_HUNTER_1;
		if (s == "UNIT_TRACKER") return UNIT_TRACKER;
		if (s == "UNIT_WARRIOR") return UNIT_WARRIOR;
		if (s == "UNIT_JUGGERNAUT") return UNIT_JUGGERNAUT;
		if (s == "UNIT_BEAST_MASTER") return UNIT_BEAST_MASTER;
		if (s == "UNIT_TRUE_FORM") return UNIT_TRUE_FORM;
		if (s == "UNIT_DRUID") return UNIT_DRUID;
		if (s == "UNIT_CHICKEN_FORM") return UNIT_CHICKEN_FORM;
		if (s == "UNIT_ULTIMATE_FORM") return UNIT_ULTIMATE_FORM;
		if (s == "UNIT_BEAST_MASTER_1") return UNIT_BEAST_MASTER_1;
		if (s == "UNIT_SHAPESHIFTER_WOLF") return UNIT_SHAPESHIFTER_WOLF;
		if (s == "UNIT_SHAPESHIFTER_BEAR") return UNIT_SHAPESHIFTER_BEAR;
		if (s == "UNIT_SHAPESHIFTER_PANTHER") return UNIT_SHAPESHIFTER_PANTHER;
		if (s == "UNIT_SHAPESHIFTER_TIGER") return UNIT_SHAPESHIFTER_TIGER;
		if (s == "UNIT_MAGE") return UNIT_MAGE;
		if (s == "UNIT_MAGE_1") return UNIT_MAGE_1;
		if (s == "UNIT_ELEMENTALIST") return UNIT_ELEMENTALIST;
		if (s == "UNIT_ELEMENTALIST_1") return UNIT_ELEMENTALIST_1;
		if (s == "UNIT_HYPNOTIST") return UNIT_HYPNOTIST;
		if (s == "UNIT_DEMENTIA_MASTER") return UNIT_DEMENTIA_MASTER;
		if (s == "UNIT_PRIEST") return UNIT_PRIEST;
		if (s == "UNIT_BOOSTER") return UNIT_BOOSTER;
		if (s == "UNIT_BOOSTER_1") return UNIT_BOOSTER_1;
		if (s == "UNIT_MASTER_HEALER") return UNIT_MASTER_HEALER;
		if (s == "UNIT_SAGE") return UNIT_SAGE;
		if (s == "UNIT_THIEF") return UNIT_THIEF;
		if (s == "UNIT_ESCAPE_ARTIST") return UNIT_ESCAPE_ARTIST;
		if (s == "UNIT_CONTORTIONIST") return UNIT_CONTORTIONIST;
		if (s == "UNIT_ASSASSIN") return UNIT_ASSASSIN;
		if (s == "UNIT_SCOUT") return UNIT_SCOUT;
		if (s == "UNIT_OBSERVER") return UNIT_OBSERVER;
		if (s == "UNIT_RADAR_SCOUT") return UNIT_RADAR_SCOUT;
		if (s == "UNIT_SPY") return UNIT_SPY;
		if (s == "UNIT_GATHERER") return UNIT_GATHERER;
		if (s == "UNIT_RADAR_GATHERER") return UNIT_RADAR_GATHERER;
		if (s == "UNIT_HERB_MASTER") return UNIT_HERB_MASTER;
		if (s == "UNIT_OMNIGATHERER") return UNIT_OMNIGATHERER;
		if (s == "UNIT_REPICK_TROLL") return UNIT_REPICK_TROLL;
		if (s == "UNIT_DRUNKEN_TROLL") return UNIT_DRUNKEN_TROLL;
		if (s == "UNIT_TROLL_BRAWLER") return UNIT_TROLL_BRAWLER;
		if (s == "UNIT_TROLL_BREWMASTER") return UNIT_TROLL_BREWMASTER;
		if (s == "UNIT_ISLAND_TROLL") return UNIT_ISLAND_TROLL;
		if (s == "UNIT_HEAD_HUNTER") return UNIT_HEAD_HUNTER;
		if (s == "UNIT_ARCHER_INTREPIDE") return UNIT_ARCHER_INTREPIDE;
		if (s == "UNIT_MIRROR_TROLL") return UNIT_MIRROR_TROLL;
		if (s == "UNIT_MIRROR_TROLL_CLONE") return UNIT_MIRROR_TROLL_CLONE;
		if (s == "UNIT_NECROMANCER") return UNIT_NECROMANCER;
		if (s == "UNIT_SHAMAN") return UNIT_SHAMAN;
		if (s == "UNIT_SHADOW_ARCHER") return UNIT_SHADOW_ARCHER;
		if (s == "UNIT_SHADOW_HUNTER") return UNIT_SHADOW_HUNTER;
		if (s == "UNIT_SPIRIT_WALKER") return UNIT_SPIRIT_WALKER;
		if (s == "UNIT_TRACKER_TOURNY_2011") return UNIT_TRACKER_TOURNY_2011;
		if (s == "UNIT_TRICKSTER") return UNIT_TRICKSTER;
		if (s == "UNIT_TROLL_CONARTIST") return UNIT_TROLL_CONARTIST;
		if (s == "UNIT_TROLL_MAGE_ALT") return UNIT_TROLL_MAGE_ALT;
		if (s == "UNIT_TROLL_WITCH_DOCTOR") return UNIT_TROLL_WITCH_DOCTOR;
		if (s == "UNIT_EA_TOURNY_2011") return UNIT_EA_TOURNY_2011;
		if (s == "UNIT_ALIGATOR_MAN") return UNIT_ALIGATOR_MAN;
		if (s == "UNIT_ANCIENT_HYDRA") return UNIT_ANCIENT_HYDRA;
		if (s == "UNIT_DISCO_DUCK") return UNIT_DISCO_DUCK;
		if (s == "UNIT_LESSER_HYDRA") return UNIT_LESSER_HYDRA;
		if (s == "UNIT_MAGENTA_FISH") return UNIT_MAGENTA_FISH;
		if (s == "UNIT_MAMMOTH") return UNIT_MAMMOTH;
		if (s == "UNIT_ONE") return UNIT_ONE;
		if (s == "UNIT_RAPID_TURTLE") return UNIT_RAPID_TURTLE;
		if (s == "UNIT_ADULT_ELK") return UNIT_ADULT_ELK;
		if (s == "UNIT_ADULT_JUNGLE_BEAR") return UNIT_ADULT_JUNGLE_BEAR;
		if (s == "UNIT_ADULT_JUNGLE_WOLF") return UNIT_ADULT_JUNGLE_WOLF;
		if (s == "UNIT_ALPHA_HAWK") return UNIT_ALPHA_HAWK;
		if (s == "UNIT_BRONZE_DRAGON") return UNIT_BRONZE_DRAGON;
		if (s == "UNIT_BRONZE_DRAGON_HATCHLING") return UNIT_BRONZE_DRAGON_HATCHLING;
		if (s == "UNIT_BEAR_CUB") return UNIT_BEAR_CUB;
		if (s == "UNIT_ELDER_PANTHER") return UNIT_ELDER_PANTHER;
		if (s == "UNIT_ELK") return UNIT_ELK;
		if (s == "UNIT_ELK_ADOLESCENT") return UNIT_ELK_ADOLESCENT;
		if (s == "UNIT_FAWN") return UNIT_FAWN;
		if (s == "UNIT_FISH") return UNIT_FISH;
		if (s == "UNIT_FOREST_DRAGON") return UNIT_FOREST_DRAGON;
		if (s == "UNIT_FOREST_DRAGON_HATCHLING") return UNIT_FOREST_DRAGON_HATCHLING;
		if (s == "UNIT_GREATER_BRONZE_DRAGON") return UNIT_GREATER_BRONZE_DRAGON;
		if (s == "UNIT_GREATER_FOREST_DRAGON") return UNIT_GREATER_FOREST_DRAGON;
		if (s == "UNIT_GREATER_NETHER_DRAGON") return UNIT_GREATER_NETHER_DRAGON;
		if (s == "UNIT_GREATER_RED_DRAGON") return UNIT_GREATER_RED_DRAGON;
		if (s == "UNIT_GREEN_FISH") return UNIT_GREEN_FISH;
		if (s == "UNIT_HAWK") return UNIT_HAWK;
		if (s == "UNIT_HAWK_ADOLESCENT") return UNIT_HAWK_ADOLESCENT;
		if (s == "UNIT_HAWK_HATCHLING") return UNIT_HAWK_HATCHLING;
		if (s == "UNIT_JUNGLE_BEAR") return UNIT_JUNGLE_BEAR;
		if (s == "UNIT_JUNGLE_WOLF") return UNIT_JUNGLE_WOLF;
		if (s == "UNIT_MAMMOTH_BABY") return UNIT_MAMMOTH_BABY;
		if (s == "UNIT_NETHER_DRAGON_HATCHLING") return UNIT_NETHER_DRAGON_HATCHLING;
		if (s == "UNIT_PANTHER") return UNIT_PANTHER;
		if (s == "UNIT_RED_DRAGON_HATCHLING") return UNIT_RED_DRAGON_HATCHLING;
		if (s == "UNIT_SNAKE") return UNIT_SNAKE;
		if (s == "UNIT_WOLF_PUP") return UNIT_WOLF_PUP;
		if (s == "UNIT_ARMORY") return UNIT_ARMORY;
		if (s == "UNIT_BUILDING_TREE") return UNIT_BUILDING_TREE;
		if (s == "UNIT_FIRE") return UNIT_FIRE;
		if (s == "UNIT_DEFENSE_WARD") return UNIT_DEFENSE_WARD;
		if (s == "UNIT_ENSNARE_TRAP") return UNIT_ENSNARE_TRAP;
		if (s == "UNIT_HATCHERY") return UNIT_HATCHERY;
		if (s == "UNIT_MAGE_FIRE") return UNIT_MAGE_FIRE;
		if (s == "UNIT_MAGE_FIRE_SUMMONED") return UNIT_MAGE_FIRE_SUMMONED;
		if (s == "UNIT_POT") return UNIT_POT;
		if (s == "UNIT_MUD_HUT") return UNIT_MUD_HUT;
		if (s == "UNIT_OMNITOWER") return UNIT_OMNITOWER;
		if (s == "UNIT_SMOKE_HOUSE") return UNIT_SMOKE_HOUSE;
		if (s == "UNIT_SPIRIT_WARD") return UNIT_SPIRIT_WARD;
		if (s == "UNIT_STORAGE_HUT") return UNIT_STORAGE_HUT;
		if (s == "UNIT_TANNERY") return UNIT_TANNERY;
		if (s == "UNIT_TELEPORTATION_BEACON") return UNIT_TELEPORTATION_BEACON;
		if (s == "UNIT_TENT") return UNIT_TENT;
		if (s == "UNIT_TROLL_BURROW") return UNIT_TROLL_BURROW;
		if (s == "UNIT_TROLL_HUT") return UNIT_TROLL_HUT;
		if (s == "UNIT_TROLL_TOTEM") return UNIT_TROLL_TOTEM;
		if (s == "UNIT_TROLL_TRANSPORT_SHIP") return UNIT_TROLL_TRANSPORT_SHIP;
		if (s == "UNIT_WITCH_DOCTORS_HIT") return UNIT_WITCH_DOCTORS_HIT;
		if (s == "UNIT_WORKSHOP") return UNIT_WORKSHOP;
		if (s == "UNIT_POWER_GENERATOR") return UNIT_POWER_GENERATOR;
		if (s == "UNIT_BLUE_HERB_BUSH") return UNIT_BLUE_HERB_BUSH;
		if (s == "UNIT_HAISETSU_BUSH") return UNIT_HAISETSU_BUSH;
		if (s == "UNIT_HIDDEN_STASH") return UNIT_HIDDEN_STASH;
		if (s == "UNIT_MUSHROOM_COLONY") return UNIT_MUSHROOM_COLONY;
		if (s == "UNIT_ORANGE_HERB_BUSH") return UNIT_ORANGE_HERB_BUSH;
		if (s == "UNIT_PURPLE_HERB_BUSH") return UNIT_PURPLE_HERB_BUSH;
		if (s == "UNIT_SCOUTS_BUSH") return UNIT_SCOUTS_BUSH;
		if (s == "UNIT_THIEFS_BUSH") return UNIT_THIEFS_BUSH;
		if (s == "UNIT_THISTLE_SHRUB") return UNIT_THISTLE_SHRUB;
		if (s == "UNIT_WATER_HERB_BUSH") return UNIT_WATER_HERB_BUSH;
		if (s == "UNIT_YELLOW_HERB_BUSH") return UNIT_YELLOW_HERB_BUSH;
		if (s == "UNIT_CRAFT_MASTER") return UNIT_CRAFT_MASTER;
		if (s == "UNIT_OMINOUS_ALTAR") return UNIT_OMINOUS_ALTAR;
		if (s == "UNIT_TRADE_SHIP_1") return UNIT_TRADE_SHIP_1;
		if (s == "UNIT_TRADE_SHIP_2") return UNIT_TRADE_SHIP_2;
		if (s == "UNIT_TRADE_SHIP_3") return UNIT_TRADE_SHIP_3;
		if (s == "UNIT_TRADE_SHIP_4") return UNIT_TRADE_SHIP_4;
		if (s == "UNIT_TRADE_SHIP_5") return UNIT_TRADE_SHIP_5;
		if (s == "UNIT_TRADE_SHIP_6") return UNIT_TRADE_SHIP_6;
		if (s == "UNIT_TROLL_MERCHANT") return UNIT_TROLL_MERCHANT;
		if (s == "UNIT_BLUR_IMAGE") return UNIT_BLUR_IMAGE;
		if (s == "UNIT_BEE") return UNIT_BEE;
		if (s == "UNIT_BEE_HIVE") return UNIT_BEE_HIVE;
		if (s == "UNIT_BEE_HIVE_SUMMONED") return UNIT_BEE_HIVE_SUMMONED;
		if (s == "UNIT_DISEASE_CLOUD") return UNIT_DISEASE_CLOUD;
		if (s == "UNIT_DUMMY") return UNIT_DUMMY;
		if (s == "UNIT_AMHS_DUMMY") return UNIT_AMHS_DUMMY;
		if (s == "UNIT_UNUSED_DUMMY") return UNIT_UNUSED_DUMMY;
		if (s == "UNIT_LIVING_CLAY") return UNIT_LIVING_CLAY;
		if (s == "UNIT_LOCUST") return UNIT_LOCUST;
		if (s == "UNIT_LOCUST_ALT") return UNIT_LOCUST_ALT;
		if (s == "UNIT_LOCUST_DARK_NODE") return UNIT_LOCUST_DARK_NODE;
		if (s == "UNIT_LOCUST_FIRE_LORD") return UNIT_LOCUST_FIRE_LORD;
		if (s == "UNIT_LOCUST_GHOST") return UNIT_LOCUST_GHOST;
		if (s == "UNIT_LOCUST_INNER_FIRE") return UNIT_LOCUST_INNER_FIRE;
		if (s == "UNIT_LOCUST_KA") return UNIT_LOCUST_KA;
		if (s == "UNIT_LOCUST_LEZ") return UNIT_LOCUST_LEZ;
		if (s == "UNIT_LOCUST_LIGHT_NODE") return UNIT_LOCUST_LIGHT_NODE;
		if (s == "UNIT_LOCUST_NEL") return UNIT_LOCUST_NEL;
		if (s == "UNIT_LOCUST_OPPOSING_PANTHER") return UNIT_LOCUST_OPPOSING_PANTHER;
		if (s == "UNIT_LOCUST_POOP") return UNIT_LOCUST_POOP;
		if (s == "UNIT_LOCUST_SKELETON") return UNIT_LOCUST_SKELETON;
		if (s == "UNIT_LOCUST_WATER_LORD") return UNIT_LOCUST_WATER_LORD;
		if (s == "UNIT_MASTER_CASTER") return UNIT_MASTER_CASTER;
		if (s == "UNIT_TRADE_ZEPPELIN") return UNIT_TRADE_ZEPPELIN;
		if (s == "UNIT_UBER_HIVE") return UNIT_UBER_HIVE;
		if (s == "UNIT_ROCK") return UNIT_ROCK;
		if (s == "UNIT_CHICKEN") return UNIT_CHICKEN;
		if (s == "UNIT_FARM") return UNIT_FARM;
		if (s == "UNIT_FOOTMAN") return UNIT_FOOTMAN;
		if (s == "UNIT_HERO_PICKER") return UNIT_HERO_PICKER;
		if (s == "UNIT_LIVING_CLAY_UNUSED") return UNIT_LIVING_CLAY_UNUSED;
		if (s == "UNIT_MEAT") return UNIT_MEAT;
		if (s == "UNIT_PEASANT") return UNIT_PEASANT;
		if (s == "UNIT_PEON") return UNIT_PEON;
		if (s == "UNIT_SMOKED_MEAT") return UNIT_SMOKED_MEAT;
		if (s == "UNIT_SOUL_REFLECTION_1") return UNIT_SOUL_REFLECTION_1;
		if (s == "UNIT_SOUL_REFLECTION_2") return UNIT_SOUL_REFLECTION_2;
		if (s == "UNIT_SOUL_REFLECTION_3") return UNIT_SOUL_REFLECTION_3;
		if (s == "UNIT_TEST_CLOAK") return UNIT_TEST_CLOAK;
		if (s == "UNIT_ULTRA_FOOTMAN") return UNIT_ULTRA_FOOTMAN;
		if (s == "SPELL_PET_ATTACK") return SPELL_PET_ATTACK;
		if (s == "SPELL_PET_BRING_ITEMS") return SPELL_PET_BRING_ITEMS;
		if (s == "SPELL_PET_DROP_ITEMS") return SPELL_PET_DROP_ITEMS;
		if (s == "SPELL_PET_FOLLOW") return SPELL_PET_FOLLOW;
		if (s == "SPELL_PET_GO_TO_HATCHERY") return SPELL_PET_GO_TO_HATCHERY;
		if (s == "SPELL_PET_RELEASE") return SPELL_PET_RELEASE;
		if (s == "SPELL_PET_SCOUT") return SPELL_PET_SCOUT;
		if (s == "SPELL_PET_SLEEP") return SPELL_PET_SLEEP;
		if (s == "SPELL_PET_STAY") return SPELL_PET_STAY;
		if (s == "SPELL_PET_TAME") return SPELL_PET_TAME;
		if (s == "SPELL_SMOKE_MEAT") return SPELL_SMOKE_MEAT;
		if (s == "SPELL_PACK_BUILDING") return SPELL_PACK_BUILDING;
		if (s == "SPELL_SELF_DESTRUCT") return SPELL_SELF_DESTRUCT;
		if (s == "SPELL_DISEASE") return SPELL_DISEASE;
		if (s == "SPELL_CURE_ALL_ITEM") return SPELL_CURE_ALL_ITEM;
		if (s == "SPELL_SUPER_FORM_CAST") return SPELL_SUPER_FORM_CAST;
		if (s == "SPELL_SONAR_COMPASS") return SPELL_SONAR_COMPASS;
		if (s == "SPELL_SUPERSUB_COURAGE") return SPELL_SUPERSUB_COURAGE;
		if (s == "SPELL_SPEAR_CAST") return SPELL_SPEAR_CAST;
		if (s == "SPELL_IRON_SPEAR_CAST") return SPELL_IRON_SPEAR_CAST;
		if (s == "SPELL_STEEL_SPEAR_CAST") return SPELL_STEEL_SPEAR_CAST;
		if (s == "SPELL_POISON_SPEAR_CAST") return SPELL_POISON_SPEAR_CAST;
		if (s == "SPELL_RPOISON_SPEAR_CAST") return SPELL_RPOISON_SPEAR_CAST;
		if (s == "SPELL_UPOISON_SPEAR_CAST") return SPELL_UPOISON_SPEAR_CAST;
		if (s == "SPELL_DARK_SPEAR_CAST") return SPELL_DARK_SPEAR_CAST;
		if (s == "SPELL_DARK_SPEAR") return SPELL_DARK_SPEAR;
		if (s == "SPELL_RPOISON_SPEAR") return SPELL_RPOISON_SPEAR;
		if (s == "SPELL_POISON_SPEAR") return SPELL_POISON_SPEAR;
		if (s == "SPELL_IRON_SPEAR") return SPELL_IRON_SPEAR;
		if (s == "SPELL_UPOISON_SPEAR") return SPELL_UPOISON_SPEAR;
		if (s == "SPELL_STEEL_SPEAR") return SPELL_STEEL_SPEAR;
		if (s == "SPELL_SPEAR") return SPELL_SPEAR;
		if (s == "SPELL_BATTLE_SPEAR_CAST") return SPELL_BATTLE_SPEAR_CAST;
		if (s == "SPELL_DYSENTERY") return SPELL_DYSENTERY;
		if (s == "ABILITY_LOCUST") return ABILITY_LOCUST;
		if (s == "ABILITY_ASSASINATE") return ABILITY_ASSASINATE;
		if (s == "ABILITY_MEU_DUMMY") return ABILITY_MEU_DUMMY;
		if (s == "ABILITY_MEU_OMNIGATHERER") return ABILITY_MEU_OMNIGATHERER;
		if (s == "ABILITY_MEU_DEMENTIA_MASTER") return ABILITY_MEU_DEMENTIA_MASTER;
		if (s == "ABILITY_MEU_SAGE") return ABILITY_MEU_SAGE;
		if (s == "ABILITY_MEU_SPY") return ABILITY_MEU_SPY;
		if (s == "ABILITY_MEU_ASSASSIN") return ABILITY_MEU_ASSASSIN;
		if (s == "ABILITY_INVULNERABLE") return ABILITY_INVULNERABLE;
		if (s == "BUFF_GOK") return BUFF_GOK;
		if (s == "BUFF_SPRINTING") return BUFF_SPRINTING;
		if (s == "BUFF_SPEAR_INCOMING") return BUFF_SPEAR_INCOMING;
		if (s == "BUFF_DYSENTERY") return BUFF_DYSENTERY;
		if (s == "ITEM_ANCIENT_BOW") return ITEM_ANCIENT_BOW;
		if (s == "ITEM_BOW_BLOOD_GOD") return ITEM_BOW_BLOOD_GOD;
		if (s == "ITEM_CLAY_EXPLOSION") return ITEM_CLAY_EXPLOSION;
		if (s == "ITEM_DD_PINION_FIRE") return ITEM_DD_PINION_FIRE;
		if (s == "ITEM_DD_PINION_PAIN") return ITEM_DD_PINION_PAIN;
		if (s == "ITEM_DD_PINION_SHADOW") return ITEM_DD_PINION_SHADOW;
		if (s == "ITEM_DUSTY_OLD_BOW") return ITEM_DUSTY_OLD_BOW;
		if (s == "ITEM_GLOWING_ANCIENT_BOW") return ITEM_GLOWING_ANCIENT_BOW;
		if (s == "ITEM_HORN_MAMMOTH") return ITEM_HORN_MAMMOTH;
		if (s == "ITEM_HYDRA_CLAWS") return ITEM_HYDRA_CLAWS;
		if (s == "ITEM_HYDRA_SCALE") return ITEM_HYDRA_SCALE;
		if (s == "ITEM_HYDRAAC_FINS") return ITEM_HYDRAAC_FINS;
		if (s == "ITEM_MED_BEAST_MASTER") return ITEM_MED_BEAST_MASTER;
		if (s == "ITEM_MED_PRIEST") return ITEM_MED_PRIEST;
		if (s == "ITEM_MED_SCOUT") return ITEM_MED_SCOUT;
		if (s == "ITEM_MED_GATHERER") return ITEM_MED_GATHERER;
		if (s == "ITEM_MED_MAGE") return ITEM_MED_MAGE;
		if (s == "ITEM_MED_THIEF") return ITEM_MED_THIEF;
		if (s == "ITEM_MED_HUNTER") return ITEM_MED_HUNTER;
		if (s == "ITEM_MED_HEAD_HUNER") return ITEM_MED_HEAD_HUNER;
		if (s == "ITEM_THIEF_MED") return ITEM_THIEF_MED;
		if (s == "ITEM_MEDALLION_COURAGE") return ITEM_MEDALLION_COURAGE;
		if (s == "ITEM_BLUE_HERB") return ITEM_BLUE_HERB;
		if (s == "ITEM_BONE") return ITEM_BONE;
		if (s == "ITEM_BUTSU") return ITEM_BUTSU;
		if (s == "ITEM_CLAY_BALL") return ITEM_CLAY_BALL;
		if (s == "ITEM_ELK_HIDE") return ITEM_ELK_HIDE;
		if (s == "ITEM_FLINT") return ITEM_FLINT;
		if (s == "ITEM_HARDEN_SCALES") return ITEM_HARDEN_SCALES;
		if (s == "ITEM_HAWK_EGG") return ITEM_HAWK_EGG;
		if (s == "ITEM_JUNGLE_WOLF_HIDE") return ITEM_JUNGLE_WOLF_HIDE;
		if (s == "ITEM_JUNGLE_BEAR_HIDE") return ITEM_JUNGLE_BEAR_HIDE;
		if (s == "ITEM_MAGIC") return ITEM_MAGIC;
		if (s == "ITEM_MANA_CRYSTAL") return ITEM_MANA_CRYSTAL;
		if (s == "ITEM_MUSHROOM") return ITEM_MUSHROOM;
		if (s == "ITEM_ORANGE_HERB") return ITEM_ORANGE_HERB;
		if (s == "ITEM_PURPLE_HERB") return ITEM_PURPLE_HERB;
		if (s == "ITEM_RIVER_STEM") return ITEM_RIVER_STEM;
		if (s == "ITEM_RIVER_ROOT") return ITEM_RIVER_ROOT;
		if (s == "ITEM_STICK") return ITEM_STICK;
		if (s == "ITEM_STONE") return ITEM_STONE;
		if (s == "ITEM_TINDER") return ITEM_TINDER;
		if (s == "ITEM_YELLOW_HERB") return ITEM_YELLOW_HERB;
		if (s == "ITEM_ACID_BOMB") return ITEM_ACID_BOMB;
		if (s == "ITEM_ANTI_MAGIC_POTION") return ITEM_ANTI_MAGIC_POTION;
		if (s == "ITEM_ANABOLIC_POTION") return ITEM_ANABOLIC_POTION;
		if (s == "ITEM_CURE_ALL") return ITEM_CURE_ALL;
		if (s == "ITEM_DISEASE_POTION") return ITEM_DISEASE_POTION;
		if (s == "ITEM_DRUNKS_POTION") return ITEM_DRUNKS_POTION;
		if (s == "ITEM_ELEMENTAL_SHIELD_POTION") return ITEM_ELEMENTAL_SHIELD_POTION;
		if (s == "ITEM_ESSENCE_BEES") return ITEM_ESSENCE_BEES;
		if (s == "ITEM_FERVER_POTION") return ITEM_FERVER_POTION;
		if (s == "ITEM_HEALING_POTION_I") return ITEM_HEALING_POTION_I;
		if (s == "ITEM_HEALING_POTION_II") return ITEM_HEALING_POTION_II;
		if (s == "ITEM_HEALING_POTION_III") return ITEM_HEALING_POTION_III;
		if (s == "ITEM_HEALING_POTION_IV") return ITEM_HEALING_POTION_IV;
		if (s == "ITEM_MANA_POTION_I") return ITEM_MANA_POTION_I;
		if (s == "ITEM_MANA_POTION_II") return ITEM_MANA_POTION_II;
		if (s == "ITEM_MANA_POTION_III") return ITEM_MANA_POTION_III;
		if (s == "ITEM_MANA_POTION_IV") return ITEM_MANA_POTION_IV;
		if (s == "ITEM_NAPALM") return ITEM_NAPALM;
		if (s == "ITEM_NETHER_POTION") return ITEM_NETHER_POTION;
		if (s == "ITEM_POTION_TWIN_ISLANDS") return ITEM_POTION_TWIN_ISLANDS;
		if (s == "ITEM_OMNICURE") return ITEM_OMNICURE;
		if (s == "ITEM_DARK_ROCK") return ITEM_DARK_ROCK;
		if (s == "ITEM_GEM_OF_KNOWLEDGE") return ITEM_GEM_OF_KNOWLEDGE;
		if (s == "ITEM_SPIRIT_WATER") return ITEM_SPIRIT_WATER;
		if (s == "ITEM_SPIRIT_WIND") return ITEM_SPIRIT_WIND;
		if (s == "ITEM_ACORN") return ITEM_ACORN;
		if (s == "ITEM_COOKED_MEAT") return ITEM_COOKED_MEAT;
		if (s == "ITEM_DISEASED_MEAT") return ITEM_DISEASED_MEAT;
		if (s == "ITEM_MAGIC_ACORN") return ITEM_MAGIC_ACORN;
		if (s == "ITEM_SMOKED_MEAT") return ITEM_SMOKED_MEAT;
		if (s == "ITEM_ANABOLIC_BOOTS") return ITEM_ANABOLIC_BOOTS;
		if (s == "ITEM_BATTLE_ARMOR") return ITEM_BATTLE_ARMOR;
		if (s == "ITEM_BATTLE_AXE") return ITEM_BATTLE_AXE;
		if (s == "ITEM_BATTLE_GLOVES") return ITEM_BATTLE_GLOVES;
		if (s == "ITEM_BATTLE_SHIELD") return ITEM_BATTLE_SHIELD;
		if (s == "ITEM_BATTLE_SUIT") return ITEM_BATTLE_SUIT;
		if (s == "ITEM_BEE_HIVE") return ITEM_BEE_HIVE;
		if (s == "ITEM_BLOW_GUN") return ITEM_BLOW_GUN;
		if (s == "ITEM_CAMOUFLAGE_COAT") return ITEM_CAMOUFLAGE_COAT;
		if (s == "ITEM_DARK_THISTLES") return ITEM_DARK_THISTLES;
		if (s == "ITEM_EMP") return ITEM_EMP;
		if (s == "ITEM_FIRE_BOMB") return ITEM_FIRE_BOMB;
		if (s == "ITEM_NETS") return ITEM_NETS;
		if (s == "ITEM_SMOKE_BOMB") return ITEM_SMOKE_BOMB;
		if (s == "ITEM_SONAR_COMPASS") return ITEM_SONAR_COMPASS;
		if (s == "ITEM_THISTLES") return ITEM_THISTLES;
		if (s == "ITEM_CLOAK_OF_FLAMES") return ITEM_CLOAK_OF_FLAMES;
		if (s == "ITEM_CLOAK_OF_FROST") return ITEM_CLOAK_OF_FROST;
		if (s == "ITEM_CLOAK_OF_HEALING") return ITEM_CLOAK_OF_HEALING;
		if (s == "ITEM_LIVING_CLAY") return ITEM_LIVING_CLAY;
		if (s == "ITEM_MAGIC_SEED") return ITEM_MAGIC_SEED;
		if (s == "ITEM_POISON") return ITEM_POISON;
		if (s == "ITEM_POISON_SPEAR") return ITEM_POISON_SPEAR;
		if (s == "ITEM_REFINED_POISON_SPEAR") return ITEM_REFINED_POISON_SPEAR;
		if (s == "ITEM_SCROLL_SWIFTNESS") return ITEM_SCROLL_SWIFTNESS;
		if (s == "ITEM_SCROLL_CYCLONE") return ITEM_SCROLL_CYCLONE;
		if (s == "ITEM_SCROLL_ENTANGLING_ROOTS") return ITEM_SCROLL_ENTANGLING_ROOTS;
		if (s == "ITEM_SCROLL_FIREBALL") return ITEM_SCROLL_FIREBALL;
		if (s == "ITEM_SCROLL_LIVING_DEAD") return ITEM_SCROLL_LIVING_DEAD;
		if (s == "ITEM_SCROLL_STONE_ARMOR") return ITEM_SCROLL_STONE_ARMOR;
		if (s == "ITEM_SCROLL_TSUNAMI") return ITEM_SCROLL_TSUNAMI;
		if (s == "ITEM_ULTRA_POISON") return ITEM_ULTRA_POISON;
		if (s == "ITEM_ULTRA_POISON_SPEAR") return ITEM_ULTRA_POISON_SPEAR;
		if (s == "ITEM_BONE_BOOTS") return ITEM_BONE_BOOTS;
		if (s == "ITEM_BONE_COAT") return ITEM_BONE_COAT;
		if (s == "ITEM_BONE_GLOVES") return ITEM_BONE_GLOVES;
		if (s == "ITEM_BONE_SHIELD") return ITEM_BONE_SHIELD;
		if (s == "ITEM_DARK_SPEAR") return ITEM_DARK_SPEAR;
		if (s == "ITEM_FLINT_AXE") return ITEM_FLINT_AXE;
		if (s == "ITEM_IRON_AXE") return ITEM_IRON_AXE;
		if (s == "ITEM_IRON_BOOTS") return ITEM_IRON_BOOTS;
		if (s == "ITEM_IRON_COAT") return ITEM_IRON_COAT;
		if (s == "ITEM_IRON_GLOVES") return ITEM_IRON_GLOVES;
		if (s == "ITEM_IRON_INGOT") return ITEM_IRON_INGOT;
		if (s == "ITEM_IRON_SHIELD") return ITEM_IRON_SHIELD;
		if (s == "ITEM_IRON_SPEAR") return ITEM_IRON_SPEAR;
		if (s == "ITEM_MAGE_MASHER") return ITEM_MAGE_MASHER;
		if (s == "ITEM_SHIELD") return ITEM_SHIELD;
		if (s == "ITEM_SPEAR") return ITEM_SPEAR;
		if (s == "ITEM_STEEL_AXE") return ITEM_STEEL_AXE;
		if (s == "ITEM_STEEL_BOOTS") return ITEM_STEEL_BOOTS;
		if (s == "ITEM_STEEL_COAT") return ITEM_STEEL_COAT;
		if (s == "ITEM_STEEL_GLOVES") return ITEM_STEEL_GLOVES;
		if (s == "ITEM_STEEL_INGOT") return ITEM_STEEL_INGOT;
		if (s == "ITEM_STEEL_SHIELD") return ITEM_STEEL_SHIELD;
		if (s == "ITEM_STEEL_SPEAR") return ITEM_STEEL_SPEAR;
		if (s == "ITEM_STONE_AXE") return ITEM_STONE_AXE;
		if (s == "ITEM_LOADED_THISTLES") return ITEM_LOADED_THISTLES;
		if (s == "ITEM_LOADED_DARK_THISTLES") return ITEM_LOADED_DARK_THISTLES;
		if (s == "ITEM_LOADED_BONE") return ITEM_LOADED_BONE;
		if (s == "ITEM_BEAR_SKIN_BOOTS") return ITEM_BEAR_SKIN_BOOTS;
		if (s == "ITEM_BEAR_SKIN_COAT") return ITEM_BEAR_SKIN_COAT;
		if (s == "ITEM_BEAR_SKIN_GLOVES") return ITEM_BEAR_SKIN_GLOVES;
		if (s == "ITEM_ELK_SKIN_BOOTS") return ITEM_ELK_SKIN_BOOTS;
		if (s == "ITEM_ELK_SKIN_COAT") return ITEM_ELK_SKIN_COAT;
		if (s == "ITEM_ELK_SKIN_GLOVES") return ITEM_ELK_SKIN_GLOVES;
		if (s == "ITEM_WOLF_SKIN_BOOTS") return ITEM_WOLF_SKIN_BOOTS;
		if (s == "ITEM_WOLF_SKIN_COAT") return ITEM_WOLF_SKIN_COAT;
		if (s == "ITEM_WOLF_SKIN_GLOVES") return ITEM_WOLF_SKIN_GLOVES;
		if (s == "ITEM_ARMORY_KIT") return ITEM_ARMORY_KIT;
		if (s == "ITEM_DEFENSIVE_WARD_KIT") return ITEM_DEFENSIVE_WARD_KIT;
		if (s == "ITEM_ENSNARE_TRAP_KIT") return ITEM_ENSNARE_TRAP_KIT;
		if (s == "ITEM_FIRE_KIT") return ITEM_FIRE_KIT;
		if (s == "ITEM_HATCHERY_KIT") return ITEM_HATCHERY_KIT;
		if (s == "ITEM_MAGE_FIRE_KIT") return ITEM_MAGE_FIRE_KIT;
		if (s == "ITEM_MUD_HUT_KIT") return ITEM_MUD_HUT_KIT;
		if (s == "ITEM_OMNIDEFENDER_KIT") return ITEM_OMNIDEFENDER_KIT;
		if (s == "ITEM_POT_KIT") return ITEM_POT_KIT;
		if (s == "ITEM_SMOKE_HOUSE_KIT") return ITEM_SMOKE_HOUSE_KIT;
		if (s == "ITEM_SPIRIT_WARD_KIT") return ITEM_SPIRIT_WARD_KIT;
		if (s == "ITEM_STORAGE_HUT_KIT") return ITEM_STORAGE_HUT_KIT;
		if (s == "ITEM_TANNERY_KIT") return ITEM_TANNERY_KIT;
		if (s == "ITEM_TELEPORT_BEACON_KIT") return ITEM_TELEPORT_BEACON_KIT;
		if (s == "ITEM_TENT_KIT") return ITEM_TENT_KIT;
		if (s == "ITEM_TRANSPORT_SHIP_KIT") return ITEM_TRANSPORT_SHIP_KIT;
		if (s == "ITEM_TROLL_BURROW_KIT") return ITEM_TROLL_BURROW_KIT;
		if (s == "ITEM_TROLL_HUT_KIT") return ITEM_TROLL_HUT_KIT;
		if (s == "ITEM_WITCH_DOCTORS_HUT_KIT") return ITEM_WITCH_DOCTORS_HUT_KIT;
		if (s == "ITEM_WORKSHOP_KIT") return ITEM_WORKSHOP_KIT;
		if (s == "ITEM_BATTLE_SUIT_SPELLS") return ITEM_BATTLE_SUIT_SPELLS;
		if (s == "ITEM_BATTLE_SUIT_SPELLS_TWO") return ITEM_BATTLE_SUIT_SPELLS_TWO;
		if (s == "ITEM_CHEESE") return ITEM_CHEESE;
		if (s == "ITEM_HEAD_HUNTER_STEEL_SPEAR") return ITEM_HEAD_HUNTER_STEEL_SPEAR;
		if (s == "ITEM_HERB_RECIPE_1") return ITEM_HERB_RECIPE_1;
		if (s == "ITEM_HERB_RECIPE_2") return ITEM_HERB_RECIPE_2;
		if (s == "ITEM_HERB_RECIPE_3") return ITEM_HERB_RECIPE_3;
		if (s == "ITEM_HERB_RECIPE_4") return ITEM_HERB_RECIPE_4;
		if (s == "ITEM_HERB_RECIPE_5") return ITEM_HERB_RECIPE_5;
		if (s == "ITEM_HERB_RECIPE_6") return ITEM_HERB_RECIPE_6;
		if (s == "ITEM_HERB_RECIPE_7") return ITEM_HERB_RECIPE_7;
		if (s == "ITEM_HERB_RECIPE_8") return ITEM_HERB_RECIPE_8;
		if (s == "ITEM_HERB_RECIPE_9") return ITEM_HERB_RECIPE_9;
		if (s == "ITEM_HERB_RECIPE_10") return ITEM_HERB_RECIPE_10;
		if (s == "ITEM_HERB_RECIPE_11") return ITEM_HERB_RECIPE_11;
		if (s == "ITEM_HYDRA_HINT") return ITEM_HYDRA_HINT;
		if (s == "ITEM_OPPOSING_NIGHT_ITEM") return ITEM_OPPOSING_NIGHT_ITEM;
		if (s == "ITEM_PANTHER_HIDE") return ITEM_PANTHER_HIDE;
		if (s == "ITEM_SECRET_HINT") return ITEM_SECRET_HINT;
		if (s == "ITEM_TOME_LOSS") return ITEM_TOME_LOSS;
		if (s == "ITEM_REPAIR_HAMMER") return ITEM_REPAIR_HAMMER;
		if (s == "ITEM_NULL") return ITEM_NULL;
		if (s == "ITEM_CANDY_CANE") return ITEM_CANDY_CANE;
		if (s == "DEST_FALSE_TREE") return DEST_FALSE_TREE;
		if (s == "DEST_RUINS_TREE") return DEST_RUINS_TREE;
		if (s == "DEST_RUINS_TREE_CANOPY") return DEST_RUINS_TREE_CANOPY;
		if (s == "DEST_RUINS_TREE_ITEM") return DEST_RUINS_TREE_ITEM;
		if (s == "DEST_SUPER_TREE") return DEST_SUPER_TREE;
		if (s == "DEST_SUPER_TREE_CANOPY") return DEST_SUPER_TREE_CANOPY;

		return 0;
	}

	public function ID2S (integer i) -> string {

		if (i == UNIT_HUNTER) return "UNIT_HUNTER";
		if (i == UNIT_HUNTER_1) return "UNIT_HUNTER_1";
		if (i == UNIT_TRACKER) return "UNIT_TRACKER";
		if (i == UNIT_WARRIOR) return "UNIT_WARRIOR";
		if (i == UNIT_JUGGERNAUT) return "UNIT_JUGGERNAUT";
		if (i == UNIT_BEAST_MASTER) return "UNIT_BEAST_MASTER";
		if (i == UNIT_TRUE_FORM) return "UNIT_TRUE_FORM";
		if (i == UNIT_DRUID) return "UNIT_DRUID";
		if (i == UNIT_CHICKEN_FORM) return "UNIT_CHICKEN_FORM";
		if (i == UNIT_ULTIMATE_FORM) return "UNIT_ULTIMATE_FORM";
		if (i == UNIT_BEAST_MASTER_1) return "UNIT_BEAST_MASTER_1";
		if (i == UNIT_SHAPESHIFTER_WOLF) return "UNIT_SHAPESHIFTER_WOLF";
		if (i == UNIT_SHAPESHIFTER_BEAR) return "UNIT_SHAPESHIFTER_BEAR";
		if (i == UNIT_SHAPESHIFTER_PANTHER) return "UNIT_SHAPESHIFTER_PANTHER";
		if (i == UNIT_SHAPESHIFTER_TIGER) return "UNIT_SHAPESHIFTER_TIGER";
		if (i == UNIT_MAGE) return "UNIT_MAGE";
		if (i == UNIT_MAGE_1) return "UNIT_MAGE_1";
		if (i == UNIT_ELEMENTALIST) return "UNIT_ELEMENTALIST";
		if (i == UNIT_ELEMENTALIST_1) return "UNIT_ELEMENTALIST_1";
		if (i == UNIT_HYPNOTIST) return "UNIT_HYPNOTIST";
		if (i == UNIT_DEMENTIA_MASTER) return "UNIT_DEMENTIA_MASTER";
		if (i == UNIT_PRIEST) return "UNIT_PRIEST";
		if (i == UNIT_BOOSTER) return "UNIT_BOOSTER";
		if (i == UNIT_BOOSTER_1) return "UNIT_BOOSTER_1";
		if (i == UNIT_MASTER_HEALER) return "UNIT_MASTER_HEALER";
		if (i == UNIT_SAGE) return "UNIT_SAGE";
		if (i == UNIT_THIEF) return "UNIT_THIEF";
		if (i == UNIT_ESCAPE_ARTIST) return "UNIT_ESCAPE_ARTIST";
		if (i == UNIT_CONTORTIONIST) return "UNIT_CONTORTIONIST";
		if (i == UNIT_ASSASSIN) return "UNIT_ASSASSIN";
		if (i == UNIT_SCOUT) return "UNIT_SCOUT";
		if (i == UNIT_OBSERVER) return "UNIT_OBSERVER";
		if (i == UNIT_RADAR_SCOUT) return "UNIT_RADAR_SCOUT";
		if (i == UNIT_SPY) return "UNIT_SPY";
		if (i == UNIT_GATHERER) return "UNIT_GATHERER";
		if (i == UNIT_RADAR_GATHERER) return "UNIT_RADAR_GATHERER";
		if (i == UNIT_HERB_MASTER) return "UNIT_HERB_MASTER";
		if (i == UNIT_OMNIGATHERER) return "UNIT_OMNIGATHERER";
		if (i == UNIT_REPICK_TROLL) return "UNIT_REPICK_TROLL";
		if (i == UNIT_DRUNKEN_TROLL) return "UNIT_DRUNKEN_TROLL";
		if (i == UNIT_TROLL_BRAWLER) return "UNIT_TROLL_BRAWLER";
		if (i == UNIT_TROLL_BREWMASTER) return "UNIT_TROLL_BREWMASTER";
		if (i == UNIT_ISLAND_TROLL) return "UNIT_ISLAND_TROLL";
		if (i == UNIT_HEAD_HUNTER) return "UNIT_HEAD_HUNTER";
		if (i == UNIT_ARCHER_INTREPIDE) return "UNIT_ARCHER_INTREPIDE";
		if (i == UNIT_MIRROR_TROLL) return "UNIT_MIRROR_TROLL";
		if (i == UNIT_MIRROR_TROLL_CLONE) return "UNIT_MIRROR_TROLL_CLONE";
		if (i == UNIT_NECROMANCER) return "UNIT_NECROMANCER";
		if (i == UNIT_SHAMAN) return "UNIT_SHAMAN";
		if (i == UNIT_SHADOW_ARCHER) return "UNIT_SHADOW_ARCHER";
		if (i == UNIT_SHADOW_HUNTER) return "UNIT_SHADOW_HUNTER";
		if (i == UNIT_SPIRIT_WALKER) return "UNIT_SPIRIT_WALKER";
		if (i == UNIT_TRACKER_TOURNY_2011) return "UNIT_TRACKER_TOURNY_2011";
		if (i == UNIT_TRICKSTER) return "UNIT_TRICKSTER";
		if (i == UNIT_TROLL_CONARTIST) return "UNIT_TROLL_CONARTIST";
		if (i == UNIT_TROLL_MAGE_ALT) return "UNIT_TROLL_MAGE_ALT";
		if (i == UNIT_TROLL_WITCH_DOCTOR) return "UNIT_TROLL_WITCH_DOCTOR";
		if (i == UNIT_EA_TOURNY_2011) return "UNIT_EA_TOURNY_2011";
		if (i == UNIT_ALIGATOR_MAN) return "UNIT_ALIGATOR_MAN";
		if (i == UNIT_ANCIENT_HYDRA) return "UNIT_ANCIENT_HYDRA";
		if (i == UNIT_DISCO_DUCK) return "UNIT_DISCO_DUCK";
		if (i == UNIT_LESSER_HYDRA) return "UNIT_LESSER_HYDRA";
		if (i == UNIT_MAGENTA_FISH) return "UNIT_MAGENTA_FISH";
		if (i == UNIT_MAMMOTH) return "UNIT_MAMMOTH";
		if (i == UNIT_ONE) return "UNIT_ONE";
		if (i == UNIT_RAPID_TURTLE) return "UNIT_RAPID_TURTLE";
		if (i == UNIT_ADULT_ELK) return "UNIT_ADULT_ELK";
		if (i == UNIT_ADULT_JUNGLE_BEAR) return "UNIT_ADULT_JUNGLE_BEAR";
		if (i == UNIT_ADULT_JUNGLE_WOLF) return "UNIT_ADULT_JUNGLE_WOLF";
		if (i == UNIT_ALPHA_HAWK) return "UNIT_ALPHA_HAWK";
		if (i == UNIT_BRONZE_DRAGON) return "UNIT_BRONZE_DRAGON";
		if (i == UNIT_BRONZE_DRAGON_HATCHLING) return "UNIT_BRONZE_DRAGON_HATCHLING";
		if (i == UNIT_BEAR_CUB) return "UNIT_BEAR_CUB";
		if (i == UNIT_ELDER_PANTHER) return "UNIT_ELDER_PANTHER";
		if (i == UNIT_ELK) return "UNIT_ELK";
		if (i == UNIT_ELK_ADOLESCENT) return "UNIT_ELK_ADOLESCENT";
		if (i == UNIT_FAWN) return "UNIT_FAWN";
		if (i == UNIT_FISH) return "UNIT_FISH";
		if (i == UNIT_FOREST_DRAGON) return "UNIT_FOREST_DRAGON";
		if (i == UNIT_FOREST_DRAGON_HATCHLING) return "UNIT_FOREST_DRAGON_HATCHLING";
		if (i == UNIT_GREATER_BRONZE_DRAGON) return "UNIT_GREATER_BRONZE_DRAGON";
		if (i == UNIT_GREATER_FOREST_DRAGON) return "UNIT_GREATER_FOREST_DRAGON";
		if (i == UNIT_GREATER_NETHER_DRAGON) return "UNIT_GREATER_NETHER_DRAGON";
		if (i == UNIT_GREATER_RED_DRAGON) return "UNIT_GREATER_RED_DRAGON";
		if (i == UNIT_GREEN_FISH) return "UNIT_GREEN_FISH";
		if (i == UNIT_HAWK) return "UNIT_HAWK";
		if (i == UNIT_HAWK_ADOLESCENT) return "UNIT_HAWK_ADOLESCENT";
		if (i == UNIT_HAWK_HATCHLING) return "UNIT_HAWK_HATCHLING";
		if (i == UNIT_JUNGLE_BEAR) return "UNIT_JUNGLE_BEAR";
		if (i == UNIT_JUNGLE_WOLF) return "UNIT_JUNGLE_WOLF";
		if (i == UNIT_MAMMOTH_BABY) return "UNIT_MAMMOTH_BABY";
		if (i == UNIT_NETHER_DRAGON_HATCHLING) return "UNIT_NETHER_DRAGON_HATCHLING";
		if (i == UNIT_PANTHER) return "UNIT_PANTHER";
		if (i == UNIT_RED_DRAGON_HATCHLING) return "UNIT_RED_DRAGON_HATCHLING";
		if (i == UNIT_SNAKE) return "UNIT_SNAKE";
		if (i == UNIT_WOLF_PUP) return "UNIT_WOLF_PUP";
		if (i == UNIT_ARMORY) return "UNIT_ARMORY";
		if (i == UNIT_BUILDING_TREE) return "UNIT_BUILDING_TREE";
		if (i == UNIT_FIRE) return "UNIT_FIRE";
		if (i == UNIT_DEFENSE_WARD) return "UNIT_DEFENSE_WARD";
		if (i == UNIT_ENSNARE_TRAP) return "UNIT_ENSNARE_TRAP";
		if (i == UNIT_HATCHERY) return "UNIT_HATCHERY";
		if (i == UNIT_MAGE_FIRE) return "UNIT_MAGE_FIRE";
		if (i == UNIT_MAGE_FIRE_SUMMONED) return "UNIT_MAGE_FIRE_SUMMONED";
		if (i == UNIT_POT) return "UNIT_POT";
		if (i == UNIT_MUD_HUT) return "UNIT_MUD_HUT";
		if (i == UNIT_OMNITOWER) return "UNIT_OMNITOWER";
		if (i == UNIT_SMOKE_HOUSE) return "UNIT_SMOKE_HOUSE";
		if (i == UNIT_SPIRIT_WARD) return "UNIT_SPIRIT_WARD";
		if (i == UNIT_STORAGE_HUT) return "UNIT_STORAGE_HUT";
		if (i == UNIT_TANNERY) return "UNIT_TANNERY";
		if (i == UNIT_TELEPORTATION_BEACON) return "UNIT_TELEPORTATION_BEACON";
		if (i == UNIT_TENT) return "UNIT_TENT";
		if (i == UNIT_TROLL_BURROW) return "UNIT_TROLL_BURROW";
		if (i == UNIT_TROLL_HUT) return "UNIT_TROLL_HUT";
		if (i == UNIT_TROLL_TOTEM) return "UNIT_TROLL_TOTEM";
		if (i == UNIT_TROLL_TRANSPORT_SHIP) return "UNIT_TROLL_TRANSPORT_SHIP";
		if (i == UNIT_WITCH_DOCTORS_HIT) return "UNIT_WITCH_DOCTORS_HIT";
		if (i == UNIT_WORKSHOP) return "UNIT_WORKSHOP";
		if (i == UNIT_POWER_GENERATOR) return "UNIT_POWER_GENERATOR";
		if (i == UNIT_BLUE_HERB_BUSH) return "UNIT_BLUE_HERB_BUSH";
		if (i == UNIT_HAISETSU_BUSH) return "UNIT_HAISETSU_BUSH";
		if (i == UNIT_HIDDEN_STASH) return "UNIT_HIDDEN_STASH";
		if (i == UNIT_MUSHROOM_COLONY) return "UNIT_MUSHROOM_COLONY";
		if (i == UNIT_ORANGE_HERB_BUSH) return "UNIT_ORANGE_HERB_BUSH";
		if (i == UNIT_PURPLE_HERB_BUSH) return "UNIT_PURPLE_HERB_BUSH";
		if (i == UNIT_SCOUTS_BUSH) return "UNIT_SCOUTS_BUSH";
		if (i == UNIT_THIEFS_BUSH) return "UNIT_THIEFS_BUSH";
		if (i == UNIT_THISTLE_SHRUB) return "UNIT_THISTLE_SHRUB";
		if (i == UNIT_WATER_HERB_BUSH) return "UNIT_WATER_HERB_BUSH";
		if (i == UNIT_YELLOW_HERB_BUSH) return "UNIT_YELLOW_HERB_BUSH";
		if (i == UNIT_CRAFT_MASTER) return "UNIT_CRAFT_MASTER";
		if (i == UNIT_OMINOUS_ALTAR) return "UNIT_OMINOUS_ALTAR";
		if (i == UNIT_TRADE_SHIP_1) return "UNIT_TRADE_SHIP_1";
		if (i == UNIT_TRADE_SHIP_2) return "UNIT_TRADE_SHIP_2";
		if (i == UNIT_TRADE_SHIP_3) return "UNIT_TRADE_SHIP_3";
		if (i == UNIT_TRADE_SHIP_4) return "UNIT_TRADE_SHIP_4";
		if (i == UNIT_TRADE_SHIP_5) return "UNIT_TRADE_SHIP_5";
		if (i == UNIT_TRADE_SHIP_6) return "UNIT_TRADE_SHIP_6";
		if (i == UNIT_TROLL_MERCHANT) return "UNIT_TROLL_MERCHANT";
		if (i == UNIT_BLUR_IMAGE) return "UNIT_BLUR_IMAGE";
		if (i == UNIT_BEE) return "UNIT_BEE";
		if (i == UNIT_BEE_HIVE) return "UNIT_BEE_HIVE";
		if (i == UNIT_BEE_HIVE_SUMMONED) return "UNIT_BEE_HIVE_SUMMONED";
		if (i == UNIT_DISEASE_CLOUD) return "UNIT_DISEASE_CLOUD";
		if (i == UNIT_DUMMY) return "UNIT_DUMMY";
		if (i == UNIT_AMHS_DUMMY) return "UNIT_AMHS_DUMMY";
		if (i == UNIT_UNUSED_DUMMY) return "UNIT_UNUSED_DUMMY";
		if (i == UNIT_LIVING_CLAY) return "UNIT_LIVING_CLAY";
		if (i == UNIT_LOCUST) return "UNIT_LOCUST";
		if (i == UNIT_LOCUST_ALT) return "UNIT_LOCUST_ALT";
		if (i == UNIT_LOCUST_DARK_NODE) return "UNIT_LOCUST_DARK_NODE";
		if (i == UNIT_LOCUST_FIRE_LORD) return "UNIT_LOCUST_FIRE_LORD";
		if (i == UNIT_LOCUST_GHOST) return "UNIT_LOCUST_GHOST";
		if (i == UNIT_LOCUST_INNER_FIRE) return "UNIT_LOCUST_INNER_FIRE";
		if (i == UNIT_LOCUST_KA) return "UNIT_LOCUST_KA";
		if (i == UNIT_LOCUST_LEZ) return "UNIT_LOCUST_LEZ";
		if (i == UNIT_LOCUST_LIGHT_NODE) return "UNIT_LOCUST_LIGHT_NODE";
		if (i == UNIT_LOCUST_NEL) return "UNIT_LOCUST_NEL";
		if (i == UNIT_LOCUST_OPPOSING_PANTHER) return "UNIT_LOCUST_OPPOSING_PANTHER";
		if (i == UNIT_LOCUST_POOP) return "UNIT_LOCUST_POOP";
		if (i == UNIT_LOCUST_SKELETON) return "UNIT_LOCUST_SKELETON";
		if (i == UNIT_LOCUST_WATER_LORD) return "UNIT_LOCUST_WATER_LORD";
		if (i == UNIT_MASTER_CASTER) return "UNIT_MASTER_CASTER";
		if (i == UNIT_TRADE_ZEPPELIN) return "UNIT_TRADE_ZEPPELIN";
		if (i == UNIT_UBER_HIVE) return "UNIT_UBER_HIVE";
		if (i == UNIT_ROCK) return "UNIT_ROCK";
		if (i == UNIT_CHICKEN) return "UNIT_CHICKEN";
		if (i == UNIT_FARM) return "UNIT_FARM";
		if (i == UNIT_FOOTMAN) return "UNIT_FOOTMAN";
		if (i == UNIT_HERO_PICKER) return "UNIT_HERO_PICKER";
		if (i == UNIT_LIVING_CLAY_UNUSED) return "UNIT_LIVING_CLAY_UNUSED";
		if (i == UNIT_MEAT) return "UNIT_MEAT";
		if (i == UNIT_PEASANT) return "UNIT_PEASANT";
		if (i == UNIT_PEON) return "UNIT_PEON";
		if (i == UNIT_SMOKED_MEAT) return "UNIT_SMOKED_MEAT";
		if (i == UNIT_SOUL_REFLECTION_1) return "UNIT_SOUL_REFLECTION_1";
		if (i == UNIT_SOUL_REFLECTION_2) return "UNIT_SOUL_REFLECTION_2";
		if (i == UNIT_SOUL_REFLECTION_3) return "UNIT_SOUL_REFLECTION_3";
		if (i == UNIT_TEST_CLOAK) return "UNIT_TEST_CLOAK";
		if (i == UNIT_ULTRA_FOOTMAN) return "UNIT_ULTRA_FOOTMAN";
		if (i == SPELL_PET_ATTACK) return "SPELL_PET_ATTACK";
		if (i == SPELL_PET_BRING_ITEMS) return "SPELL_PET_BRING_ITEMS";
		if (i == SPELL_PET_DROP_ITEMS) return "SPELL_PET_DROP_ITEMS";
		if (i == SPELL_PET_FOLLOW) return "SPELL_PET_FOLLOW";
		if (i == SPELL_PET_GO_TO_HATCHERY) return "SPELL_PET_GO_TO_HATCHERY";
		if (i == SPELL_PET_RELEASE) return "SPELL_PET_RELEASE";
		if (i == SPELL_PET_SCOUT) return "SPELL_PET_SCOUT";
		if (i == SPELL_PET_SLEEP) return "SPELL_PET_SLEEP";
		if (i == SPELL_PET_STAY) return "SPELL_PET_STAY";
		if (i == SPELL_PET_TAME) return "SPELL_PET_TAME";
		if (i == SPELL_SMOKE_MEAT) return "SPELL_SMOKE_MEAT";
		if (i == SPELL_PACK_BUILDING) return "SPELL_PACK_BUILDING";
		if (i == SPELL_SELF_DESTRUCT) return "SPELL_SELF_DESTRUCT";
		if (i == SPELL_DISEASE) return "SPELL_DISEASE";
		if (i == SPELL_CURE_ALL_ITEM) return "SPELL_CURE_ALL_ITEM";
		if (i == SPELL_SUPER_FORM_CAST) return "SPELL_SUPER_FORM_CAST";
		if (i == SPELL_SONAR_COMPASS) return "SPELL_SONAR_COMPASS";
		if (i == SPELL_SUPERSUB_COURAGE) return "SPELL_SUPERSUB_COURAGE";
		if (i == SPELL_SPEAR_CAST) return "SPELL_SPEAR_CAST";
		if (i == SPELL_IRON_SPEAR_CAST) return "SPELL_IRON_SPEAR_CAST";
		if (i == SPELL_STEEL_SPEAR_CAST) return "SPELL_STEEL_SPEAR_CAST";
		if (i == SPELL_POISON_SPEAR_CAST) return "SPELL_POISON_SPEAR_CAST";
		if (i == SPELL_RPOISON_SPEAR_CAST) return "SPELL_RPOISON_SPEAR_CAST";
		if (i == SPELL_UPOISON_SPEAR_CAST) return "SPELL_UPOISON_SPEAR_CAST";
		if (i == SPELL_DARK_SPEAR_CAST) return "SPELL_DARK_SPEAR_CAST";
		if (i == SPELL_DARK_SPEAR) return "SPELL_DARK_SPEAR";
		if (i == SPELL_RPOISON_SPEAR) return "SPELL_RPOISON_SPEAR";
		if (i == SPELL_POISON_SPEAR) return "SPELL_POISON_SPEAR";
		if (i == SPELL_IRON_SPEAR) return "SPELL_IRON_SPEAR";
		if (i == SPELL_UPOISON_SPEAR) return "SPELL_UPOISON_SPEAR";
		if (i == SPELL_STEEL_SPEAR) return "SPELL_STEEL_SPEAR";
		if (i == SPELL_SPEAR) return "SPELL_SPEAR";
		if (i == SPELL_BATTLE_SPEAR_CAST) return "SPELL_BATTLE_SPEAR_CAST";
		if (i == SPELL_DYSENTERY) return "SPELL_DYSENTERY";
		if (i == ABILITY_LOCUST) return "ABILITY_LOCUST";
		if (i == ABILITY_ASSASINATE) return "ABILITY_ASSASINATE";
		if (i == ABILITY_MEU_DUMMY) return "ABILITY_MEU_DUMMY";
		if (i == ABILITY_MEU_OMNIGATHERER) return "ABILITY_MEU_OMNIGATHERER";
		if (i == ABILITY_MEU_DEMENTIA_MASTER) return "ABILITY_MEU_DEMENTIA_MASTER";
		if (i == ABILITY_MEU_SAGE) return "ABILITY_MEU_SAGE";
		if (i == ABILITY_MEU_SPY) return "ABILITY_MEU_SPY";
		if (i == ABILITY_MEU_ASSASSIN) return "ABILITY_MEU_ASSASSIN";
		if (i == ABILITY_INVULNERABLE) return "ABILITY_INVULNERABLE";
		if (i == BUFF_GOK) return "BUFF_GOK";
		if (i == BUFF_SPRINTING) return "BUFF_SPRINTING";
		if (i == BUFF_SPEAR_INCOMING) return "BUFF_SPEAR_INCOMING";
		if (i == BUFF_DYSENTERY) return "BUFF_DYSENTERY";
		if (i == ITEM_ANCIENT_BOW) return "ITEM_ANCIENT_BOW";
		if (i == ITEM_BOW_BLOOD_GOD) return "ITEM_BOW_BLOOD_GOD";
		if (i == ITEM_CLAY_EXPLOSION) return "ITEM_CLAY_EXPLOSION";
		if (i == ITEM_DD_PINION_FIRE) return "ITEM_DD_PINION_FIRE";
		if (i == ITEM_DD_PINION_PAIN) return "ITEM_DD_PINION_PAIN";
		if (i == ITEM_DD_PINION_SHADOW) return "ITEM_DD_PINION_SHADOW";
		if (i == ITEM_DUSTY_OLD_BOW) return "ITEM_DUSTY_OLD_BOW";
		if (i == ITEM_GLOWING_ANCIENT_BOW) return "ITEM_GLOWING_ANCIENT_BOW";
		if (i == ITEM_HORN_MAMMOTH) return "ITEM_HORN_MAMMOTH";
		if (i == ITEM_HYDRA_CLAWS) return "ITEM_HYDRA_CLAWS";
		if (i == ITEM_HYDRA_SCALE) return "ITEM_HYDRA_SCALE";
		if (i == ITEM_HYDRAAC_FINS) return "ITEM_HYDRAAC_FINS";
		if (i == ITEM_MED_BEAST_MASTER) return "ITEM_MED_BEAST_MASTER";
		if (i == ITEM_MED_PRIEST) return "ITEM_MED_PRIEST";
		if (i == ITEM_MED_SCOUT) return "ITEM_MED_SCOUT";
		if (i == ITEM_MED_GATHERER) return "ITEM_MED_GATHERER";
		if (i == ITEM_MED_MAGE) return "ITEM_MED_MAGE";
		if (i == ITEM_MED_THIEF) return "ITEM_MED_THIEF";
		if (i == ITEM_MED_HUNTER) return "ITEM_MED_HUNTER";
		if (i == ITEM_MED_HEAD_HUNER) return "ITEM_MED_HEAD_HUNER";
		if (i == ITEM_THIEF_MED) return "ITEM_THIEF_MED";
		if (i == ITEM_MEDALLION_COURAGE) return "ITEM_MEDALLION_COURAGE";
		if (i == ITEM_BLUE_HERB) return "ITEM_BLUE_HERB";
		if (i == ITEM_BONE) return "ITEM_BONE";
		if (i == ITEM_BUTSU) return "ITEM_BUTSU";
		if (i == ITEM_CLAY_BALL) return "ITEM_CLAY_BALL";
		if (i == ITEM_ELK_HIDE) return "ITEM_ELK_HIDE";
		if (i == ITEM_FLINT) return "ITEM_FLINT";
		if (i == ITEM_HARDEN_SCALES) return "ITEM_HARDEN_SCALES";
		if (i == ITEM_HAWK_EGG) return "ITEM_HAWK_EGG";
		if (i == ITEM_JUNGLE_WOLF_HIDE) return "ITEM_JUNGLE_WOLF_HIDE";
		if (i == ITEM_JUNGLE_BEAR_HIDE) return "ITEM_JUNGLE_BEAR_HIDE";
		if (i == ITEM_MAGIC) return "ITEM_MAGIC";
		if (i == ITEM_MANA_CRYSTAL) return "ITEM_MANA_CRYSTAL";
		if (i == ITEM_MUSHROOM) return "ITEM_MUSHROOM";
		if (i == ITEM_ORANGE_HERB) return "ITEM_ORANGE_HERB";
		if (i == ITEM_PURPLE_HERB) return "ITEM_PURPLE_HERB";
		if (i == ITEM_RIVER_STEM) return "ITEM_RIVER_STEM";
		if (i == ITEM_RIVER_ROOT) return "ITEM_RIVER_ROOT";
		if (i == ITEM_STICK) return "ITEM_STICK";
		if (i == ITEM_STONE) return "ITEM_STONE";
		if (i == ITEM_TINDER) return "ITEM_TINDER";
		if (i == ITEM_YELLOW_HERB) return "ITEM_YELLOW_HERB";
		if (i == ITEM_ACID_BOMB) return "ITEM_ACID_BOMB";
		if (i == ITEM_ANTI_MAGIC_POTION) return "ITEM_ANTI_MAGIC_POTION";
		if (i == ITEM_ANABOLIC_POTION) return "ITEM_ANABOLIC_POTION";
		if (i == ITEM_CURE_ALL) return "ITEM_CURE_ALL";
		if (i == ITEM_DISEASE_POTION) return "ITEM_DISEASE_POTION";
		if (i == ITEM_DRUNKS_POTION) return "ITEM_DRUNKS_POTION";
		if (i == ITEM_ELEMENTAL_SHIELD_POTION) return "ITEM_ELEMENTAL_SHIELD_POTION";
		if (i == ITEM_ESSENCE_BEES) return "ITEM_ESSENCE_BEES";
		if (i == ITEM_FERVER_POTION) return "ITEM_FERVER_POTION";
		if (i == ITEM_HEALING_POTION_I) return "ITEM_HEALING_POTION_I";
		if (i == ITEM_HEALING_POTION_II) return "ITEM_HEALING_POTION_II";
		if (i == ITEM_HEALING_POTION_III) return "ITEM_HEALING_POTION_III";
		if (i == ITEM_HEALING_POTION_IV) return "ITEM_HEALING_POTION_IV";
		if (i == ITEM_MANA_POTION_I) return "ITEM_MANA_POTION_I";
		if (i == ITEM_MANA_POTION_II) return "ITEM_MANA_POTION_II";
		if (i == ITEM_MANA_POTION_III) return "ITEM_MANA_POTION_III";
		if (i == ITEM_MANA_POTION_IV) return "ITEM_MANA_POTION_IV";
		if (i == ITEM_NAPALM) return "ITEM_NAPALM";
		if (i == ITEM_NETHER_POTION) return "ITEM_NETHER_POTION";
		if (i == ITEM_POTION_TWIN_ISLANDS) return "ITEM_POTION_TWIN_ISLANDS";
		if (i == ITEM_OMNICURE) return "ITEM_OMNICURE";
		if (i == ITEM_DARK_ROCK) return "ITEM_DARK_ROCK";
		if (i == ITEM_GEM_OF_KNOWLEDGE) return "ITEM_GEM_OF_KNOWLEDGE";
		if (i == ITEM_SPIRIT_WATER) return "ITEM_SPIRIT_WATER";
		if (i == ITEM_SPIRIT_WIND) return "ITEM_SPIRIT_WIND";
		if (i == ITEM_ACORN) return "ITEM_ACORN";
		if (i == ITEM_COOKED_MEAT) return "ITEM_COOKED_MEAT";
		if (i == ITEM_DISEASED_MEAT) return "ITEM_DISEASED_MEAT";
		if (i == ITEM_MAGIC_ACORN) return "ITEM_MAGIC_ACORN";
		if (i == ITEM_SMOKED_MEAT) return "ITEM_SMOKED_MEAT";
		if (i == ITEM_ANABOLIC_BOOTS) return "ITEM_ANABOLIC_BOOTS";
		if (i == ITEM_BATTLE_ARMOR) return "ITEM_BATTLE_ARMOR";
		if (i == ITEM_BATTLE_AXE) return "ITEM_BATTLE_AXE";
		if (i == ITEM_BATTLE_GLOVES) return "ITEM_BATTLE_GLOVES";
		if (i == ITEM_BATTLE_SHIELD) return "ITEM_BATTLE_SHIELD";
		if (i == ITEM_BATTLE_SUIT) return "ITEM_BATTLE_SUIT";
		if (i == ITEM_BEE_HIVE) return "ITEM_BEE_HIVE";
		if (i == ITEM_BLOW_GUN) return "ITEM_BLOW_GUN";
		if (i == ITEM_CAMOUFLAGE_COAT) return "ITEM_CAMOUFLAGE_COAT";
		if (i == ITEM_DARK_THISTLES) return "ITEM_DARK_THISTLES";
		if (i == ITEM_EMP) return "ITEM_EMP";
		if (i == ITEM_FIRE_BOMB) return "ITEM_FIRE_BOMB";
		if (i == ITEM_NETS) return "ITEM_NETS";
		if (i == ITEM_SMOKE_BOMB) return "ITEM_SMOKE_BOMB";
		if (i == ITEM_SONAR_COMPASS) return "ITEM_SONAR_COMPASS";
		if (i == ITEM_THISTLES) return "ITEM_THISTLES";
		if (i == ITEM_CLOAK_OF_FLAMES) return "ITEM_CLOAK_OF_FLAMES";
		if (i == ITEM_CLOAK_OF_FROST) return "ITEM_CLOAK_OF_FROST";
		if (i == ITEM_CLOAK_OF_HEALING) return "ITEM_CLOAK_OF_HEALING";
		if (i == ITEM_LIVING_CLAY) return "ITEM_LIVING_CLAY";
		if (i == ITEM_MAGIC_SEED) return "ITEM_MAGIC_SEED";
		if (i == ITEM_POISON) return "ITEM_POISON";
		if (i == ITEM_POISON_SPEAR) return "ITEM_POISON_SPEAR";
		if (i == ITEM_REFINED_POISON_SPEAR) return "ITEM_REFINED_POISON_SPEAR";
		if (i == ITEM_SCROLL_SWIFTNESS) return "ITEM_SCROLL_SWIFTNESS";
		if (i == ITEM_SCROLL_CYCLONE) return "ITEM_SCROLL_CYCLONE";
		if (i == ITEM_SCROLL_ENTANGLING_ROOTS) return "ITEM_SCROLL_ENTANGLING_ROOTS";
		if (i == ITEM_SCROLL_FIREBALL) return "ITEM_SCROLL_FIREBALL";
		if (i == ITEM_SCROLL_LIVING_DEAD) return "ITEM_SCROLL_LIVING_DEAD";
		if (i == ITEM_SCROLL_STONE_ARMOR) return "ITEM_SCROLL_STONE_ARMOR";
		if (i == ITEM_SCROLL_TSUNAMI) return "ITEM_SCROLL_TSUNAMI";
		if (i == ITEM_ULTRA_POISON) return "ITEM_ULTRA_POISON";
		if (i == ITEM_ULTRA_POISON_SPEAR) return "ITEM_ULTRA_POISON_SPEAR";
		if (i == ITEM_BONE_BOOTS) return "ITEM_BONE_BOOTS";
		if (i == ITEM_BONE_COAT) return "ITEM_BONE_COAT";
		if (i == ITEM_BONE_GLOVES) return "ITEM_BONE_GLOVES";
		if (i == ITEM_BONE_SHIELD) return "ITEM_BONE_SHIELD";
		if (i == ITEM_DARK_SPEAR) return "ITEM_DARK_SPEAR";
		if (i == ITEM_FLINT_AXE) return "ITEM_FLINT_AXE";
		if (i == ITEM_IRON_AXE) return "ITEM_IRON_AXE";
		if (i == ITEM_IRON_BOOTS) return "ITEM_IRON_BOOTS";
		if (i == ITEM_IRON_COAT) return "ITEM_IRON_COAT";
		if (i == ITEM_IRON_GLOVES) return "ITEM_IRON_GLOVES";
		if (i == ITEM_IRON_INGOT) return "ITEM_IRON_INGOT";
		if (i == ITEM_IRON_SHIELD) return "ITEM_IRON_SHIELD";
		if (i == ITEM_IRON_SPEAR) return "ITEM_IRON_SPEAR";
		if (i == ITEM_MAGE_MASHER) return "ITEM_MAGE_MASHER";
		if (i == ITEM_SHIELD) return "ITEM_SHIELD";
		if (i == ITEM_SPEAR) return "ITEM_SPEAR";
		if (i == ITEM_STEEL_AXE) return "ITEM_STEEL_AXE";
		if (i == ITEM_STEEL_BOOTS) return "ITEM_STEEL_BOOTS";
		if (i == ITEM_STEEL_COAT) return "ITEM_STEEL_COAT";
		if (i == ITEM_STEEL_GLOVES) return "ITEM_STEEL_GLOVES";
		if (i == ITEM_STEEL_INGOT) return "ITEM_STEEL_INGOT";
		if (i == ITEM_STEEL_SHIELD) return "ITEM_STEEL_SHIELD";
		if (i == ITEM_STEEL_SPEAR) return "ITEM_STEEL_SPEAR";
		if (i == ITEM_STONE_AXE) return "ITEM_STONE_AXE";
		if (i == ITEM_LOADED_THISTLES) return "ITEM_LOADED_THISTLES";
		if (i == ITEM_LOADED_DARK_THISTLES) return "ITEM_LOADED_DARK_THISTLES";
		if (i == ITEM_LOADED_BONE) return "ITEM_LOADED_BONE";
		if (i == ITEM_BEAR_SKIN_BOOTS) return "ITEM_BEAR_SKIN_BOOTS";
		if (i == ITEM_BEAR_SKIN_COAT) return "ITEM_BEAR_SKIN_COAT";
		if (i == ITEM_BEAR_SKIN_GLOVES) return "ITEM_BEAR_SKIN_GLOVES";
		if (i == ITEM_ELK_SKIN_BOOTS) return "ITEM_ELK_SKIN_BOOTS";
		if (i == ITEM_ELK_SKIN_COAT) return "ITEM_ELK_SKIN_COAT";
		if (i == ITEM_ELK_SKIN_GLOVES) return "ITEM_ELK_SKIN_GLOVES";
		if (i == ITEM_WOLF_SKIN_BOOTS) return "ITEM_WOLF_SKIN_BOOTS";
		if (i == ITEM_WOLF_SKIN_COAT) return "ITEM_WOLF_SKIN_COAT";
		if (i == ITEM_WOLF_SKIN_GLOVES) return "ITEM_WOLF_SKIN_GLOVES";
		if (i == ITEM_ARMORY_KIT) return "ITEM_ARMORY_KIT";
		if (i == ITEM_DEFENSIVE_WARD_KIT) return "ITEM_DEFENSIVE_WARD_KIT";
		if (i == ITEM_ENSNARE_TRAP_KIT) return "ITEM_ENSNARE_TRAP_KIT";
		if (i == ITEM_FIRE_KIT) return "ITEM_FIRE_KIT";
		if (i == ITEM_HATCHERY_KIT) return "ITEM_HATCHERY_KIT";
		if (i == ITEM_MAGE_FIRE_KIT) return "ITEM_MAGE_FIRE_KIT";
		if (i == ITEM_MUD_HUT_KIT) return "ITEM_MUD_HUT_KIT";
		if (i == ITEM_OMNIDEFENDER_KIT) return "ITEM_OMNIDEFENDER_KIT";
		if (i == ITEM_POT_KIT) return "ITEM_POT_KIT";
		if (i == ITEM_SMOKE_HOUSE_KIT) return "ITEM_SMOKE_HOUSE_KIT";
		if (i == ITEM_SPIRIT_WARD_KIT) return "ITEM_SPIRIT_WARD_KIT";
		if (i == ITEM_STORAGE_HUT_KIT) return "ITEM_STORAGE_HUT_KIT";
		if (i == ITEM_TANNERY_KIT) return "ITEM_TANNERY_KIT";
		if (i == ITEM_TELEPORT_BEACON_KIT) return "ITEM_TELEPORT_BEACON_KIT";
		if (i == ITEM_TENT_KIT) return "ITEM_TENT_KIT";
		if (i == ITEM_TRANSPORT_SHIP_KIT) return "ITEM_TRANSPORT_SHIP_KIT";
		if (i == ITEM_TROLL_BURROW_KIT) return "ITEM_TROLL_BURROW_KIT";
		if (i == ITEM_TROLL_HUT_KIT) return "ITEM_TROLL_HUT_KIT";
		if (i == ITEM_WITCH_DOCTORS_HUT_KIT) return "ITEM_WITCH_DOCTORS_HUT_KIT";
		if (i == ITEM_WORKSHOP_KIT) return "ITEM_WORKSHOP_KIT";
		if (i == ITEM_BATTLE_SUIT_SPELLS) return "ITEM_BATTLE_SUIT_SPELLS";
		if (i == ITEM_BATTLE_SUIT_SPELLS_TWO) return "ITEM_BATTLE_SUIT_SPELLS_TWO";
		if (i == ITEM_CHEESE) return "ITEM_CHEESE";
		if (i == ITEM_HEAD_HUNTER_STEEL_SPEAR) return "ITEM_HEAD_HUNTER_STEEL_SPEAR";
		if (i == ITEM_HERB_RECIPE_1) return "ITEM_HERB_RECIPE_1";
		if (i == ITEM_HERB_RECIPE_2) return "ITEM_HERB_RECIPE_2";
		if (i == ITEM_HERB_RECIPE_3) return "ITEM_HERB_RECIPE_3";
		if (i == ITEM_HERB_RECIPE_4) return "ITEM_HERB_RECIPE_4";
		if (i == ITEM_HERB_RECIPE_5) return "ITEM_HERB_RECIPE_5";
		if (i == ITEM_HERB_RECIPE_6) return "ITEM_HERB_RECIPE_6";
		if (i == ITEM_HERB_RECIPE_7) return "ITEM_HERB_RECIPE_7";
		if (i == ITEM_HERB_RECIPE_8) return "ITEM_HERB_RECIPE_8";
		if (i == ITEM_HERB_RECIPE_9) return "ITEM_HERB_RECIPE_9";
		if (i == ITEM_HERB_RECIPE_10) return "ITEM_HERB_RECIPE_10";
		if (i == ITEM_HERB_RECIPE_11) return "ITEM_HERB_RECIPE_11";
		if (i == ITEM_HYDRA_HINT) return "ITEM_HYDRA_HINT";
		if (i == ITEM_OPPOSING_NIGHT_ITEM) return "ITEM_OPPOSING_NIGHT_ITEM";
		if (i == ITEM_PANTHER_HIDE) return "ITEM_PANTHER_HIDE";
		if (i == ITEM_SECRET_HINT) return "ITEM_SECRET_HINT";
		if (i == ITEM_TOME_LOSS) return "ITEM_TOME_LOSS";
		if (i == ITEM_REPAIR_HAMMER) return "ITEM_REPAIR_HAMMER";
		if (i == ITEM_NULL) return "ITEM_NULL";
		if (i == ITEM_CANDY_CANE) return "ITEM_CANDY_CANE";
		if (i == DEST_FALSE_TREE) return "DEST_FALSE_TREE";
		if (i == DEST_RUINS_TREE) return "DEST_RUINS_TREE";
		if (i == DEST_RUINS_TREE_CANOPY) return "DEST_RUINS_TREE_CANOPY";
		if (i == DEST_RUINS_TREE_ITEM) return "DEST_RUINS_TREE_ITEM";
		if (i == DEST_SUPER_TREE) return "DEST_SUPER_TREE";
		if (i == DEST_SUPER_TREE_CANOPY) return "DEST_SUPER_TREE_CANOPY";

		return "";
	}

	function onInit() {
		UNIT_ALL  = ArrayListInteger.create();
		SPELL_ALL  = ArrayListInteger.create();
		ABILITY_ALL  = ArrayListInteger.create();
		BUFF_ALL  = ArrayListInteger.create();
		ITEM_ALL  = ArrayListInteger.create();
		DEST_ALL  = ArrayListInteger.create();

		UNIT_ALL.push(UNIT_HUNTER);
		UNIT_ALL.push(UNIT_HUNTER_1);
		UNIT_ALL.push(UNIT_TRACKER);
		UNIT_ALL.push(UNIT_WARRIOR);
		UNIT_ALL.push(UNIT_JUGGERNAUT);
		UNIT_ALL.push(UNIT_BEAST_MASTER);
		UNIT_ALL.push(UNIT_TRUE_FORM);
		UNIT_ALL.push(UNIT_DRUID);
		UNIT_ALL.push(UNIT_CHICKEN_FORM);
		UNIT_ALL.push(UNIT_ULTIMATE_FORM);
		UNIT_ALL.push(UNIT_BEAST_MASTER_1);
		UNIT_ALL.push(UNIT_SHAPESHIFTER_WOLF);
		UNIT_ALL.push(UNIT_SHAPESHIFTER_BEAR);
		UNIT_ALL.push(UNIT_SHAPESHIFTER_PANTHER);
		UNIT_ALL.push(UNIT_SHAPESHIFTER_TIGER);
		UNIT_ALL.push(UNIT_MAGE);
		UNIT_ALL.push(UNIT_MAGE_1);
		UNIT_ALL.push(UNIT_ELEMENTALIST);
		UNIT_ALL.push(UNIT_ELEMENTALIST_1);
		UNIT_ALL.push(UNIT_HYPNOTIST);
		UNIT_ALL.push(UNIT_DEMENTIA_MASTER);
		UNIT_ALL.push(UNIT_PRIEST);
		UNIT_ALL.push(UNIT_BOOSTER);
		UNIT_ALL.push(UNIT_BOOSTER_1);
		UNIT_ALL.push(UNIT_MASTER_HEALER);
		UNIT_ALL.push(UNIT_SAGE);
		UNIT_ALL.push(UNIT_THIEF);
		UNIT_ALL.push(UNIT_ESCAPE_ARTIST);
		UNIT_ALL.push(UNIT_CONTORTIONIST);
		UNIT_ALL.push(UNIT_ASSASSIN);
		UNIT_ALL.push(UNIT_SCOUT);
		UNIT_ALL.push(UNIT_OBSERVER);
		UNIT_ALL.push(UNIT_RADAR_SCOUT);
		UNIT_ALL.push(UNIT_SPY);
		UNIT_ALL.push(UNIT_GATHERER);
		UNIT_ALL.push(UNIT_RADAR_GATHERER);
		UNIT_ALL.push(UNIT_HERB_MASTER);
		UNIT_ALL.push(UNIT_OMNIGATHERER);
		UNIT_ALL.push(UNIT_REPICK_TROLL);
		UNIT_ALL.push(UNIT_DRUNKEN_TROLL);
		UNIT_ALL.push(UNIT_TROLL_BRAWLER);
		UNIT_ALL.push(UNIT_TROLL_BREWMASTER);
		UNIT_ALL.push(UNIT_ISLAND_TROLL);
		UNIT_ALL.push(UNIT_HEAD_HUNTER);
		UNIT_ALL.push(UNIT_ARCHER_INTREPIDE);
		UNIT_ALL.push(UNIT_MIRROR_TROLL);
		UNIT_ALL.push(UNIT_MIRROR_TROLL_CLONE);
		UNIT_ALL.push(UNIT_NECROMANCER);
		UNIT_ALL.push(UNIT_SHAMAN);
		UNIT_ALL.push(UNIT_SHADOW_ARCHER);
		UNIT_ALL.push(UNIT_SHADOW_HUNTER);
		UNIT_ALL.push(UNIT_SPIRIT_WALKER);
		UNIT_ALL.push(UNIT_TRACKER_TOURNY_2011);
		UNIT_ALL.push(UNIT_TRICKSTER);
		UNIT_ALL.push(UNIT_TROLL_CONARTIST);
		UNIT_ALL.push(UNIT_TROLL_MAGE_ALT);
		UNIT_ALL.push(UNIT_TROLL_WITCH_DOCTOR);
		UNIT_ALL.push(UNIT_EA_TOURNY_2011);
		UNIT_ALL.push(UNIT_ALIGATOR_MAN);
		UNIT_ALL.push(UNIT_ANCIENT_HYDRA);
		UNIT_ALL.push(UNIT_DISCO_DUCK);
		UNIT_ALL.push(UNIT_LESSER_HYDRA);
		UNIT_ALL.push(UNIT_MAGENTA_FISH);
		UNIT_ALL.push(UNIT_MAMMOTH);
		UNIT_ALL.push(UNIT_ONE);
		UNIT_ALL.push(UNIT_RAPID_TURTLE);
		UNIT_ALL.push(UNIT_ADULT_ELK);
		UNIT_ALL.push(UNIT_ADULT_JUNGLE_BEAR);
		UNIT_ALL.push(UNIT_ADULT_JUNGLE_WOLF);
		UNIT_ALL.push(UNIT_ALPHA_HAWK);
		UNIT_ALL.push(UNIT_BRONZE_DRAGON);
		UNIT_ALL.push(UNIT_BRONZE_DRAGON_HATCHLING);
		UNIT_ALL.push(UNIT_BEAR_CUB);
		UNIT_ALL.push(UNIT_ELDER_PANTHER);
		UNIT_ALL.push(UNIT_ELK);
		UNIT_ALL.push(UNIT_ELK_ADOLESCENT);
		UNIT_ALL.push(UNIT_FAWN);
		UNIT_ALL.push(UNIT_FISH);
		UNIT_ALL.push(UNIT_FOREST_DRAGON);
		UNIT_ALL.push(UNIT_FOREST_DRAGON_HATCHLING);
		UNIT_ALL.push(UNIT_GREATER_BRONZE_DRAGON);
		UNIT_ALL.push(UNIT_GREATER_FOREST_DRAGON);
		UNIT_ALL.push(UNIT_GREATER_NETHER_DRAGON);
		UNIT_ALL.push(UNIT_GREATER_RED_DRAGON);
		UNIT_ALL.push(UNIT_GREEN_FISH);
		UNIT_ALL.push(UNIT_HAWK);
		UNIT_ALL.push(UNIT_HAWK_ADOLESCENT);
		UNIT_ALL.push(UNIT_HAWK_HATCHLING);
		UNIT_ALL.push(UNIT_JUNGLE_BEAR);
		UNIT_ALL.push(UNIT_JUNGLE_WOLF);
		UNIT_ALL.push(UNIT_MAMMOTH_BABY);
		UNIT_ALL.push(UNIT_NETHER_DRAGON_HATCHLING);
		UNIT_ALL.push(UNIT_PANTHER);
		UNIT_ALL.push(UNIT_RED_DRAGON_HATCHLING);
		UNIT_ALL.push(UNIT_SNAKE);
		UNIT_ALL.push(UNIT_WOLF_PUP);
		UNIT_ALL.push(UNIT_ARMORY);
		UNIT_ALL.push(UNIT_BUILDING_TREE);
		UNIT_ALL.push(UNIT_FIRE);
		UNIT_ALL.push(UNIT_DEFENSE_WARD);
		UNIT_ALL.push(UNIT_ENSNARE_TRAP);
		UNIT_ALL.push(UNIT_HATCHERY);
		UNIT_ALL.push(UNIT_MAGE_FIRE);
		UNIT_ALL.push(UNIT_MAGE_FIRE_SUMMONED);
		UNIT_ALL.push(UNIT_POT);
		UNIT_ALL.push(UNIT_MUD_HUT);
		UNIT_ALL.push(UNIT_OMNITOWER);
		UNIT_ALL.push(UNIT_SMOKE_HOUSE);
		UNIT_ALL.push(UNIT_SPIRIT_WARD);
		UNIT_ALL.push(UNIT_STORAGE_HUT);
		UNIT_ALL.push(UNIT_TANNERY);
		UNIT_ALL.push(UNIT_TELEPORTATION_BEACON);
		UNIT_ALL.push(UNIT_TENT);
		UNIT_ALL.push(UNIT_TROLL_BURROW);
		UNIT_ALL.push(UNIT_TROLL_HUT);
		UNIT_ALL.push(UNIT_TROLL_TOTEM);
		UNIT_ALL.push(UNIT_TROLL_TRANSPORT_SHIP);
		UNIT_ALL.push(UNIT_WITCH_DOCTORS_HIT);
		UNIT_ALL.push(UNIT_WORKSHOP);
		UNIT_ALL.push(UNIT_POWER_GENERATOR);
		UNIT_ALL.push(UNIT_BLUE_HERB_BUSH);
		UNIT_ALL.push(UNIT_HAISETSU_BUSH);
		UNIT_ALL.push(UNIT_HIDDEN_STASH);
		UNIT_ALL.push(UNIT_MUSHROOM_COLONY);
		UNIT_ALL.push(UNIT_ORANGE_HERB_BUSH);
		UNIT_ALL.push(UNIT_PURPLE_HERB_BUSH);
		UNIT_ALL.push(UNIT_SCOUTS_BUSH);
		UNIT_ALL.push(UNIT_THIEFS_BUSH);
		UNIT_ALL.push(UNIT_THISTLE_SHRUB);
		UNIT_ALL.push(UNIT_WATER_HERB_BUSH);
		UNIT_ALL.push(UNIT_YELLOW_HERB_BUSH);
		UNIT_ALL.push(UNIT_CRAFT_MASTER);
		UNIT_ALL.push(UNIT_OMINOUS_ALTAR);
		UNIT_ALL.push(UNIT_TRADE_SHIP_1);
		UNIT_ALL.push(UNIT_TRADE_SHIP_2);
		UNIT_ALL.push(UNIT_TRADE_SHIP_3);
		UNIT_ALL.push(UNIT_TRADE_SHIP_4);
		UNIT_ALL.push(UNIT_TRADE_SHIP_5);
		UNIT_ALL.push(UNIT_TRADE_SHIP_6);
		UNIT_ALL.push(UNIT_TROLL_MERCHANT);
		UNIT_ALL.push(UNIT_BLUR_IMAGE);
		UNIT_ALL.push(UNIT_BEE);
		UNIT_ALL.push(UNIT_BEE_HIVE);
		UNIT_ALL.push(UNIT_BEE_HIVE_SUMMONED);
		UNIT_ALL.push(UNIT_DISEASE_CLOUD);
		UNIT_ALL.push(UNIT_DUMMY);
		UNIT_ALL.push(UNIT_AMHS_DUMMY);
		UNIT_ALL.push(UNIT_UNUSED_DUMMY);
		UNIT_ALL.push(UNIT_LIVING_CLAY);
		UNIT_ALL.push(UNIT_LOCUST);
		UNIT_ALL.push(UNIT_LOCUST_ALT);
		UNIT_ALL.push(UNIT_LOCUST_DARK_NODE);
		UNIT_ALL.push(UNIT_LOCUST_FIRE_LORD);
		UNIT_ALL.push(UNIT_LOCUST_GHOST);
		UNIT_ALL.push(UNIT_LOCUST_INNER_FIRE);
		UNIT_ALL.push(UNIT_LOCUST_KA);
		UNIT_ALL.push(UNIT_LOCUST_LEZ);
		UNIT_ALL.push(UNIT_LOCUST_LIGHT_NODE);
		UNIT_ALL.push(UNIT_LOCUST_NEL);
		UNIT_ALL.push(UNIT_LOCUST_OPPOSING_PANTHER);
		UNIT_ALL.push(UNIT_LOCUST_POOP);
		UNIT_ALL.push(UNIT_LOCUST_SKELETON);
		UNIT_ALL.push(UNIT_LOCUST_WATER_LORD);
		UNIT_ALL.push(UNIT_MASTER_CASTER);
		UNIT_ALL.push(UNIT_TRADE_ZEPPELIN);
		UNIT_ALL.push(UNIT_UBER_HIVE);
		UNIT_ALL.push(UNIT_ROCK);
		UNIT_ALL.push(UNIT_CHICKEN);
		UNIT_ALL.push(UNIT_FARM);
		UNIT_ALL.push(UNIT_FOOTMAN);
		UNIT_ALL.push(UNIT_HERO_PICKER);
		UNIT_ALL.push(UNIT_LIVING_CLAY_UNUSED);
		UNIT_ALL.push(UNIT_MEAT);
		UNIT_ALL.push(UNIT_PEASANT);
		UNIT_ALL.push(UNIT_PEON);
		UNIT_ALL.push(UNIT_SMOKED_MEAT);
		UNIT_ALL.push(UNIT_SOUL_REFLECTION_1);
		UNIT_ALL.push(UNIT_SOUL_REFLECTION_2);
		UNIT_ALL.push(UNIT_SOUL_REFLECTION_3);
		UNIT_ALL.push(UNIT_TEST_CLOAK);
		UNIT_ALL.push(UNIT_ULTRA_FOOTMAN);
		SPELL_ALL.push(SPELL_PET_ATTACK);
		SPELL_ALL.push(SPELL_PET_BRING_ITEMS);
		SPELL_ALL.push(SPELL_PET_DROP_ITEMS);
		SPELL_ALL.push(SPELL_PET_FOLLOW);
		SPELL_ALL.push(SPELL_PET_GO_TO_HATCHERY);
		SPELL_ALL.push(SPELL_PET_RELEASE);
		SPELL_ALL.push(SPELL_PET_SCOUT);
		SPELL_ALL.push(SPELL_PET_SLEEP);
		SPELL_ALL.push(SPELL_PET_STAY);
		SPELL_ALL.push(SPELL_PET_TAME);
		SPELL_ALL.push(SPELL_SMOKE_MEAT);
		SPELL_ALL.push(SPELL_PACK_BUILDING);
		SPELL_ALL.push(SPELL_SELF_DESTRUCT);
		SPELL_ALL.push(SPELL_DISEASE);
		SPELL_ALL.push(SPELL_CURE_ALL_ITEM);
		SPELL_ALL.push(SPELL_SUPER_FORM_CAST);
		SPELL_ALL.push(SPELL_SONAR_COMPASS);
		SPELL_ALL.push(SPELL_SUPERSUB_COURAGE);
		SPELL_ALL.push(SPELL_SPEAR_CAST);
		SPELL_ALL.push(SPELL_IRON_SPEAR_CAST);
		SPELL_ALL.push(SPELL_STEEL_SPEAR_CAST);
		SPELL_ALL.push(SPELL_POISON_SPEAR_CAST);
		SPELL_ALL.push(SPELL_RPOISON_SPEAR_CAST);
		SPELL_ALL.push(SPELL_UPOISON_SPEAR_CAST);
		SPELL_ALL.push(SPELL_DARK_SPEAR_CAST);
		SPELL_ALL.push(SPELL_DARK_SPEAR);
		SPELL_ALL.push(SPELL_RPOISON_SPEAR);
		SPELL_ALL.push(SPELL_POISON_SPEAR);
		SPELL_ALL.push(SPELL_IRON_SPEAR);
		SPELL_ALL.push(SPELL_UPOISON_SPEAR);
		SPELL_ALL.push(SPELL_STEEL_SPEAR);
		SPELL_ALL.push(SPELL_SPEAR);
		SPELL_ALL.push(SPELL_BATTLE_SPEAR_CAST);
		SPELL_ALL.push(SPELL_DYSENTERY);
		ABILITY_ALL.push(ABILITY_LOCUST);
		ABILITY_ALL.push(ABILITY_ASSASINATE);
		ABILITY_ALL.push(ABILITY_MEU_DUMMY);
		ABILITY_ALL.push(ABILITY_MEU_OMNIGATHERER);
		ABILITY_ALL.push(ABILITY_MEU_DEMENTIA_MASTER);
		ABILITY_ALL.push(ABILITY_MEU_SAGE);
		ABILITY_ALL.push(ABILITY_MEU_SPY);
		ABILITY_ALL.push(ABILITY_MEU_ASSASSIN);
		ABILITY_ALL.push(ABILITY_INVULNERABLE);
		BUFF_ALL.push(BUFF_GOK);
		BUFF_ALL.push(BUFF_SPRINTING);
		BUFF_ALL.push(BUFF_SPEAR_INCOMING);
		BUFF_ALL.push(BUFF_DYSENTERY);
		ITEM_ALL.push(ITEM_ANCIENT_BOW);
		ITEM_ALL.push(ITEM_BOW_BLOOD_GOD);
		ITEM_ALL.push(ITEM_CLAY_EXPLOSION);
		ITEM_ALL.push(ITEM_DD_PINION_FIRE);
		ITEM_ALL.push(ITEM_DD_PINION_PAIN);
		ITEM_ALL.push(ITEM_DD_PINION_SHADOW);
		ITEM_ALL.push(ITEM_DUSTY_OLD_BOW);
		ITEM_ALL.push(ITEM_GLOWING_ANCIENT_BOW);
		ITEM_ALL.push(ITEM_HORN_MAMMOTH);
		ITEM_ALL.push(ITEM_HYDRA_CLAWS);
		ITEM_ALL.push(ITEM_HYDRA_SCALE);
		ITEM_ALL.push(ITEM_HYDRAAC_FINS);
		ITEM_ALL.push(ITEM_MED_BEAST_MASTER);
		ITEM_ALL.push(ITEM_MED_PRIEST);
		ITEM_ALL.push(ITEM_MED_SCOUT);
		ITEM_ALL.push(ITEM_MED_GATHERER);
		ITEM_ALL.push(ITEM_MED_MAGE);
		ITEM_ALL.push(ITEM_MED_THIEF);
		ITEM_ALL.push(ITEM_MED_HUNTER);
		ITEM_ALL.push(ITEM_MED_HEAD_HUNER);
		ITEM_ALL.push(ITEM_THIEF_MED);
		ITEM_ALL.push(ITEM_MEDALLION_COURAGE);
		ITEM_ALL.push(ITEM_BLUE_HERB);
		ITEM_ALL.push(ITEM_BONE);
		ITEM_ALL.push(ITEM_BUTSU);
		ITEM_ALL.push(ITEM_CLAY_BALL);
		ITEM_ALL.push(ITEM_ELK_HIDE);
		ITEM_ALL.push(ITEM_FLINT);
		ITEM_ALL.push(ITEM_HARDEN_SCALES);
		ITEM_ALL.push(ITEM_HAWK_EGG);
		ITEM_ALL.push(ITEM_JUNGLE_WOLF_HIDE);
		ITEM_ALL.push(ITEM_JUNGLE_BEAR_HIDE);
		ITEM_ALL.push(ITEM_MAGIC);
		ITEM_ALL.push(ITEM_MANA_CRYSTAL);
		ITEM_ALL.push(ITEM_MUSHROOM);
		ITEM_ALL.push(ITEM_ORANGE_HERB);
		ITEM_ALL.push(ITEM_PURPLE_HERB);
		ITEM_ALL.push(ITEM_RIVER_STEM);
		ITEM_ALL.push(ITEM_RIVER_ROOT);
		ITEM_ALL.push(ITEM_STICK);
		ITEM_ALL.push(ITEM_STONE);
		ITEM_ALL.push(ITEM_TINDER);
		ITEM_ALL.push(ITEM_YELLOW_HERB);
		ITEM_ALL.push(ITEM_ACID_BOMB);
		ITEM_ALL.push(ITEM_ANTI_MAGIC_POTION);
		ITEM_ALL.push(ITEM_ANABOLIC_POTION);
		ITEM_ALL.push(ITEM_CURE_ALL);
		ITEM_ALL.push(ITEM_DISEASE_POTION);
		ITEM_ALL.push(ITEM_DRUNKS_POTION);
		ITEM_ALL.push(ITEM_ELEMENTAL_SHIELD_POTION);
		ITEM_ALL.push(ITEM_ESSENCE_BEES);
		ITEM_ALL.push(ITEM_FERVER_POTION);
		ITEM_ALL.push(ITEM_HEALING_POTION_I);
		ITEM_ALL.push(ITEM_HEALING_POTION_II);
		ITEM_ALL.push(ITEM_HEALING_POTION_III);
		ITEM_ALL.push(ITEM_HEALING_POTION_IV);
		ITEM_ALL.push(ITEM_MANA_POTION_I);
		ITEM_ALL.push(ITEM_MANA_POTION_II);
		ITEM_ALL.push(ITEM_MANA_POTION_III);
		ITEM_ALL.push(ITEM_MANA_POTION_IV);
		ITEM_ALL.push(ITEM_NAPALM);
		ITEM_ALL.push(ITEM_NETHER_POTION);
		ITEM_ALL.push(ITEM_POTION_TWIN_ISLANDS);
		ITEM_ALL.push(ITEM_OMNICURE);
		ITEM_ALL.push(ITEM_DARK_ROCK);
		ITEM_ALL.push(ITEM_GEM_OF_KNOWLEDGE);
		ITEM_ALL.push(ITEM_SPIRIT_WATER);
		ITEM_ALL.push(ITEM_SPIRIT_WIND);
		ITEM_ALL.push(ITEM_ACORN);
		ITEM_ALL.push(ITEM_COOKED_MEAT);
		ITEM_ALL.push(ITEM_DISEASED_MEAT);
		ITEM_ALL.push(ITEM_MAGIC_ACORN);
		ITEM_ALL.push(ITEM_SMOKED_MEAT);
		ITEM_ALL.push(ITEM_ANABOLIC_BOOTS);
		ITEM_ALL.push(ITEM_BATTLE_ARMOR);
		ITEM_ALL.push(ITEM_BATTLE_AXE);
		ITEM_ALL.push(ITEM_BATTLE_GLOVES);
		ITEM_ALL.push(ITEM_BATTLE_SHIELD);
		ITEM_ALL.push(ITEM_BATTLE_SUIT);
		ITEM_ALL.push(ITEM_BEE_HIVE);
		ITEM_ALL.push(ITEM_BLOW_GUN);
		ITEM_ALL.push(ITEM_CAMOUFLAGE_COAT);
		ITEM_ALL.push(ITEM_DARK_THISTLES);
		ITEM_ALL.push(ITEM_EMP);
		ITEM_ALL.push(ITEM_FIRE_BOMB);
		ITEM_ALL.push(ITEM_NETS);
		ITEM_ALL.push(ITEM_SMOKE_BOMB);
		ITEM_ALL.push(ITEM_SONAR_COMPASS);
		ITEM_ALL.push(ITEM_THISTLES);
		ITEM_ALL.push(ITEM_CLOAK_OF_FLAMES);
		ITEM_ALL.push(ITEM_CLOAK_OF_FROST);
		ITEM_ALL.push(ITEM_CLOAK_OF_HEALING);
		ITEM_ALL.push(ITEM_LIVING_CLAY);
		ITEM_ALL.push(ITEM_MAGIC_SEED);
		ITEM_ALL.push(ITEM_POISON);
		ITEM_ALL.push(ITEM_POISON_SPEAR);
		ITEM_ALL.push(ITEM_REFINED_POISON_SPEAR);
		ITEM_ALL.push(ITEM_SCROLL_SWIFTNESS);
		ITEM_ALL.push(ITEM_SCROLL_CYCLONE);
		ITEM_ALL.push(ITEM_SCROLL_ENTANGLING_ROOTS);
		ITEM_ALL.push(ITEM_SCROLL_FIREBALL);
		ITEM_ALL.push(ITEM_SCROLL_LIVING_DEAD);
		ITEM_ALL.push(ITEM_SCROLL_STONE_ARMOR);
		ITEM_ALL.push(ITEM_SCROLL_TSUNAMI);
		ITEM_ALL.push(ITEM_ULTRA_POISON);
		ITEM_ALL.push(ITEM_ULTRA_POISON_SPEAR);
		ITEM_ALL.push(ITEM_BONE_BOOTS);
		ITEM_ALL.push(ITEM_BONE_COAT);
		ITEM_ALL.push(ITEM_BONE_GLOVES);
		ITEM_ALL.push(ITEM_BONE_SHIELD);
		ITEM_ALL.push(ITEM_DARK_SPEAR);
		ITEM_ALL.push(ITEM_FLINT_AXE);
		ITEM_ALL.push(ITEM_IRON_AXE);
		ITEM_ALL.push(ITEM_IRON_BOOTS);
		ITEM_ALL.push(ITEM_IRON_COAT);
		ITEM_ALL.push(ITEM_IRON_GLOVES);
		ITEM_ALL.push(ITEM_IRON_INGOT);
		ITEM_ALL.push(ITEM_IRON_SHIELD);
		ITEM_ALL.push(ITEM_IRON_SPEAR);
		ITEM_ALL.push(ITEM_MAGE_MASHER);
		ITEM_ALL.push(ITEM_SHIELD);
		ITEM_ALL.push(ITEM_SPEAR);
		ITEM_ALL.push(ITEM_STEEL_AXE);
		ITEM_ALL.push(ITEM_STEEL_BOOTS);
		ITEM_ALL.push(ITEM_STEEL_COAT);
		ITEM_ALL.push(ITEM_STEEL_GLOVES);
		ITEM_ALL.push(ITEM_STEEL_INGOT);
		ITEM_ALL.push(ITEM_STEEL_SHIELD);
		ITEM_ALL.push(ITEM_STEEL_SPEAR);
		ITEM_ALL.push(ITEM_STONE_AXE);
		ITEM_ALL.push(ITEM_LOADED_THISTLES);
		ITEM_ALL.push(ITEM_LOADED_DARK_THISTLES);
		ITEM_ALL.push(ITEM_LOADED_BONE);
		ITEM_ALL.push(ITEM_BEAR_SKIN_BOOTS);
		ITEM_ALL.push(ITEM_BEAR_SKIN_COAT);
		ITEM_ALL.push(ITEM_BEAR_SKIN_GLOVES);
		ITEM_ALL.push(ITEM_ELK_SKIN_BOOTS);
		ITEM_ALL.push(ITEM_ELK_SKIN_COAT);
		ITEM_ALL.push(ITEM_ELK_SKIN_GLOVES);
		ITEM_ALL.push(ITEM_WOLF_SKIN_BOOTS);
		ITEM_ALL.push(ITEM_WOLF_SKIN_COAT);
		ITEM_ALL.push(ITEM_WOLF_SKIN_GLOVES);
		ITEM_ALL.push(ITEM_ARMORY_KIT);
		ITEM_ALL.push(ITEM_DEFENSIVE_WARD_KIT);
		ITEM_ALL.push(ITEM_ENSNARE_TRAP_KIT);
		ITEM_ALL.push(ITEM_FIRE_KIT);
		ITEM_ALL.push(ITEM_HATCHERY_KIT);
		ITEM_ALL.push(ITEM_MAGE_FIRE_KIT);
		ITEM_ALL.push(ITEM_MUD_HUT_KIT);
		ITEM_ALL.push(ITEM_OMNIDEFENDER_KIT);
		ITEM_ALL.push(ITEM_POT_KIT);
		ITEM_ALL.push(ITEM_SMOKE_HOUSE_KIT);
		ITEM_ALL.push(ITEM_SPIRIT_WARD_KIT);
		ITEM_ALL.push(ITEM_STORAGE_HUT_KIT);
		ITEM_ALL.push(ITEM_TANNERY_KIT);
		ITEM_ALL.push(ITEM_TELEPORT_BEACON_KIT);
		ITEM_ALL.push(ITEM_TENT_KIT);
		ITEM_ALL.push(ITEM_TRANSPORT_SHIP_KIT);
		ITEM_ALL.push(ITEM_TROLL_BURROW_KIT);
		ITEM_ALL.push(ITEM_TROLL_HUT_KIT);
		ITEM_ALL.push(ITEM_WITCH_DOCTORS_HUT_KIT);
		ITEM_ALL.push(ITEM_WORKSHOP_KIT);
		ITEM_ALL.push(ITEM_BATTLE_SUIT_SPELLS);
		ITEM_ALL.push(ITEM_BATTLE_SUIT_SPELLS_TWO);
		ITEM_ALL.push(ITEM_CHEESE);
		ITEM_ALL.push(ITEM_HEAD_HUNTER_STEEL_SPEAR);
		ITEM_ALL.push(ITEM_HERB_RECIPE_1);
		ITEM_ALL.push(ITEM_HERB_RECIPE_2);
		ITEM_ALL.push(ITEM_HERB_RECIPE_3);
		ITEM_ALL.push(ITEM_HERB_RECIPE_4);
		ITEM_ALL.push(ITEM_HERB_RECIPE_5);
		ITEM_ALL.push(ITEM_HERB_RECIPE_6);
		ITEM_ALL.push(ITEM_HERB_RECIPE_7);
		ITEM_ALL.push(ITEM_HERB_RECIPE_8);
		ITEM_ALL.push(ITEM_HERB_RECIPE_9);
		ITEM_ALL.push(ITEM_HERB_RECIPE_10);
		ITEM_ALL.push(ITEM_HERB_RECIPE_11);
		ITEM_ALL.push(ITEM_HYDRA_HINT);
		ITEM_ALL.push(ITEM_OPPOSING_NIGHT_ITEM);
		ITEM_ALL.push(ITEM_PANTHER_HIDE);
		ITEM_ALL.push(ITEM_SECRET_HINT);
		ITEM_ALL.push(ITEM_TOME_LOSS);
		ITEM_ALL.push(ITEM_REPAIR_HAMMER);
		ITEM_ALL.push(ITEM_NULL);
		ITEM_ALL.push(ITEM_CANDY_CANE);
		DEST_ALL.push(DEST_FALSE_TREE);
		DEST_ALL.push(DEST_RUINS_TREE);
		DEST_ALL.push(DEST_RUINS_TREE_CANOPY);
		DEST_ALL.push(DEST_RUINS_TREE_ITEM);
		DEST_ALL.push(DEST_SUPER_TREE);
		DEST_ALL.push(DEST_SUPER_TREE_CANOPY);

	}

}
