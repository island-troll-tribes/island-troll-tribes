package TrackerBeacon
import HashMap
import GameTimer
import RegisterEvents
import UnitExtensions
import SimError
import PlayerExtensions
import PingMinimap


let SPELL_BEACON_CAST = 'A05M'
let SPELL_BEACON_QUERY = 'A05N'
let BEACON_DURATION = 5 * 60


class Beacon
    player target
    real timestamp

    construct(player target)
        this.target = target
        this.timestamp = getElapsedGameTime()

let beacons = new HashMap<player, Beacon>()

function castBeacon()
    let target = GetSpellTargetUnit()
    let owner = GetSpellAbilityUnit().getOwner()

    if not target.isTroll()
        simError(owner, "Can't beacon that unit")
        return

    if beacons.has(owner)
        beacons.remove(owner)

    let beacon = new Beacon(target.getOwner())
    beacons.put(owner, beacon)

function queryBeacon()
    let owner = GetSpellAbilityUnit().getOwner()

    if not beacons.has(owner)
        simError(owner, "No active beacon")
        return

    let beacon = beacons.get(owner)
    if beacon.timestamp + BEACON_DURATION < getElapsedGameTime()
        simError(owner, "No active beacon")
        destroy beacon
        beacons.remove(owner)
        return

    pingMinimapForForce(owner.getAllies(), beacon.target.getTroll().getPos(), color(255, 0, 0))

init
    registerSpellEffectEvent(SPELL_BEACON_CAST, function castBeacon)
    registerSpellEffectEvent(SPELL_BEACON_QUERY, function queryBeacon)
