package DiseasePotion

import ID
import ClosureEvents
import HashMap
import ClosureTimers
import ChatCommands
import GameConfig
import ClosureForGroups

public let DISEASE_HEALING_REDUCTION_FACTOR = 0.4
let DURATION = 15.
let EFFECT_PATH = "Abilities\\Spells\\Undead\\PlagueCloud\\PlagueCloudCaster.mdl"
HashMap<unit, DiseaseInstance> diseaseInstances = new HashMap<unit,DiseaseInstance>()

public function isUnitDiseased(unit u) returns bool
    return diseaseInstances.has(u)

function onCastDisease()
    let caster = GetSpellAbilityUnit()
    let target = GetSpellTargetUnit()
    applyDisease(target)

function applyDisease(unit target)
    //Remove any old timers
    if diseaseInstances.has(target)
        destroy diseaseInstances.getAndRemove(target)

    let diseaseTimer = CreateTimer()
    let fx = addEffect(EFFECT_PATH, target, "origin")
    diseaseInstances.put(target, new DiseaseInstance(diseaseTimer, fx))
    diseaseTimer.doAfter(15) ->
        if diseaseInstances.has(target)
            destroy diseaseInstances.getAndRemove(target)

class DiseaseInstance
    timer t
    effect fx
    construct(timer t, effect fx)
        this.t = t
        this.fx = fx

    ondestroy
        t.destr()
        fx.destr()
init
    registerSpellEffectEvent(SPELL_DISEASE, () -> onCastDisease())
    registerCommandAll("disease") (triggerPlayer, args) ->
        if (gameConfig.isTestModeEnabled())
            printTimedToPlayer("Added disease potion effect to any selected heroes", 5., triggerPlayer)
            forUnitsSelected(triggerPlayer) u ->
                if (u.isType(UNIT_TYPE_HERO))
                    applyDisease(u)
        else
            printTimedToPlayer("Requires test mode!", 5., triggerPlayer)
