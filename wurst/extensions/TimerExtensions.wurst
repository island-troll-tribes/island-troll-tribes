package TimerExtensions
import TimerUtils

public abstract class CallbackSingle
	private timer t
	abstract function call()

	function start(timer timerToStart, real time)
		t = timerToStart
			..setData(this castTo int)
			..start(time, () -> staticCallback())


	private static function staticCallback()
		timer t = GetExpiredTimer()
		thistype cb = t.getData() castTo thistype
		cb.call()
		destroy cb

	ondestroy
		t.release()

public function timer.doAfter(real timeToWait, CallbackSingle cb) returns CallbackSingle
	cb.start(this, timeToWait)
	return cb
