package UnitEntity
import HashMap
import Lodash
import RegisterEvents
import UnitIndexer
import ClosureTimers


public function randomAngle() returns angle
    return angle(GetRandomReal(0, PI2))


public abstract class UnitEntity
    static thistype array instances
    static let factories = new HashMap<int, Function<unit, thistype>>()

    static function initialize()
        registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH) ->
            let entity = findForUnit(GetDyingUnit())
            if entity != null
                entity.onDeath()

        onUnitIndex() ->
            let indexedUnit = getIndexedUnit()
            nullTimer() ->
                if findForUnit(indexedUnit) == null
                    let unitTypeId = indexedUnit.getTypeId()
                    if factories.has(unitTypeId)
                        let factory = factories.get(unitTypeId)
                        factory.call(indexedUnit)

    static function register(int unitTypeId, Function<unit, thistype> factory)
        factories.put(unitTypeId, factory)

    static function findForUnit(unit hostile) returns thistype
        return instances[hostile.getIndex()]

    private unit theUnit = null

    construct(unit whichUnit)
        theUnit = whichUnit
        postCreate()

    construct(player whichPlayer, vec2 pos, angle facing)
        theUnit = createUnit(whichPlayer, getTypeId(), pos, facing)
        postCreate()

    construct(player whichPlayer, vec2 pos)
        theUnit = createUnit(whichPlayer, getTypeId(), pos, randomAngle())
        postCreate()

    function postCreate()
        instances[theUnit.getIndex()] = this

    function getUnit() returns unit
        return theUnit

    function getPos() returns vec2
        return theUnit.getPos()

    abstract function getTypeId() returns int

    function removeUnit()
        if theUnit != null
            theUnit.remove()
            theUnit = null

    function onDeath()
        postDeath()

    function postDeath()
        nullTimer(-> destroy this)

    ondestroy
        removeUnit()

init
    UnitEntity.initialize()
