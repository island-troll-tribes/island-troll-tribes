package DiseasePotion

import ID
import ClosureEvents
import HashMap
import ClosureTimers
import ClosureForGroups
import HealingSystem
import PotionsDefinition
import Assets
import ChannelAbilityPreset
import ToolTipsUtils

public constant DISEASE_HEALING_REDUCTION_FACTOR = 0.3
constant DURATION = 25.
constant DAMAGE_TICK_INTERVAL = 0.5
constant DAMAGE_PER_SECOND = 3
constant AOE = 200.
constant EFFECT_PATH = Abilities.plagueCloudCaster
HashMap<unit, DiseaseInstance> diseaseInstances = new HashMap<unit,DiseaseInstance>()

constant ICON = ICON_PATH.format("PotionGreen")
constant MODEL = "Models\\Items\\PotionGreen.mdl"

constant TT = "Biological warfare! Throw at an enemy to give him and all units in a 200 radius of them a disease. Dealing "+
              "{0} damage per second. Reduces healing received from items and potions by {1}. Last {2} seconds."
              .format(DAMAGE_PER_SECOND.toReal().toToolTipRed(), DISEASE_HEALING_REDUCTION_FACTOR.toToolTipOrange(), DURATION.toToolTipLightBlue())


public function isUnitDiseased(unit u) returns bool
    return diseaseInstances.has(u)

function onCastDisease()
    let caster = GetSpellAbilityUnit()
    let target = GetSpellTargetUnit()
    forUnitsInRange(target.getPos(), AOE) u ->
        if isValidTarget(caster.getOwner(), u)
            applyDisease(caster, u)

function isValidTarget(player attacker, unit u) returns bool
    return u.getOwner().isEnemyOf(attacker)
    and not u.isType(UNIT_TYPE_STRUCTURE)
    and not u.isType(UNIT_TYPE_MECHANICAL)
    and u.isAlive()

function applyDisease(unit caster, unit target)
    //Remove any old timers
    if diseaseInstances.has(target)
        destroy diseaseInstances.getAndRemove(target)

    diseaseInstances.put(target, new DiseaseInstance(caster, target))

function onHealed()
    let instance = getHealingInstance()
    if isUnitDiseased(instance.getTarget()) and instance.healingType == HealingType.ITEM
        instance.scaleMultiplier(1 - DISEASE_HEALING_REDUCTION_FACTOR)

class DiseaseInstance
    unit owner
    unit target
    timer t
    effect fx

    function tickDamage()
        owner.damageTarget(target, DAMAGE_PER_SECOND * DAMAGE_TICK_INTERVAL, ATTACK_TYPE_NORMAL)

    construct(unit owner, unit target)
        this.owner = owner
        this.target = target
        this.t = CreateTimer()
        this.fx = addEffect(EFFECT_PATH, target, "origin")

        t.doPeriodicallyTimed(DAMAGE_TICK_INTERVAL, DURATION) cb ->
            this.tickDamage()
            if cb.isLast() and diseaseInstances.has(target)
                destroy diseaseInstances.getAndRemove(target)

    ondestroy
        t.destr()
        fx.destr()

@compiletime function createDiseasePotion()
    new PotionDefinition(ITEM_DISEASE_POTION, ICON, MODEL, "Disease Potion", "D", TT, 40, commaList(SPELL_DISEASE), 0.70, commaList(SPELL_DISEASE), 120)


init
    registerSpellEffectEvent(SPELL_DISEASE) ->
        onCastDisease()

    onUnitHealed() ->
        onHealed()
