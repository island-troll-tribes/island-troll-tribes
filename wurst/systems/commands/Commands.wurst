package Commands

// Standard library imports:
import HashMap
import LinkedList

// Local imports:
import ChatCommands
import ChatUtils
import ColorUtils
import Game
import GameMode
import PingMinimap
import PlayerExtensions
import StringExtensions
import TribeBoard
import Tribe
import UnitExtensions

class PlayerAllianceSetting
    string name
    alliancetype setting
    bool invertSetting
    HashMap<player, bool> values

    construct(string name, alliancetype setting)
        this.name = name
        this.setting = setting
        this.values = new HashMap<player, bool>()
        this.invertSetting = false

    construct(string name, alliancetype setting, bool invertSetting)
        this.name = name
        this.setting = setting
        this.values = new HashMap<player, bool>()
        this.invertSetting = invertSetting

let settings = new HashMap<string, PlayerAllianceSetting>()

function handlePlayerAllianceSettingToggle(player triggerPlayer, LinkedList<string> args)
    let setting = settings.get(args.get(0))
    let newValue = args.size() > 1
        ? args.get(1).isConfirmation()
        : not setting.values.get(triggerPlayer)
    let msg = "{0} has turned {1} {2}".format(
        triggerPlayer.getNameColored(),
        setting.name.color(SPECIAL_COLOR),
        newValue.toOnOff().color(ENERGY_COLOR)
    )
    DisplayTimedTextToForce(triggerPlayer.getAllies(), 5, msg)
    setting.values.put(triggerPlayer, newValue)
    triggerPlayer.getTribe().getMembers().forEach() member ->
        if member != triggerPlayer
            triggerPlayer.setPlayerAlliance(
                member,
                setting.setting,
                setting.invertSetting ? not newValue : newValue
            )

    if setting.setting == ALLIANCE_SHARED_ADVANCED_CONTROL
        TribeBoard.findForPlayer(triggerPlayer).fixDisplay()

init
    settings
        ..put("ac", new PlayerAllianceSetting("advanced control", ALLIANCE_SHARED_ADVANCED_CONTROL))
        ..put("sc", new PlayerAllianceSetting("share control", ALLIANCE_SHARED_CONTROL))
        ..put("p", new PlayerAllianceSetting("private mode", ALLIANCE_SHARED_VISION, true))

    registerCommandAll("clear") (triggerPlayer, args) ->
        if localPlayer == triggerPlayer
            ClearTextMessages()

    registerCommandAll("c") (triggerPlayer, args) ->
        let zoom = args.get(1).toReal()
        let msg = "Current zoom is {0} (default 0)".format(zoom.toInt().toString().color(ENERGY_COLOR))
        triggerPlayer.setZoom(zoom)
        printTimedToPlayer(msg, 5, triggerPlayer)

    registerCommandAll("rn") (triggerPlayer, args) ->
        for tribe in Tribe.getTribes()
            let names = tribe
                .getMembers()
                .map(member -> member.getNameColored())
                .joinBy(", ")

            printTimedToPlayer(
                tribe.getName().color(GENERAL_COLOR) + ": " + names,
                10,
                triggerPlayer
            )

    registerCommandAll("recipes") (triggerPlayer, args) ->
        pingMinimapForPlayer(
            triggerPlayer,
            gg_rct_vision.getCenter(),
            5
        )
        triggerPlayer.panCameraTo(gg_rct_vision.getCenter())
        printTimedToPlayer(
            compiletime(
                asList(
                    "The recipes are here.",
                    "Select a totem next to a unit to view recipes for it."
                ).joinBy("\n")
            ),
            5,
            triggerPlayer
        )

    registerCommandAll("obs") (triggerPlayer, args) ->
        printTimedToPlayer(
            "You are now an observer.".color(GENERAL_COLOR),
            10,
            triggerPlayer
        )
        triggerPlayer.makeObserver()

    registerCommandAll("obs-new") (triggerPlayer, args) ->
        printTimedToPlayer(
            "You are now an observer.".color(GENERAL_COLOR),
            10,
            triggerPlayer
        )
        triggerPlayer.makeObserverNew()

    GameMode.onModeSelectionFinish() ->
        deregisterCommandAll("obs")
        deregisterCommandAll("obs-new")

    registerGameStartEvent() ->
        registerCommandAll("ac", (triggerPlayer, args) -> handlePlayerAllianceSettingToggle(triggerPlayer, args))
        registerCommandAll("sc", (triggerPlayer, args) -> handlePlayerAllianceSettingToggle(triggerPlayer, args))
        registerCommandAll("p", (triggerPlayer, args) -> handlePlayerAllianceSettingToggle(triggerPlayer, args))

        registerCommandAll("ms") (triggerPlayer, args) ->
            let units = CreateGroup()..enumUnitsSelected(triggerPlayer, null)
            if units.isEmpty()
                let hero = triggerPlayer.getTroll()
                if hero.isAlive()
                    let msg = "{0} the {1} movement speed is {2}".format(hero.getProperName().color(HIGHLIGHT_COLOR), hero.getName().color(SPECIAL_COLOR), hero.getMoveSpeed().toString().color(HIGHLIGHT_COLOR))
                    printTimedToPlayer(msg, 5, triggerPlayer)
            else
                for u from units
                    if u.isTroll()
                        let msg = "{0} the {1} movement speed is {2}".format(u.getProperName().color(HIGHLIGHT_COLOR), u.getName().color(SPECIAL_COLOR), u.getMoveSpeed().toString().color(HIGHLIGHT_COLOR))
                        printTimedToPlayer(msg, 5, triggerPlayer)
            units.destr()

        registerCommandAll("cc") (triggerPlayer, args) ->
            let id = args.get(1).toInt() mod 12
            let msg = "Adjusted player color to {0}Player {1}|r".format(id.toPlayerColor().toColor().toColorString(), (id + 1).toString())
            printTimedToPlayer(msg, 5, triggerPlayer)
            triggerPlayer.setColor(ConvertPlayerColor(id), true)

        registerCommandAll("crafting") (triggerPlayer, args) ->
            let msg = (
                "Pick up the materials in the right order on the first go, they will be transmuted into the item you want to craft.\n"+
                "Crafting recipes are displayed on the ward bottom side of the map, you have to select the ward, type -recipes if you can't find them.\n"+
                "Building are crafted by your troll or the master crafter, gears & weapons are crafted by the building.\n"+
                "Example 1".color(HIGHLIGHT_COLOR) + ": recipe for camp fire kit is tinder flint stick, which you have to put a tinder in your first inventory slot, flint in the second & stick in the third\n"+
                "Example 2".color(HIGHLIGHT_COLOR) + ": recipe for iron ingot is stone flint in armory, stone in slot 1 & flint in slot 2 of the armory\n"+
                "Example 3".color(HIGHLIGHT_COLOR) + ": recipe for iron axe is bone/stick iron ingot iron ingot in armory, so put either stick or bone in slot 1, iron ingot in slot 2 & 3 of the armory\n"+
                "You can also use quickmake skill to craft faster in the building, read the tooltips in building for more information.\n"+
                "Type -clear to clear off those hints."
            )
            printTimedToPlayer(msg, 30, triggerPlayer)
