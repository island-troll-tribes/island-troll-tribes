package Tannering

import LinkedList
import ID
import Lodash
import HashMap
import UnitExtensions

constant let tanneryRecipeList = new HashMap<int, Pair<int, LinkedList<int>>>()
..put(SPELL_QM_ELK_SKIN_BOOTS          , new Pair(ITEM_ELK_SKIN_BOOTS   , asList(ITEM_ELK_HIDE         , ITEM_ELK_HIDE                               )))
..put(SPELL_QM_ELK_SKIN_GLOVES         , new Pair(ITEM_ELK_SKIN_GLOVES  , asList(ITEM_ELK_HIDE         , ITEM_ELK_HIDE                               )))
..put(SPELL_QM_ELK_SKIN_COAT           , new Pair(ITEM_ELK_SKIN_COAT    , asList(ITEM_ELK_HIDE         , ITEM_ELK_HIDE         , ITEM_ELK_HIDE       )))
..put(SPELL_QM_JUNGLE_WOLF_SKIN_BOOTS  , new Pair(ITEM_WOLF_SKIN_BOOTS  , asList(ITEM_JUNGLE_WOLF_HIDE , ITEM_JUNGLE_WOLF_HIDE                       )))
..put(SPELL_QM_JUNGLE_WOLF_SKIN_GLOVES , new Pair(ITEM_WOLF_SKIN_GLOVES , asList(ITEM_JUNGLE_WOLF_HIDE , ITEM_JUNGLE_WOLF_HIDE                       )))
..put(SPELL_QM_JUNGLE_WOLF_SKIN_COAT   , new Pair(ITEM_WOLF_SKIN_COAT   , asList(ITEM_JUNGLE_WOLF_HIDE , ITEM_JUNGLE_WOLF_HIDE, ITEM_JUNGLE_WOLF_HIDE)))
..put(SPELL_QM_JUNGLE_BEAR_SKIN_BOOTS  , new Pair(ITEM_BEAR_SKIN_BOOTS  , asList(ITEM_JUNGLE_BEAR_HIDE , ITEM_JUNGLE_BEAR_HIDE                       )))
..put(SPELL_QM_JUNGLE_BEAR_SKIN_GLOVES , new Pair(ITEM_BEAR_SKIN_GLOVES , asList(ITEM_JUNGLE_BEAR_HIDE , ITEM_JUNGLE_BEAR_HIDE                       )))
..put(SPELL_QM_JUNGLE_BEAR_SKIN_COAT   , new Pair(ITEM_BEAR_SKIN_COAT   , asList(ITEM_JUNGLE_BEAR_HIDE , ITEM_JUNGLE_BEAR_HIDE, ITEM_JUNGLE_BEAR_HIDE)))


public function tan(unit tannery, int quickMakeSpellId)
    let recipe = tanneryRecipeList.get(quickMakeSpellId).b
    let inventory = tannery.getInventory().take(recipe.size())
    let itemToAdd = tanneryRecipeList.get(quickMakeSpellId).a

    if inventory.map(elem -> elem.getTypeId()).equals(recipe)
        inventory.forEach(elem -> elem.remove())
        tannery.addItemById(itemToAdd)
