package ReplenishEnergy

// Standard library imports:
import Assets
import BuffObjEditing
import ChannelAbilityPreset

// Third-party imports:
import Lodash

// Local imports:
import ColorUtils
import LocalObjectIDs
import ToolTipsUtils

let BUFF_ID = compiletime(BUFF_ID_GEN.next())
let BUFF_ORIGINAL_ID = 'Blrl'

let AOE = 800.
let MANA_REGEN = 0.33
let TOOLTIP_NORM = "Replenish Energy"
let TOOLTIP_EXTENDED = "The Master Healer emanates a refreshing aura to himself and his allies, "+
                        "granting {0} energy regeneration per seconds.".format(MANA_REGEN.toString().color(COLOR_LIGHT_BLUE))

let TARGET_ALLOWED = commaList(
    TargetsAllowed.hero,
    TargetsAllowed.friend,
    TargetsAllowed.self
)

@compiletime function createBuff() returns BuffDefinition
    return new BuffDefinition(BUFF_ID, BUFF_ORIGINAL_ID)
        ..setIcon(Icons.bTNTranquility)
        ..setTooltipNormal(1, TOOLTIP_NORM)
        ..setTooltipNormalExtended(1, "This unit is gaining energy from a nearby Master Healer.")

function createReplenishEnergy(int abilId) returns AbilityDefinitionArchMageBrillianceAura
    return new AbilityDefinitionArchMageBrillianceAura(abilId)
        ..setName(TOOLTIP_NORM)
        ..presetTooltipNormal(lvl -> makeToolTipNormAura(TOOLTIP_NORM))
        ..presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)
        ..setIconNormal(Icons.pASBTNRegenerate)
        ..setIconResearch(Icons.pASBTNRegenerate)
        ..setBuffs(1, toRawCode(BUFF_ID))
        ..setCheckDependencies(false)
        ..setHeroAbility(false)
        ..setAreaofEffect(1, AOE)
        ..presetManaRegenerationIncrease(lvl -> MANA_REGEN)
        ..setTargetsAllowed(1, TARGET_ALLOWED)

@compiletime function createReplenishEnergy()
    createReplenishEnergy(ABILITY_REPLENISH_ENERGY)
        ..setButtonPositionNormalX(2)
        ..setButtonPositionNormalY(1)

    createReplenishEnergy(ABILITY_SAGE_REPLENISH_ENERGY)
        ..setButtonPositionNormalX(0)
        ..setButtonPositionNormalY(2)
