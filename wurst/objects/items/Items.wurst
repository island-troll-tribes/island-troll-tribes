package Items

import ItemObjEditing
import ChannelAbilityPreset
import LinkedList


// Default to the base ID most commonly used.
// bspd is the id of boot of speed
public function createBasicItem(int newId) returns ItemDefinition
    return createBasicItem(newId, 'bspd')

public function createUsableItem(int newId) returns ItemDefinition
    return createUsableItem(newId, 'bspd')

public function createPerishableItem(int newId) returns ItemDefinition
    return createPerishableItem(newId, 'bspd')

function createBasicItem(int newId, int oldId) returns ItemDefinition
    return new ItemDefinition(newId, oldId)
        ..setGoldCost(0)
        ..setDroppedWhenCarrierDies(true)
        ..setHotkey("")
        ..setLevel(0)
        ..setHitPoints(75)
        ..setClassification("Permanent")
        ..setMaxStack(0)

function createUsableItem(int newId, int oldId) returns ItemDefinition
    return createBasicItem(newId, oldId)
        ..setActivelyUsed(true)

function createPerishableItem(int newId, int oldId) returns ItemDefinition
    return createUsableItem(newId, oldId)
        ..setPerishable(true)

public class IttItem extends ItemDefinition
    construct(int itemId, string icon, string model, string name, string hotkey, string toolTipExt, int cost, real scale, string abilities)
        super(itemId, 'bspd')
        this.setName(name)
        this.setModelUsed(model)
        this.setLumberCost(cost)
        this.setInterfaceIcon(icon)
        this.setDescription(toolTipExt)
        this.setAbilities(abilities)
        this.setScalingValue(scale)
        this.setHotkey(hotkey)
        this.setTooltipExtended(toolTipExt)
        setCommonPart()

    construct(int itemId, string icon, string model, string name, string hotkey, string toolTipExt, int cost, real scale, LinkedList<int> tinting, string abilities)
        super(itemId, 'bspd')
        this.setName(name)
        this.setModelUsed(model)
        this.setLumberCost(cost)
        this.setInterfaceIcon(icon)
        this.setDescription(toolTipExt)
        this.setAbilities(abilities)
        this.setHotkey(hotkey)
        this.setTintingColor1Red(tinting.dequeue())
        this.setTintingColor2Green(tinting.dequeue())
        this.setTintingColor3Blue(tinting.dequeue())
        this.setTooltipBasic("Trade for " + name)
        this.setTooltipExtended(toolTipExt)
        this.setScalingValue(scale)
        setCommonPart()

    /**
    Basic field settings for island troll tribes items
    **/
    function setCommonPart()
        this.setGoldCost(0)
        this.setDroppedWhenCarrierDies(true)
        this.setHotkey("")
        this.setLevel(0)
        this.setHitPoints(75)
        this.setClassification("Permanent")
        this.setMaxStack(0)

    /**
    Only used to place item button in the shop panel, might not be very useful to be honest
    **/
    function setBtnPos(int x, int y)
        this.setButtonPositionX(x)
        this.setButtonPositionY(y)

//Item Abilities
//Attack Bonus ability (Axes)
public class AttackBonusAbility extends AbilityDefinitionAttackBonusPlus1
    construct(int abilId, string name, int damage)
        super(abilId)
        this.setName("Attack Bonus ({0})".format(name))
        this.setAttackBonus(1, damage)
        this.setEditorSuffix("(Wurst)")

// The stats bonus Ability for Item
public class StatBonusAbility extends AbilityDefinitionAttributeModifierSkill
    construct(int abilId, string name, int strength, int agility, int intelligence)
        super(abilId)
        this.setName("Stats Bonus ({0})".format(name))
        this.setStrengthBonus(1, strength)
        this.setAgilityBonus(1, agility)
        this.setIntelligenceBonus(1, intelligence)
        this.setEditorSuffix("(Wurst)")

public class MoveSpeedBonusAbility extends AbilityDefinitionMoveSpeedBonus
    construct(int abilId, string name, int speedBonus)
        super(abilId)
        this.setName("Move Speed Bonus ({0})".format(name))
        this.setMovementSpeedBonus(1, speedBonus)
        this.setEditorSuffix("(Wurst)")

public class AttackSpeedBonusAbility extends AbilityDefinitionAttackSpeedIncrease
    construct(int abilId, string name, real attackSpeedBonus)
        super(abilId)
        this.setName("Attack Speed Bonus ({0})".format(name))
        this.setAttackSpeedIncrease(1, attackSpeedBonus)
        this.setEditorSuffix("(Wurst)")

public class ItemChannelCast extends ChannelAbilityPreset
    construct(int abilId, string name, Targettype targetType, string targetsAllowed, real castRange, real cooldown)
        super(abilId, 1, true)
        this.setName(name + " Cast")
        this.setCheckDependencies(false)
        this.setHeroAbility(false)
        this.setItemAbility(true)
        this.presetTargetTypes(targetType)
        this.setManaCost(1, 0)
        this.setCooldown(1, cooldown)
        this.setCastRange(1, castRange)
        this.setTargetsAllowed(1, targetsAllowed)
        this.setEditorSuffix("(Wurst)")

public class ItemWindWalkCast extends AbilityDefinitionWindWalk
    construct(int abilId, string name, real cooldown)
        super(abilId)
        this.setArtCaster("")
        this.setArtEffect("")
        this.setArtTarget("")
        this.setArtSpecial("")
        this.setHeroAbility(false)
        this.setItemAbility(true)
        this.setLevels(1)
        this.setName(name + " Cast")
        this.setTooltipNormal(1, "dummy spell")
        this.setTooltipNormalExtended(1, "dummy spell")
        this.setCooldown(1, cooldown)
        this.setManaCost(1, 0)
        this.setAnimationNames("")
        this.setDurationHero(1, 0.01)
        this.setCastingTime(1, 0)
        this.setDurationNormal(1, 0.01)
        this.setEffectSound("")
