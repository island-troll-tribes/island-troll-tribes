package ModifySelected

// Standard library imports:
import ClosureForGroups

// Third-party imports:
import Toolkit

init
    // Heals each unit fully.
    registerToolkitCommand("heal") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setHP(target.getMaxHP())

    // Recharges each unit fully.
    registerToolkitCommand("recharge") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setMana(target.getMaxMana())

    // Kills each unit.
    registerToolkitCommand("kill") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.kill()

    // Changes the owner for each unit, defaulting to the triggerer.
    registerToolkitCommand("owner") (triggerPlayer, arguments) ->
        // Precompute the new owner based on the command.
        let owner = arguments.size() > 1
            ? players[arguments.get(1).toInt()]
            : triggerPlayer

        // Modify ownership.
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setOwner(owner, true)

    // Sets level for each hero.
    registerToolkitCommand("lvl") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setLevel(arguments.get(1).toInt(), false)

    // Sets strength for each hero.
    registerToolkitCommand("str") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setStr(arguments.get(1).toInt())

    // Sets agility for each hero.
    registerToolkitCommand("agi") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setAgi(arguments.get(1).toInt())

    // Sets intelligence for each hero.
    registerToolkitCommand("int") (triggerPlayer, arguments) ->
        forUnitsSelected(triggerPlayer) (unit target) ->
            target.setInt(arguments.get(1).toInt())
