package Hawk
import ID
import ClosureForGroups
import Classes
import BonyAnimal
import LinkedList

public class Hawk extends BonyAnimal
    private static let unitTypeId = UNIT_HAWK

    static function initialize()
        register(unitTypeId, hawk -> new Hawk(hawk))

    construct(unit whichUnit)
        super(whichUnit)

    construct(player whichPlayer, vec2 pos)
        super(whichPlayer, pos)

    construct(player whichPlayer, vec2 pos, angle facing)
        super(whichPlayer, pos, facing)

    construct(vec2 pos)
        super(players[PLAYER_NEUTRAL_AGGRESSIVE], pos)

    override function getTypeId() returns int
        return unitTypeId

    override function getDrops() returns LinkedList<int>
        let drops = super.getDrops()
            ..add(ITEM_HAWK_EGG)

        forNearestUnit(getPos(), 400, Filter(-> begin
            return getTrollBaseClass(GetFilterUnit()) == UNIT_BEAST_MASTER
        end), bm -> begin
            if bm != null
                drops.add(ITEM_HAWK_EGG)
        end)

        return drops

init
    Hawk.initialize()
