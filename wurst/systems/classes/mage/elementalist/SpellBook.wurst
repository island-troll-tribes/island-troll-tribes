package SpellBook

import AbilityObjEditing
import ClosureForGroups
import GameConfig
import ChatCommands
import LinkedList

@configurable constant string array SPELLS = ["XEZS, XEMS, XFPS, ESEF, ESOC, ESMD", "XEZS, XEMS, XFPS, ESEF, ESOC, ESMD", "XEZS, XEMS, XFPS, ESEF, ESOC, ESMD"]

@compiletime function createSpellbook()
    new AbilityDefinitionSpellBook('XESB')
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(1)
    ..setButtonPositionResearchX(1)
    ..setButtonPositionResearchY(1)
    ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setIconResearch("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setIconTurnOff("ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
    ..setHeroAbility(true)
    ..setItemAbility(false)
    ..setLevels(3)
    ..presetBaseOrderID(lvl -> "spellbook")
    ..setHotkeyLearn("Z")
    ..setHotkeyNormal("Z")
    ..setName("New Elementalist")
    ..setTooltipLearn("Learn Spells of The Elementalist")
    ..setTooltipLearnExtended("Harness the elements to do your bidding")
    ..presetMaximumSpells(lvl -> 8)
    ..presetMinimumSpells(lvl -> 8)
    ..presetSpellList(lvl -> SPELLS[lvl-1])
    ..presetCooldown(lvl -> 0)
    ..presetTooltipNormal(lvl -> "Look up elemental spell (|cffffcc00Z|r)")
    ..presetTooltipNormalExtended(lvl -> "Contains various spells n such")
    ..presetSharedSpellCooldown(lvl -> false)

class SpellsCommandHandler implements CommandHandler
    function run(player triggerPlayer, LinkedList<string> arguments)
        if (gameConfig.isTestModeEnabled())
            printTimedToPlayer("Added spellbook to selected heroes", 5., triggerPlayer)
            forUnitsSelected(triggerPlayer) u ->
                if (u.isType(UNIT_TYPE_HERO))
                    u.addAbility('XESB')
        else
        printTimedToPlayer("Requires test mode!", 5., triggerPlayer)
    
init
    registerCommandAll("-spells", new SpellsCommandHandler())

        