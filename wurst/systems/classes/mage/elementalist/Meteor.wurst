package Meteor

import RegisterEvents
import ClosureTimers
import ClosureForGroups
import Orders
import DummyCaster

@configurable constant int ABILITY_ID = 'A0GQ'
@configurable constant int DUMMY_STUN_ABILITY_ID = 'A0GR'
@configurable constant real IMPACT_DAMAGE = 70
@configurable constant real IMPACT_RADIUS = 175
@configurable constant real IMPACT_DELAY = 1
@configurable constant real PROJECTILE_INITIAL_HEIGHT = 800
@configurable constant string PROJECTILE_EFFECT_PATH = "Abilities\\Weapons\\DemonHunterMissile\\DemonHunterMissile.mdl" 
@configurable constant string EXPLOSION_EFFECT_PATH = "Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl" 

function onCast()
    var caster = GetSpellAbilityUnit()
    var casterpos = caster.getPos()
    var owner = caster.getOwner()
    vec2 target2D = vec2(GetSpellTargetX(), GetSpellTargetY())
    vec3 target3D = target2D.withTerrainZ(0)
    vec3 startPos = vec2(casterpos.x, casterpos.y).withTerrainZ(PROJECTILE_INITIAL_HEIGHT)
    vec3 projectilePath = target3D - startPos

    var projectile = addEffect(PROJECTILE_EFFECT_PATH, startPos)
    projectile.setScale(1.2)

    //Grant vision
    doAfter(0.3) ->
        var vision = createVision(owner, target2D, 400, true)
        vision.start()
        doAfter(IMPACT_DELAY + 0.7) ->
            vision.destr()

    //Periodic loop for landing projectile
    real elapsedTime = 0
    doPeriodicallyTimed(0.05, IMPACT_DELAY) cb ->
        //Use elapsed time relative to impact delay to calculate position
        elapsedTime = elapsedTime + 0.05
        real ratio = elapsedTime / IMPACT_DELAY
        vec3 currentPos = startPos + ratio * projectilePath
        projectile.setPos(currentPos)

        //Impact effects here
        if cb.isLast()
            projectile.destr()
            forUnitsInRange(target2D, IMPACT_RADIUS) u ->
                if u.isAlive() and u.getOwner().isEnemyOf(owner) and not u.isType(UNIT_TYPE_STRUCTURE) and not u.isType(UNIT_TYPE_FLYING) and not u.isInvulnerable()
                    caster.damageTarget(u, IMPACT_DAMAGE, ATTACK_TYPE_MAGIC)
                    new DummyCaster().castTarget(owner, DUMMY_STUN_ABILITY_ID, 1, Orders.thunderbolt, u)

            var explosion = addEffect(EXPLOSION_EFFECT_PATH, target3D)
            explosion.setScale(0.5)
            doAfter(3) ->
                explosion.destr()
            

init
    registerSpellEffectEvent(ABILITY_ID, () -> onCast())
