package PetDeath
import RegisterEvents
import ClosureTimers

function setBackToBMTame(player p)
    SetPlayerAbilityAvailable(p, SPELL_PET_TAME, true) //tame
    SetPlayerAbilityAvailable(p, SPELL_PET_RELEASE, false) //release
    SetPlayerAbilityAvailable(p, SPELL_PET_FOLLOW, false) //Follow
    SetPlayerAbilityAvailable(p, SPELL_PET_STAY, false) //stay
    SetPlayerAbilityAvailable(p, SPELL_PET_SLEEP, false) //sleefalse
    SetPlayerAbilityAvailable(p, SPELL_PET_ATTACK, false) //attack
    SetPlayerAbilityAvailable(p, SPELL_PET_SCOUT, false) //scout
    SetPlayerAbilityAvailable(p, SPELL_PET_BRING_ITEMS, false) //bring items
    SetPlayerAbilityAvailable(p, SPELL_PET_GO_TO_HATCHERY, false) //go to hatchery
    SetPlayerAbilityAvailable(p, SPELL_PET_DROP_ITEMS, false) //drofalse items


init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH) ->
        let dying = GetDyingUnit()
        var wasPet = false

        if udg_babyPets.contains(dying)
            udg_babyPets.removeUnit(dying)
            wasPet = true
        else if udg_midPets.contains(dying)
            udg_midPets.removeUnit(dying)
            wasPet = true
        else if udg_pets.contains(dying)
            udg_pets.removeUnit(dying)
            wasPet = true

        if wasPet
            let owner = dying.getOwner()
            if localPlayer.isAllyOf(owner)
                print(GENERAL_COLOR + "A pet has died!")
            
            nullTimer() ->
                setBackToBMTame(owner)
