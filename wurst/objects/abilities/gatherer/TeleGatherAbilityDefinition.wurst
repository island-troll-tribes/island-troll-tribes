package TeleGatherAbilityDefinition

// Standard-library imports:
import Assets
import BuffObjEditing
import ChannelAbilityPreset

// Third-party imports:
import Lodash

// Local imports:
import LocalObjectIDs
import ToolTipsUtils

public let DUMMY_TELE_GATHER_ID = compiletime(ABIL_ID_GEN.next())
public let BUFF_TELE_TARGET = compiletime(BUFF_ID_GEN.next())
public let BUFF_TELE_GATHER = compiletime(BUFF_ID_GEN.next())
let BUFF_ORIGINAL_ID = 'BOac'
let BUFF_TARGET_ORIGINAL_ID = 'BHds'

let CAST_RANGE = 100.
let COOLDOWN = 120.
let MANACOST = 15
let DURATION = 30.

let OMNI_DURATION = DURATION + 4 * 20
let OMNI_MANACOST = 30

let TOOLTIP_NORM = "Tele-Gathering"
let TOOLTIP_EXTENDED = "The Tele-Gatherer magically links up with the targeted campfire as its "+
                       "outlet and starts Tele-gathering. While Tele-Gathering, items "+
                       "picked up are warped directly to the outlet."

let TARGET_ALLOWED = commaList(TargetsAllowed.sapper, TargetsAllowed.friend) // I didn't manage to make it castable on allied fire only, so lets say you can cast it on enemy fire...
let DUMMY_TARGET_ALLOWED = commaList(TargetsAllowed.air,TargetsAllowed.friend,TargetsAllowed.ground,TargetsAllowed.neutral,TargetsAllowed.organic)


function createTargetBuff()
    new BuffDefinition(BUFF_TELE_TARGET, BUFF_TARGET_ORIGINAL_ID)
        ..setIcon(Icons.bTNSpellSteal)
        ..setTargetAttachmentPoint0(1, "overhead")
        ..setArtTarget(1, Abilities.crystalBallCaster)
        ..setTooltipNormal(1, "Tele-Gathering target")
        ..setTooltipNormalExtended(1, "Items are being Tele-Gathered to this fire.")
        ..setEditorSuffix(1, "(Wurst)")

function createTeleGatherBuff()
    new BuffDefinition(BUFF_TELE_GATHER, BUFF_ORIGINAL_ID)
        ..setIcon(Icons.bTNSpellSteal)
        ..setTargetAttachmentPoint0(1, "overhead")
        ..setArtTarget(1, Abilities.faerieFireTarget)
        ..setTooltipNormal(1, TOOLTIP_NORM)
        ..setTooltipNormalExtended(1, "This unit is using Tele-Gathering. Items picked up will be warp to its campfire.")
        ..setEditorSuffix(1, "(Wurst)")

// Dummy casting refer to the spell casted on the caster
public class OldTeleGatherDummyCasting extends AbilityDefinitionCurse
    construct(int newAbilityId)
        super(newAbilityId)
        this.setDummyAbility()
        this.setCheckDependencies(false)
        this.setHeroAbility(true)
        this.setLevels(4)
        this.presetBuffs(lvl -> toRawCode(BUFF_TELE_GATHER))
        this.presetManaCost(lvl -> 0)
        this.presetDurationHero(lvl -> DURATION + (lvl * 20))
        this.presetDurationNormal(lvl -> DURATION + (lvl * 20))
        this.setName("Tele-Gather person buff")
        this.presetChancetoMiss(lvl -> 0)
        this.presetTargetsAllowed(lvl -> DUMMY_TARGET_ALLOWED)
        this.setEditorSuffix("(Wurst)")

//Small Work around, didn't manage to dummycast lvl 2,3 or 4 ability in telegathering.wurst
public class TeleGatherDummyCasting extends AbilityDefinitionCurse
    construct(int newAbilityId)
        super(newAbilityId)
        this.setLevels(1)
        this.presetBuffs(lvl -> toRawCode(BUFF_TELE_GATHER))
        this.presetManaCost(lvl -> 0)
        this.presetDurationHero(lvl -> DURATION + (5 * 20))
        this.presetDurationNormal(lvl -> DURATION + (5 * 20))
        this.setName("Tele-Gather person buff")
        this.presetChancetoMiss(lvl -> 0)
        this.presetTargetsAllowed(lvl -> DUMMY_TARGET_ALLOWED)
        this.setEditorSuffix("(Wurst)")

public class TeleGatheringDefinition extends AbilityDefinitionCurse
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED+makeToolTipDuration(DURATION + (lvl * 20), COOLDOWN))
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.setIconNormal(Icons.bTNSpellSteal)
        this.setIconResearch(Icons.bTNSpellSteal)
        this.presetTargetsAllowed(lvl -> TARGET_ALLOWED)
        this.presetChancetoMiss(lvl -> 0)
        this.presetBuffs(lvl -> toRawCode(BUFF_TELE_TARGET))
        this.presetCastRange(lvl -> CAST_RANGE)
        this.setEditorSuffix("(Wurst)")

class TeleGathering extends TeleGatheringDefinition
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, hotkey, buttonPos)
        this.setHeroAbility(true)
        this.setLevels(3)
        this.presetCooldown(lvl -> COOLDOWN)
        this.presetManaCost(lvl -> MANACOST + (lvl * 5))
        this.presetDurationHero(lvl -> DURATION + (lvl * 20))
        this.presetDurationNormal(lvl -> DURATION + (lvl * 20))
        this.presetBuffs(lvl -> toRawCode(BUFF_TELE_TARGET))
        this.presetTooltipNormal(lvl -> makeToolTipNormHero(hotkey, TOOLTIP_NORM, lvl))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED+makeToolTipDuration(DURATION + (lvl * 20), COOLDOWN))
        this.setTooltipLearn(makeToolTipLearn(TOOLTIP_NORM))
        this.setTooltipLearnExtended(TOOLTIP_EXTENDED)
        this.presetTargetsAllowed(lvl -> TARGET_ALLOWED)
        this.setEditorSuffix("(Wurst)")

class OmnigathererTeleGathering extends TeleGatheringDefinition
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId, hotkey, buttonPos)
        this.presetManaCost(lvl -> OMNI_MANACOST)
        this.presetDurationHero(lvl -> OMNI_DURATION)
        this.presetDurationNormal(lvl -> OMNI_DURATION)
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED+makeToolTipDuration(OMNI_DURATION, COOLDOWN))
        this.presetTargetsAllowed(lvl -> TARGET_ALLOWED)
        this.setEditorSuffix("(Wurst)")

@compiletime function createTeleGatheringSpells()
    createTargetBuff()
    createTeleGatherBuff()
    new TeleGatherDummyCasting(DUMMY_TELE_GATHER_ID)
    new TeleGathering(ABILITY_TELE_RADAR_GATHER, "E", new Pair(1, 1))
    new TeleGathering(ABILITY_TELE_HERB_GATHER, "E", new Pair(1, 1))
    new OmnigathererTeleGathering(ABILITY_TELE_GATHER_OMNI, "F", new Pair(1, 1))
