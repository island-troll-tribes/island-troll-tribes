package Leavers

// Standard library imports:
import LinkedList
import RegisterEvents

// Local imports:
import Game
import PlayerExtensions

function handlePlayerLeave()
    let leaver = GetTriggerPlayer()

    if leaver.isObserver() or leaver.getTribe().isDefeated()
        return

    let allies = leaver.getTribe().getMembers()
    let alliesInGame = allies
        .filter(member -> member != leaver and member.isIngame())
    let alliesInGameCount = alliesInGame.size()

    if alliesInGameCount == 0
        allies
        .map(member -> member.getTroll())
        .filter(troll -> troll.isAlive())
        .forEach(troll -> troll.kill())
        return

    for member in alliesInGame
        leaver
            ..setPlayerAlliance(member, ALLIANCE_SHARED_VISION, true)
            ..setPlayerAlliance(member, ALLIANCE_SHARED_CONTROL, true)
            ..setPlayerAlliance(member, ALLIANCE_SHARED_ADVANCED_CONTROL, true)

init
    registerPlayerEvent(EVENT_PLAYER_LEAVE) ->
        print(GetTriggerPlayer().getNameColored() + " has left the game.")

    registerGameStartEvent() ->
        registerPlayerEvent(EVENT_PLAYER_LEAVE, function handlePlayerLeave)
