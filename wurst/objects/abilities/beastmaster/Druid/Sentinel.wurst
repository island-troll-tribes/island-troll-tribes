package Sentinel


// Standard Library Imports:
import AbilityObjEditing
import Assets

// Local Imports:
import LocalObjectIDs
import ToolTipsUtils

let COOLDOWN = 60.
let MANA_COST = 15
let HOVERING_SIGHT = 700.
let HOVERING_HEIGHT = 125.
let MAX_OWLS = 0
let OWL_DURATION = 300.
let CAST_RANGE = 150.
let BUTTON_POS_X = 0
let BUTTON_POS_Y = 0
let HOTKEY = "Q"
let NAME = "Sentinel"
let TOOLTIP_BASIC = "Sentinel Owl"
let TOOLTIP_EXT   = "Send out a Sentinel Owl to watch from a nearby tree for " + OWL_DURATION.toToolTipLightBlue() + "seconds. "
                    + "The Owl will disappear if the tree is attacked."
                    + makeToolTipCooldown(COOLDOWN)


// TODO: Update the Owl duration field (Esn5) once the stdlib's updated
@compiletime function createSentinelAbility() returns AbilityDefinitionSentinel
    return new AbilityDefinitionSentinel(ABILITY_SENTINEL)
        ..setName(NAME)
        ..setCooldown(1, COOLDOWN)
        ..setButtonPositionNormalX(BUTTON_POS_X)
        ..setButtonPositionNormalY(BUTTON_POS_Y)
        ..setHotkeyNormal(HOTKEY)
        ..setRequirements("")
        ..setRequiredLevel(0)
        ..setCheckDependencies(false)
        ..setManaCost(0, MANA_COST)
        ..setHeroAbility(true)
        ..setHoveringSightRadius(1, HOVERING_SIGHT)
        ..setHoveringHeight(1, HOVERING_HEIGHT)
        ..setNumberofOwls(1, MAX_OWLS)
        ..setCastRange(1, CAST_RANGE)
        ..setIconNormal(Icons.bTNSentinel)
        ..setTooltipNormal(1, makeToolTipNorm(HOTKEY, TOOLTIP_BASIC))
        ..setTooltipNormalExtended(1, TOOLTIP_EXT)
